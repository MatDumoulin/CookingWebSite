{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/angular-material.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.html","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/controls/autocomplete-input/autocomplete-input.component.css","webpack:///./src/app/controls/autocomplete-input/autocomplete-input.component.html","webpack:///./src/app/controls/autocomplete-input/autocomplete-input.component.ts","webpack:///./src/app/controls/autocomplete-input/autocomplete-input.module.ts","webpack:///./src/app/controls/autocomplete-input/genre-autocomplete-input/genre-autocomplete-input.component.ts","webpack:///./src/app/controls/autocomplete-input/ingredient-autocomplete-input/ingredient-autocomplete-input.component.ts","webpack:///./src/app/controls/autocomplete-input/recipename-autocomplete-input/recipename-autocomplete-input.component.ts","webpack:///./src/app/controls/controls.module.ts","webpack:///./src/app/controls/custom-listbox/custom-listbox.component.ts","webpack:///./src/app/controls/custom-listbox/custom-listbox.css","webpack:///./src/app/controls/custom-listbox/custom-listbox.html","webpack:///./src/app/controls/custom-listbox/custom-listbox.module.ts","webpack:///./src/app/controls/star-rating/star-rating.component.ts","webpack:///./src/app/controls/star-rating/star-rating.css","webpack:///./src/app/controls/star-rating/star-rating.html","webpack:///./src/app/controls/star-rating/star-rating.module.ts","webpack:///./src/app/controls/star-rating/star/star.model.ts","webpack:///./src/app/controls/time-input/time-input.component.css","webpack:///./src/app/controls/time-input/time-input.component.html","webpack:///./src/app/controls/time-input/time-input.component.ts","webpack:///./src/app/controls/time-input/time-input.module.ts","webpack:///./src/app/controls/time-input/time/time.class.ts","webpack:///./src/app/core/authentication/auth-guard.service.ts","webpack:///./src/app/core/authentication/auth-http-interceptor.service.ts","webpack:///./src/app/core/authentication/authentication.service.ts","webpack:///./src/app/core/authentication/google-authentication/google-authentication.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/images/image-loader.service.ts","webpack:///./src/app/core/images/image.model.ts","webpack:///./src/app/core/logger/basic-logger.service.ts","webpack:///./src/app/core/logger/index.ts","webpack:///./src/app/core/logger/logger.service.ts","webpack:///./src/app/core/store/auth/actions/auth.action.ts","webpack:///./src/app/core/store/auth/actions/index.ts","webpack:///./src/app/core/store/auth/effects/auth.effects.ts","webpack:///./src/app/core/store/auth/effects/index.ts","webpack:///./src/app/core/store/auth/index.ts","webpack:///./src/app/core/store/auth/reducers/auth.reducer.ts","webpack:///./src/app/core/store/auth/reducers/index.ts","webpack:///./src/app/core/store/auth/selectors/auth.selector.ts","webpack:///./src/app/core/store/auth/selectors/index.ts","webpack:///./src/app/core/store/data-store.module.ts","webpack:///./src/app/core/store/index.ts","webpack:///./src/app/core/store/recipes/actions/index.ts","webpack:///./src/app/core/store/recipes/actions/recipes.action.ts","webpack:///./src/app/core/store/recipes/effects/error-handling.effect.ts","webpack:///./src/app/core/store/recipes/effects/index.ts","webpack:///./src/app/core/store/recipes/effects/recipes.effects.ts","webpack:///./src/app/core/store/recipes/index.ts","webpack:///./src/app/core/store/recipes/reducers/index.ts","webpack:///./src/app/core/store/recipes/reducers/recipes.reducer.ts","webpack:///./src/app/core/store/recipes/selectors/index.ts","webpack:///./src/app/core/store/recipes/selectors/recipes.selectors.ts","webpack:///./src/app/core/store/store-state.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/pages/home-page/home-page.component.css","webpack:///./src/app/pages/home-page/home-page.component.html","webpack:///./src/app/pages/home-page/home-page.component.ts","webpack:///./src/app/pages/intro-page/intro-page.component.ts","webpack:///./src/app/pages/intro-page/intro-page.css","webpack:///./src/app/pages/intro-page/intro-page.html","webpack:///./src/app/pages/login-page/login-page.component.css","webpack:///./src/app/pages/login-page/login-page.component.html","webpack:///./src/app/pages/login-page/login-page.component.ts","webpack:///./src/app/pages/not-found/not-found.component.css","webpack:///./src/app/pages/not-found/not-found.component.html","webpack:///./src/app/pages/not-found/not-found.component.ts","webpack:///./src/app/pages/pages.module.ts","webpack:///./src/app/pages/recipe-creator/recipe-creator-form/recipe-creator-form.component.css","webpack:///./src/app/pages/recipe-creator/recipe-creator-form/recipe-creator-form.component.html","webpack:///./src/app/pages/recipe-creator/recipe-creator-form/recipe-creator-form.component.ts","webpack:///./src/app/pages/recipe-creator/recipe-creator.component.css","webpack:///./src/app/pages/recipe-creator/recipe-creator.component.html","webpack:///./src/app/pages/recipe-creator/recipe-creator.component.ts","webpack:///./src/app/pages/recipe-grid/grid-layout/grid-layout.component.css","webpack:///./src/app/pages/recipe-grid/grid-layout/grid-layout.component.html","webpack:///./src/app/pages/recipe-grid/grid-layout/grid-layout.component.ts","webpack:///./src/app/pages/recipe-grid/recipe-grid.component.css","webpack:///./src/app/pages/recipe-grid/recipe-grid.component.html","webpack:///./src/app/pages/recipe-grid/recipe-grid.component.ts","webpack:///./src/app/pages/recipe-page/recipe-page.component.ts","webpack:///./src/app/pages/recipe-page/recipe-page.css","webpack:///./src/app/pages/recipe-page/recipe-page.html","webpack:///./src/app/pages/recipe-viewer/recipe-viewer.component.css","webpack:///./src/app/pages/recipe-viewer/recipe-viewer.component.html","webpack:///./src/app/pages/recipe-viewer/recipe-viewer.component.ts","webpack:///./src/app/recipes/equipment/equipment-listbox/equipment-listbox.component.css","webpack:///./src/app/recipes/equipment/equipment-listbox/equipment-listbox.component.html","webpack:///./src/app/recipes/equipment/equipment-listbox/equipment-listbox.component.ts","webpack:///./src/app/recipes/equipment/equipment-listitem/equipment-listitem.component.css","webpack:///./src/app/recipes/equipment/equipment-listitem/equipment-listitem.component.html","webpack:///./src/app/recipes/equipment/equipment-listitem/equipment-listitem.component.ts","webpack:///./src/app/recipes/genre/shared/genre.service.ts","webpack:///./src/app/recipes/ingredients/ingredient-listbox/ingredient-listbox.component.css","webpack:///./src/app/recipes/ingredients/ingredient-listbox/ingredient-listbox.component.html","webpack:///./src/app/recipes/ingredients/ingredient-listbox/ingredient-listbox.component.ts","webpack:///./src/app/recipes/ingredients/ingredient-listbox/ingredient-listbox.module.ts","webpack:///./src/app/recipes/ingredients/ingredient-section-wrapper/ingredient-section-wrapper.component.css","webpack:///./src/app/recipes/ingredients/ingredient-section-wrapper/ingredient-section-wrapper.component.html","webpack:///./src/app/recipes/ingredients/ingredient-section-wrapper/ingredient-section-wrapper.component.ts","webpack:///./src/app/recipes/ingredients/ingredient-section/ingredient-section.component.css","webpack:///./src/app/recipes/ingredients/ingredient-section/ingredient-section.component.html","webpack:///./src/app/recipes/ingredients/ingredient-section/ingredient-section.component.ts","webpack:///./src/app/recipes/ingredients/shared/ingredient-section.model.ts","webpack:///./src/app/recipes/ingredients/shared/ingredient.model.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.datasource.ts","webpack:///./src/app/recipes/shared/api-get-recipes.service.ts","webpack:///./src/app/recipes/shared/api-specific-recipe.service.ts","webpack:///./src/app/recipes/shared/index.ts","webpack:///./src/app/recipes/shared/infinite-scroll.class.ts","webpack:///./src/app/recipes/shared/recipe.model.ts","webpack:///./src/app/recipes/steps/shared/step-section.model.ts","webpack:///./src/app/recipes/steps/step-listbox/step-listbox.component.css","webpack:///./src/app/recipes/steps/step-listbox/step-listbox.component.html","webpack:///./src/app/recipes/steps/step-listbox/step-listbox.component.ts","webpack:///./src/app/recipes/steps/step-section-wrapper/step-section-wrapper.component.css","webpack:///./src/app/recipes/steps/step-section-wrapper/step-section-wrapper.component.html","webpack:///./src/app/recipes/steps/step-section-wrapper/step-section-wrapper.component.ts","webpack:///./src/app/recipes/steps/step-section/step-section.component.css","webpack:///./src/app/recipes/steps/step-section/step-section.component.html","webpack:///./src/app/recipes/steps/step-section/step-section.component.ts","webpack:///./src/app/routing/animations/index.ts","webpack:///./src/app/routing/animations/routing.animation.ts","webpack:///./src/app/routing/load-recipe-resolver.service.ts","webpack:///./src/app/routing/not-found-interceptor.service.ts","webpack:///./src/app/routing/router-store/index.ts","webpack:///./src/app/routing/router-store/reducers/index.ts","webpack:///./src/app/routing/routing.module.ts","webpack:///./src/app/search/advanced-recipe-search/advanced-recipe-search.component.css","webpack:///./src/app/search/advanced-recipe-search/advanced-recipe-search.component.html","webpack:///./src/app/search/advanced-recipe-search/advanced-recipe-search.component.ts","webpack:///./src/app/search/advanced-recipe-search/advanced-recipe-search.module.ts","webpack:///./src/app/search/advanced-recipe-search/shared/index.ts","webpack:///./src/app/search/advanced-recipe-search/shared/search-intent-matcher.ts","webpack:///./src/app/sidenav-content/sidenav-content.component.css","webpack:///./src/app/sidenav-content/sidenav-content.component.html","webpack:///./src/app/sidenav-content/sidenav-content.component.ts","webpack:///./src/app/top-nav/avatar/avatar.component.css","webpack:///./src/app/top-nav/avatar/avatar.component.html","webpack:///./src/app/top-nav/avatar/avatar.component.ts","webpack:///./src/app/top-nav/top-nav.component.ts","webpack:///./src/app/top-nav/top-nav.css","webpack:///./src/app/top-nav/top-nav.html","webpack:///./src/app/utils/only-number.directive.ts","webpack:///./src/app/utils/pipes/highlight/highlight.pipe.ts","webpack:///./src/app/utils/utils.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule\r\n} from '@angular/material';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nimport { NgMdTimeInputModule } from 'ng-md-time-input';\r\n\r\n@NgModule({\r\n    exports: [\r\n        BrowserAnimationsModule, // To enable animations for angular-material.\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatTableModule,\r\n        CdkTableModule,\r\n        MatDialogModule,\r\n        MatSidenavModule,\r\n        MatCardModule,\r\n        MatToolbarModule,\r\n        MatSnackBarModule,\r\n        MatTooltipModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatInputModule,\r\n        MatTabsModule,\r\n        MatSelectModule,\r\n        MatChipsModule,\r\n        MatProgressSpinnerModule,\r\n        MatMenuModule,\r\n        NgMdTimeInputModule\r\n    ]\r\n})\r\nexport class AngularMaterialModule { }\r\n","import { Component, OnDestroy, ChangeDetectorRef } from \"@angular/core\";\r\nimport { MediaMatcher } from \"@angular/cdk/layout\";\r\n// Router animation\r\nimport { fadeAnimation } from \"./routing/animations\";\r\n// Ngrx Store\r\nimport { Store } from \"@ngrx/store\";\r\nimport * as fromStore from \"./core/store\";\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: \"mcb-app\",\r\n    templateUrl: \"app.html\",\r\n    animations: [fadeAnimation] // register the animation\r\n})\r\nexport class AppComponent implements OnDestroy {\r\n    private _mobileQueryListener: () => void;\r\n    mobileQuery: MediaQueryList;\r\n    isUserOnMobile = true;\r\n    isLoggedIn$: Observable<boolean>;\r\n    // Display options for the sidenav when it is on desktop;\r\n    readonly desktopSidenavOptions: SidenavOptions = {\r\n        fixedInViewport: true,\r\n        disableClose: true,\r\n        mode: \"side\",\r\n        opened: true,\r\n        fixedTopGap: 64\r\n    };\r\n    // Display options for the sidenav when it is on mobile;\r\n    readonly mobileSidenavOptions: SidenavOptions = {\r\n        fixedInViewport: false,\r\n        disableClose: false,\r\n        mode: \"over\",\r\n        opened: false,\r\n        fixedTopGap: 0\r\n    };\r\n\r\n    sidenavOptions = this.mobileSidenavOptions;\r\n\r\n    constructor(\r\n        changeDetectorRef: ChangeDetectorRef,\r\n        media: MediaMatcher,\r\n        private store: Store<fromStore.DataState>\r\n    ) {\r\n        // Listening to the screen size in order to display either in mobile or desktop mode.\r\n        this.mobileQuery = media.matchMedia(\"(max-width: 600px)\");\r\n        this._mobileQueryListener = () => {\r\n            this.handleScreenChange();\r\n            changeDetectorRef.detectChanges();\r\n        };\r\n        this.mobileQuery.addListener(this._mobileQueryListener);\r\n\r\n        // Setting up the sidenav for mobile if the user is on mobile,\r\n        // Or for desktop if the user is on desktop.\r\n        this.handleScreenChange();\r\n        this.handleLogIn();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.mobileQuery.removeListener(this._mobileQueryListener);\r\n    }\r\n\r\n    private isMobile(): boolean {\r\n        return this.mobileQuery.matches;\r\n    }\r\n\r\n    private handleScreenChange() {\r\n        // If the user is not on mobile anymore, change display to desktop\r\n        if (this.isUserOnMobile && !this.isMobile()) {\r\n            this.isUserOnMobile = false;\r\n            this.sidenavOptions = this.desktopSidenavOptions;\r\n        }\r\n        // If user is not on desktop anymore, change display to mobile.\r\n        else if (!this.isUserOnMobile && this.isMobile()) {\r\n            this.isUserOnMobile = true;\r\n            this.sidenavOptions = this.mobileSidenavOptions;\r\n        }\r\n    }\r\n\r\n    private handleLogIn() {\r\n        this.isLoggedIn$ = this.store.select(fromStore.getLoggedIn);\r\n    }\r\n}\r\n\r\ninterface SidenavOptions {\r\n    fixedInViewport: boolean;\r\n    disableClose: boolean;\r\n    mode: string;\r\n    opened: boolean;\r\n    fixedTopGap: number;\r\n}\r\n","module.exports = \"<div class=\\\"website-container\\\">\\r\\n    <mcb-top-nav [sideNavRef]=\\\"isUserOnMobile ? sidenav : null\\\"></mcb-top-nav>\\r\\n\\r\\n    <mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n        <mat-sidenav [mode]=\\\"sidenavOptions.mode\\\" [fixedInViewport]=\\\"sidenavOptions.fixedInViewport\\\" [opened]=\\\"sidenavOptions.opened && isLoggedIn$ | async\\\"\\r\\n            [disableClose]=\\\"sidenavOptions.disableClose\\\" [fixedTopGap]=\\\"sidenavOptions.fixedTopGap\\\" #sidenav>\\r\\n\\r\\n            <mcb-sidenav-content></mcb-sidenav-content>\\r\\n        </mat-sidenav>\\r\\n\\r\\n        <mat-sidenav-content class=\\\"main-container\\\" [@fadeAnimation]=\\\"outlet.isActivated ? outlet.activatedRoute : ''\\\">\\r\\n            <router-outlet #outlet=\\\"outlet\\\"></router-outlet>\\r\\n        </mat-sidenav-content>\\r\\n    </mat-sidenav-container>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport 'hammerjs'; // To support gestures.\r\nimport { LocalStorageModule } from 'angular-2-local-storage'; // To access HTML5 LocalStorage's features\r\n// NgRx\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n// Custom modules\r\nimport { RoutingModule } from './routing/routing.module';\r\nimport { routerReducers } from './routing/router-store';\r\nimport { PagesModule } from './pages/pages.module';\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { AvatarComponent } from './top-nav/avatar/avatar.component';\r\nimport { TopNavComponent } from './top-nav/top-nav.component';\r\nimport { SidenavContentComponent } from './sidenav-content/sidenav-content.component';\r\n// Services\r\nimport { TokenInterceptor } from './core/authentication/auth-http-interceptor.service';\r\nimport { NotFoundInterceptor } from './routing/not-found-interceptor.service';\r\n// Others\r\nimport { environment } from '../environments/environment';\r\nimport { routing } from './app.routes';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        TopNavComponent,\r\n        SidenavContentComponent,\r\n        AvatarComponent\r\n    ],\r\n    imports: [\r\n        HttpClientModule,\r\n        RoutingModule,\r\n        RouterModule,\r\n        routing,\r\n        PagesModule,\r\n        LocalStorageModule.withConfig({\r\n            prefix: 'mycookingbook',\r\n            storageType: 'sessionStorage',\r\n            notifyOptions: { setItem: true, removeItem: true }\r\n        }),\r\n        StoreModule.forRoot(routerReducers),\r\n        EffectsModule.forRoot([]),\r\n        StoreDevtoolsModule.instrument({\r\n            maxAge: 25, // Retains last 25 states\r\n            logOnly: environment.production // Restrict extension to log-only mode\r\n        }),\r\n        ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }),\r\n    ],\r\n    providers: [\r\n        { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n        { provide: HTTP_INTERCEPTORS, useClass: NotFoundInterceptor, multi: true }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { LoginPageComponent } from \"./pages/login-page/login-page.component\";\r\nimport { HomePageComponent } from \"./pages/home-page/home-page.component\";\r\nimport { RecipePageComponent } from \"./pages/recipe-page/recipe-page.component\";\r\nimport { RecipeCreatorComponent } from \"./pages/recipe-creator/recipe-creator.component\";\r\nimport { AuthenticationGuard } from \"./core/authentication/auth-guard.service\";\r\nimport { LoadRecipeResolverService } from \"./routing/load-recipe-resolver.service\";\r\nimport { RecipeViewerComponent } from \"./pages/recipe-viewer/recipe-viewer.component\";\r\nimport { NotFoundComponent } from \"./pages/not-found/not-found.component\";\r\n\r\n// Route Configuration\r\nexport const routes: Routes = [\r\n    { path: \"\", redirectTo: \"/login\", pathMatch: \"full\" },\r\n    { path: \"login\", component: LoginPageComponent },\r\n    {\r\n        path: \"home\",\r\n        component: HomePageComponent,\r\n        canActivate: [AuthenticationGuard]\r\n    },\r\n    {\r\n        path: \"recipes\",\r\n        component: RecipePageComponent,\r\n        canActivate: [AuthenticationGuard]\r\n    },\r\n    {\r\n        path: \"recipes/:id\",\r\n        component: RecipeViewerComponent,\r\n        canActivate: [AuthenticationGuard],\r\n        resolve: { recipe: LoadRecipeResolverService }\r\n    },\r\n    {\r\n        path: \"recipe/create\",\r\n        component: RecipeCreatorComponent,\r\n        canActivate: [AuthenticationGuard]\r\n    },\r\n    {\r\n        path: \"recipe/edit/:id\",\r\n        component: RecipeCreatorComponent,\r\n        canActivate: [AuthenticationGuard],\r\n        resolve: { recipe: LoadRecipeResolverService }\r\n    },\r\n    { path: \"**\", component: NotFoundComponent }\r\n];\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\r\n","module.exports = \"input {\\r\\n  border: none;\\r\\n  background: none;\\r\\n  padding: 0;\\r\\n  outline: none;\\r\\n  font: inherit;\\r\\n  width:2em;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.option {\\r\\n  /* Prevents the inner html from stripping away white spaces.*/\\r\\n  white-space: pre;\\r\\n}\\r\\n\"","module.exports = \"<input [(ngModel)]=\\\"value\\\" (input)=\\\"valueChanged()\\\" [matAutocomplete]=\\\"autocomplete\\\" (keyup.enter)=\\\"chooseFirstOption()\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n<mat-autocomplete #autocomplete=\\\"matAutocomplete\\\" autoActiveFirstOption (optionSelected)=\\\"valueChanged()\\\">\\r\\n   <mat-option class=\\\"option\\\" *ngFor=\\\"let option of options\\\" [value]=\\\"option\\\" (mousedown)=\\\"focusIn()\\\" (focusout)=\\\"focusOut()\\\" [innerHTML]=\\\"option | highlight:value\\\"></mat-option>\\r\\n</mat-autocomplete>\\r\\n\"","import {\r\n    Component, OnInit, OnDestroy, Input, Output,\r\n    forwardRef, ElementRef, EventEmitter,\r\n    Renderer2, HostBinding, Optional, ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\r\nimport { MatAutocomplete } from '@angular/material';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\n\r\n\r\n/**\r\n * AutocompleteInput is an input with the autocomplete functionnality.\r\n *\r\n * The \"input\" event is used to notify when the value is changed (either by keypress or by selecting an item in the autocomplete form)\r\n */\r\nexport abstract class AutocompleteInput implements OnInit, OnDestroy, MatFormFieldControl<string>, ControlValueAccessor {\r\n    static nextId = 0;\r\n\r\n    @ViewChild(MatAutocomplete) matAutocomplete: MatAutocomplete;\r\n    // Changing the input event so that it triggers when an autocomplete option is chosen.\r\n    @Output()\r\n    input = new EventEmitter();\r\n    // Getting the function that calls the API to get the options to display in the autocomplete\r\n    abstract optionsGetter(): void;\r\n    // The displayed value in the input.\r\n    _value: string;\r\n    // The displayed options displayed by the autocomplete section.\r\n    options = [];\r\n    optionHasFocus = false;\r\n\r\n    // Form element management\r\n    stateChanges = new Subject<void>();\r\n    // Used by Angular Material to map hints and errors to the control.\r\n    @HostBinding() id = `autocomplete-input-${AutocompleteInput.nextId++}`;\r\n    // Used by Angular Material to bind Aria ids to our control\r\n    @HostBinding('attr.aria-describedby') describedBy = '';\r\n    // NgModel\r\n    propagateChange = (_: any) => { };\r\n    // Form properties\r\n    private _placeholder: string;\r\n    focused = false;\r\n    private _required = false;\r\n    private _disabled = false;\r\n    errorState = false;                      // For now, we are not handling errors yet.\r\n    controlType = 'autocomplete-input';  // Class identifier for this control will be mat-form-field-autocomplete-input.\r\n\r\n    public ngControl: NgControl = null;\r\n\r\n\r\n    constructor(private fm: FocusMonitor, private elRef: ElementRef, renderer: Renderer2) {\r\n        fm.monitor(elRef.nativeElement, true).subscribe(origin => {\r\n            this.focused = !!origin || this.optionHasFocus;\r\n            this.stateChanges.next();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.stateChanges.complete();\r\n        this.fm.stopMonitoring(this.elRef.nativeElement);\r\n    }\r\n\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(newValue: string | null) {\r\n        this._value = newValue || \"\";\r\n\r\n        this.emitChanges();\r\n    }\r\n\r\n    // Allows to select the first option on 'enter' pressed\r\n    chooseFirstOption(): void {\r\n        this.matAutocomplete.options.first.select();\r\n    }\r\n\r\n    // Makes this component compatible with the mat-form-field of Angular Material\r\n    @Input()\r\n    get placeholder() {\r\n        return this._placeholder;\r\n    }\r\n    set placeholder(plh) {\r\n        this._placeholder = plh;\r\n        this.stateChanges.next();\r\n    }\r\n\r\n    // This functions tells the mat-form-field wheter it is empty or not.\r\n    get empty() {\r\n        return !this.value;\r\n    }\r\n\r\n    // Used by Angular Material to display the placeholder properly\r\n    @HostBinding('class.floating')\r\n    get shouldLabelFloat() {\r\n        return this.focused || !this.empty;\r\n    }\r\n\r\n    // To handle required property on form field\r\n    @Input()\r\n    get required() {\r\n        return this._required;\r\n    }\r\n    set required(req) {\r\n        this._required = coerceBooleanProperty(req);\r\n        this.stateChanges.next();\r\n    }\r\n\r\n    // To handle disabled property on form field.\r\n    @Input()\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(dis) {\r\n        this._disabled = coerceBooleanProperty(dis);\r\n        this.stateChanges.next();\r\n    }\r\n\r\n    // To handle aria description\r\n    setDescribedByIds(ids: string[]) {\r\n        this.describedBy = ids.join(' ');\r\n    }\r\n\r\n    // To handle onClick event on form field container when it's not directly on an input\r\n    onContainerClick(event: MouseEvent) {\r\n        const target = (event.target as Element).tagName.toLowerCase();\r\n        if (target !== 'input' && target !== 'div') {\r\n            this.elRef.nativeElement.querySelector('input').focus();\r\n        }\r\n    }\r\n\r\n    // To handle focus.\r\n    // Needed to indicate that our control still has focus when one of the autocomplete option is clicked.\r\n    // This is needed mainly because Angular Material extracts all of the options to put it in a separate\r\n    // container in the DOM.\r\n    focusIn() {\r\n        this.optionHasFocus = true;\r\n    }\r\n\r\n    focusOut() {\r\n        this.optionHasFocus = false;\r\n    }\r\n\r\n    valueChanged() {\r\n        this.optionsGetter();\r\n        this.input.emit();\r\n    }\r\n\r\n    emitChanges() {\r\n        this.stateChanges.next();\r\n        this.propagateChange(this.value);\r\n    }\r\n\r\n    // ----------For the ngModel two way binding -------------------------------//\r\n    writeValue(value: string) {\r\n        // When ngModel is called only to enable form validation, the value is set to undefined.\r\n        if (value === undefined) {\r\n            // If it is the case, do nothing as we don't want to register a rating.\r\n            return;\r\n        }\r\n\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched() { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule, MatAutocompleteModule } from '@angular/material';\r\n\r\nimport { UtilsModule } from '../../utils/utils.module';\r\nimport { AutocompleteInput } from './autocomplete-input.component';\r\nimport { IngredientAutocompleteInput } from './ingredient-autocomplete-input/ingredient-autocomplete-input.component';\r\nimport { RecipenameAutocompleteInput } from './recipename-autocomplete-input/recipename-autocomplete-input.component';\r\nimport { GenreAutocompleteInputComponent } from './genre-autocomplete-input/genre-autocomplete-input.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatInputModule,\r\n        MatAutocompleteModule,\r\n        UtilsModule\r\n    ],\r\n    declarations: [\r\n        IngredientAutocompleteInput,\r\n        RecipenameAutocompleteInput,\r\n        GenreAutocompleteInputComponent\r\n    ],\r\n    exports: [\r\n        IngredientAutocompleteInput,\r\n        RecipenameAutocompleteInput,\r\n        GenreAutocompleteInputComponent]\r\n})\r\nexport class AutocompleteInputModule { }\r\n","import { Component, OnInit, ElementRef, Renderer2, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { AutocompleteInput } from '../autocomplete-input.component';\r\nimport { GenresService } from '../../../recipes/genre/shared/genre.service';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Component({\r\n    selector: 'genre-autocomplete-input',\r\n    templateUrl: '../autocomplete-input.component.html',\r\n    styleUrls: ['../autocomplete-input.component.css'],\r\n    providers: [\r\n        { provide: MatFormFieldControl, useExisting: GenreAutocompleteInputComponent },\r\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => GenreAutocompleteInputComponent), multi: true }\r\n    ]\r\n})\r\nexport class GenreAutocompleteInputComponent extends AutocompleteInput implements OnInit {\r\n\r\n    private isLoading = false;\r\n    private previousApiCall: Observable<string[]>;\r\n    private genres: string[] = [];\r\n\r\n    constructor(fm: FocusMonitor, elRef: ElementRef, renderer: Renderer2, private genresService: GenresService) {\r\n        super(fm, elRef, renderer);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.genresService.genres.subscribe(genres => {\r\n            this.genres = genres;\r\n            this.optionsGetter(); // Refreshing the list of options.\r\n        });\r\n    }\r\n\r\n    optionsGetter() {\r\n        this.options = this.genres.filter(g => g.indexOf(this.value) !== -1);\r\n    }\r\n\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ElementRef,\r\n    Renderer2,\r\n    forwardRef\r\n} from \"@angular/core\";\r\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\nimport { AutocompleteInput } from \"../autocomplete-input.component\";\r\nimport { ApiGetRecipesService } from \"../../../recipes/shared/api-get-recipes.service\";\r\nimport { MatFormFieldControl } from \"@angular/material/form-field\";\r\nimport { FocusMonitor } from \"@angular/cdk/a11y\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Component({\r\n    selector: \"ingredient-autocomplete-input\",\r\n    templateUrl: \"../autocomplete-input.component.html\",\r\n    styleUrls: [\"../autocomplete-input.component.css\"],\r\n    providers: [\r\n        {\r\n            provide: MatFormFieldControl,\r\n            useExisting: IngredientAutocompleteInput\r\n        },\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => IngredientAutocompleteInput),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class IngredientAutocompleteInput extends AutocompleteInput implements OnInit {\r\n    private isLoading = false;\r\n    private previousApiCall: Observable<string[]>;\r\n\r\n    constructor(\r\n        fm: FocusMonitor,\r\n        elRef: ElementRef,\r\n        renderer: Renderer2,\r\n        private recipesAPI: ApiGetRecipesService\r\n    ) {\r\n        super(fm, elRef, renderer);\r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n    optionsGetter() {\r\n        if (!this.value) {\r\n            this.options = [];\r\n        } else {\r\n            this.recipesAPI\r\n                .getMatchingIngredientNames(this.value)\r\n                .subscribe(ingredients => {\r\n                    this.options = ingredients;\r\n                });\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    ElementRef,\r\n    Renderer2,\r\n    forwardRef\r\n} from \"@angular/core\";\r\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\nimport { AutocompleteInput } from \"../autocomplete-input.component\";\r\nimport { ApiGetRecipesService } from \"../../../recipes/shared/api-get-recipes.service\";\r\nimport { MatFormFieldControl } from \"@angular/material/form-field\";\r\nimport { FocusMonitor } from \"@angular/cdk/a11y\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Component({\r\n    selector: \"recipename-autocomplete-input\",\r\n    templateUrl: \"../autocomplete-input.component.html\",\r\n    styleUrls: [\"../autocomplete-input.component.css\"],\r\n    providers: [\r\n        {\r\n            provide: MatFormFieldControl,\r\n            useExisting: RecipenameAutocompleteInput\r\n        },\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => RecipenameAutocompleteInput),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class RecipenameAutocompleteInput extends AutocompleteInput {\r\n    private isLoading = false;\r\n    private previousApiCall: Observable<string[]>;\r\n\r\n    constructor(\r\n        fm: FocusMonitor,\r\n        elRef: ElementRef,\r\n        renderer: Renderer2,\r\n        private recipesAPI: ApiGetRecipesService\r\n    ) {\r\n        super(fm, elRef, renderer);\r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n    optionsGetter() {\r\n        if (!this.value) {\r\n            this.options = [];\r\n        } else {\r\n            this.recipesAPI\r\n                .getMatchingRecipeNames(this.value)\r\n                .subscribe(recipes => {\r\n                    this.options = recipes;\r\n                });\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AutocompleteInputModule } from './autocomplete-input/autocomplete-input.module';\r\nimport { CustomListBoxModule } from './custom-listbox/custom-listbox.module';\r\nimport { StarRatingModule } from './star-rating/star-rating.module';\r\nimport { TimeInputModule } from './time-input/time-input.module';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [],\r\n    providers: [],\r\n    exports: [\r\n        CommonModule,\r\n        AutocompleteInputModule,\r\n        CustomListBoxModule,\r\n        StarRatingModule,\r\n        TimeInputModule\r\n    ]\r\n})\r\nexport class ControlsModule { }\r\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'custom-listbox',\r\n  templateUrl: './custom-listbox.html',\r\n  styleUrls: ['./custom-listbox.css']\r\n})\r\nexport class CustomListBox {\r\n  @Input()\r\n  title: string = \"Default Title\";\r\n  @Input()\r\n  addItemText: string = \"Add\";\r\n  @Output()\r\n  createNewItem = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  addItem() {\r\n    this.createNewItem.emit();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title><h2>{{title}}</h2></mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n\\r\\n    <mat-list>\\r\\n      <ng-content></ng-content>\\r\\n    </mat-list>\\r\\n\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions align=\\\"end\\\">\\r\\n    <button id=\\\"createItemBtn\\\" type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"addItem()\\\" mat-button>{{addItemText}}</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule,\r\n         MatCardModule,\r\n         MatListModule,\r\n         MatTooltipModule,\r\n         MatIconModule } from '@angular/material';\r\n\r\nimport { CustomListBox } from './custom-listbox.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomListBox\r\n  ],\r\n  imports: [\r\n             CommonModule,\r\n             MatButtonModule,\r\n             MatCardModule,\r\n             MatListModule,\r\n             MatTooltipModule,\r\n             MatIconModule\r\n           ],\r\n  providers: [],\r\n  exports: [ CustomListBox ]\r\n})\r\nexport class CustomListBoxModule { }\r\n","import { Component, OnInit, Input, forwardRef, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Star } from './star/star.model';\r\n\r\n\r\n// Here I'm creating my custom star rating component since the only other\r\n@Component({\r\n  selector: 'star-rating',\r\n  templateUrl: 'star-rating.html',\r\n  styleUrls: ['star-rating.css'],\r\n  providers: [{\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => StarRating),\r\n      multi: true\r\n    }]\r\n})\r\nexport class StarRating implements ControlValueAccessor{\r\n  // The number of star displayed.\r\n  @Input()\r\n  max:number = 5;\r\n  // The number of star that must be selected.\r\n  @Input()\r\n  _value:number = 0;\r\n  @Input()\r\n  readonly:boolean = false;\r\n  @Output()\r\n  change = new EventEmitter();\r\n\r\n  stars:Star[] = [];\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    for(let i = 1; i <= this.max; ++i) {\r\n      this.stars.push(new Star(i <= this.value));\r\n    }\r\n  }\r\n\r\n  // The index is a 0 based index.\r\n  toggle(index:number) {\r\n    if(index < 0) {\r\n      throw new RangeError(\"Invalid parameter index in function 'toggle' of the StarRating component. It's value must be a positive number.\");\r\n    }\r\n\r\n    if(this.readonly === false) {\r\n      this.value = index + 1;\r\n      // Triggering the change event.\r\n      this.change.emit();\r\n    }\r\n  }\r\n\r\n  set value(newRating) {\r\n    this._value = newRating;\r\n\r\n    this.updateDisplay();\r\n\r\n    this.propagateChange(this.value);\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  private updateDisplay() {\r\n\r\n    for(let i = 0; i < this.stars.length; ++i) {\r\n      this.stars[i].filled = i < this.value;\r\n    }\r\n  }\r\n\r\n  // ----------For the ngModel two way binding -------------------------------//\r\n  writeValue(value: number) {\r\n    // When ngModel is called only to enable form validation, the value is set to undefined.\r\n    if (value === undefined) {\r\n      // If it is the case, do nothing as we don't want to register a rating.\r\n      return;\r\n    }\r\n\r\n    if(value < 0) {\r\n      throw new RangeError(\"Invalid parameter value in function 'writeValue' of the StarRating component. It's value must be a positive number.\");\r\n    }\r\n\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn) {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched() {}\r\n\r\n}\r\n","module.exports = \".star-rating {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.star {\\r\\n  padding: 1px;\\r\\n  color: #ddd;\\r\\n  font-size: 1.3em;\\r\\n  text-shadow: .05em .05em #aaa;\\r\\n  list-style-type: none;\\r\\n  display: inline-block;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.star i {\\r\\n  font-size: inherit !important;\\r\\n}\\r\\n\\r\\n.star.filled {\\r\\n  color: #fd0;\\r\\n}\\r\\n\\r\\n.star-rating.readonly .star {\\r\\n  cursor: default;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"star-rating\\\" [class.readonly]=\\\"readonly\\\">\\r\\n  <li *ngFor=\\\"let star of stars; let i=index\\\" class=\\\"star\\\" [class.filled]=\\\"star.filled\\\" (click)=\\\"toggle(i)\\\">\\r\\n    <i class=\\\"material-icons\\\">star</i>\\r\\n  </li>\\r\\n</ul>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StarRating } from './star-rating.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StarRating\r\n  ],\r\n  imports: [ CommonModule ],\r\n  providers: [],\r\n  exports: [ StarRating ]\r\n})\r\nexport class StarRatingModule { }\r\n","export class Star {\r\n  filled: boolean;\r\n\r\n  constructor(isFilled:boolean) {\r\n    this.filled = isFilled;\r\n  }\r\n}\r\n","module.exports = \"div {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  border: none;\\r\\n  background: none;\\r\\n  padding: 0;\\r\\n  outline: none;\\r\\n  font: inherit;\\r\\n  text-align: center;\\r\\n  width:2em;\\r\\n}\\r\\n\\r\\n/* Fading animation of separators when control is focused. */\\r\\n\\r\\nspan, input {\\r\\n  opacity: 0;\\r\\n  transition: opacity 200ms;\\r\\n}\\r\\n\\r\\n:host.floating span, :host.floating input {\\r\\n  opacity: 1;\\r\\n}\\r\\n\"","module.exports = \"<div [formGroup]=\\\"parts\\\">\\r\\n  <input class=\\\"hours\\\" formControlName=\\\"hours\\\" size=\\\"3\\\" placeholder=\\\"00\\\" [(ngModel)]=\\\"time.hours\\\"  (keydown)=\\\"incrementHours($event)\\\" (keyup)=\\\"emitChanges()\\\" min=\\\"0\\\" onlyNumber>\\r\\n  <span>{{HOURS_SEPARATOR}}</span>\\r\\n  <input class=\\\"minutes\\\" formControlName=\\\"minutes\\\" size=\\\"2\\\" placeholder=\\\"00\\\" [(ngModel)]=\\\"time.minutes\\\"  (keydown)=\\\"incrementMinutes($event)\\\" (keyup)=\\\"emitChanges()\\\" min=\\\"0\\\" max=\\\"59\\\" onlyNumber>\\r\\n  <span>{{MINUTES_SEPARATOR}}</span>\\r\\n</div>\\r\\n\\r\\n\"","import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { Component, OnInit, ElementRef, Input, OnDestroy, Renderer2, HostBinding, Optional, Self, forwardRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, NgControl } from '@angular/forms';\r\nimport { Time } from './time/time.class';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'time-input',\r\n    templateUrl: './time-input.component.html',\r\n    styleUrls: ['./time-input.component.css'],\r\n    providers: [\r\n        { provide: MatFormFieldControl, useExisting: TimeInput },\r\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TimeInput), multi: true }\r\n    ],\r\n})\r\nexport class TimeInput implements OnInit, OnDestroy, MatFormFieldControl<number>, ControlValueAccessor {\r\n    static nextId = 0;\r\n\r\n    MINUTES_MAX = 59;\r\n    HOURS_SEPARATOR = 'h';\r\n    MINUTES_SEPARATOR = 'm';\r\n    // Form element management\r\n    parts: FormGroup;\r\n    stateChanges = new Subject<void>();\r\n    // Used by Angular Material to map hints and errors to the control.\r\n    @HostBinding() id = `time-input-${TimeInput.nextId++}`;\r\n    // Used by Angular Material to bind Aria ids to our control\r\n    @HostBinding('attr.aria-describedby') describedBy = '';\r\n    // NgModel\r\n    propagateChange = (_: any) => { };\r\n    // Form properties\r\n    private _placeholder: string;\r\n    focused = false;\r\n    private _required = false;\r\n    private _disabled = false;\r\n    errorState = false;                      // For now, we are not handling errors yet.\r\n    controlType = 'time-input';  // Class identifier for this control will be mat-form-field-time-input.\r\n    // Model used for this type of input\r\n    time: Time;\r\n\r\n    public ngControl: NgControl = null;\r\n\r\n\r\n    constructor(fb: FormBuilder, private fm: FocusMonitor, private elRef: ElementRef,\r\n        renderer: Renderer2) {\r\n        this.parts = fb.group({\r\n            'hours': '',\r\n            'minutes': ''\r\n        });\r\n\r\n        fm.monitor(elRef.nativeElement, true).subscribe(origin => {\r\n            this.focused = !!origin;\r\n            this.stateChanges.next();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.time = new Time(0, 0);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.stateChanges.complete();\r\n        this.fm.stopMonitoring(this.elRef.nativeElement);\r\n    }\r\n\r\n    @Input()\r\n    get value(): number {\r\n        let n = this.parts.value;\r\n        return this.time.totalMinutes;\r\n    }\r\n    set value(timeInMinutes: number | null) {\r\n        timeInMinutes = timeInMinutes || 0;\r\n        this.time.setTimeFromMinutes(timeInMinutes);\r\n        this.parts.setValue({ hours: this.time.hours, minutes: this.time.minutes });\r\n\r\n        this.emitChanges();\r\n    }\r\n\r\n    @Input()\r\n    get placeholder() {\r\n        return this._placeholder;\r\n    }\r\n    set placeholder(plh) {\r\n        this._placeholder = plh;\r\n        this.stateChanges.next();\r\n    }\r\n\r\n    // This functions tells the mat-form-field wheter it is empty or not.\r\n    get empty() {\r\n        let n = this.parts.value;\r\n        return !n.hours && !n.minutes;\r\n    }\r\n\r\n    // Used by Angular Material to display the placeholder properly\r\n    @HostBinding('class.floating')\r\n    get shouldLabelFloat() {\r\n        return this.focused || !this.empty;\r\n    }\r\n\r\n    // To handle required property on form field\r\n    @Input()\r\n    get required() {\r\n        return this._required;\r\n    }\r\n    set required(req) {\r\n        this._required = coerceBooleanProperty(req);\r\n        this.stateChanges.next();\r\n    }\r\n\r\n    // To handle disabled property on form field.\r\n    @Input()\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(dis) {\r\n        this._disabled = coerceBooleanProperty(dis);\r\n        this.stateChanges.next();\r\n    }\r\n\r\n    // To handle aria description\r\n    setDescribedByIds(ids: string[]) {\r\n        this.describedBy = ids.join(' ');\r\n    }\r\n\r\n    // To handle onClick event on form field container when it's not directly on an input\r\n    onContainerClick(event: MouseEvent) {\r\n        if ((event.target as Element).tagName.toLowerCase() != 'input') {\r\n            this.elRef.nativeElement.querySelector('input').focus();\r\n        }\r\n    }\r\n\r\n    // Event handling\r\n    incrementHours(e: KeyboardEvent) {\r\n        if (e.key == \"ArrowUp\")\r\n            this.time.incrementHours();\r\n        else if (e.key == \"ArrowDown\" && this.time.hours > 0)\r\n            this.time.decrementHours();\r\n\r\n        return;\r\n    }\r\n\r\n    incrementMinutes(e: KeyboardEvent) {\r\n        if (e.key == \"ArrowUp\")\r\n            this.time.incrementMinutes();\r\n        else if (e.key == \"ArrowDown\" && (this.time.hours != 0 || this.time.minutes > 0))\r\n            this.time.decrementMinutes();\r\n\r\n        return;\r\n    }\r\n\r\n    emitChanges() {\r\n        this.stateChanges.next();\r\n        this.propagateChange(this.value);\r\n    }\r\n\r\n    // ----------For the ngModel two way binding -------------------------------//\r\n    writeValue(value: number) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched() { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TimeInput } from './time-input.component';\r\nimport { UtilsModule } from '../../utils/utils.module';\r\nimport { MatInputModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    UtilsModule,\r\n    MatInputModule\r\n  ],\r\n  declarations: [TimeInput],\r\n  exports: [ TimeInput ]\r\n})\r\nexport class TimeInputModule { }\r\n","export class Time {\r\n  protected STEP_SIZE = 1;\r\n  protected _hours: number = 0;\r\n  protected _minutes: number = 0;\r\n\r\n  constructor(hours:number, minutes:number) {\r\n    this.setTime(hours, minutes);\r\n  }\r\n\r\n  setTime(hours:number, minutes:number) {\r\n    this.hours = +hours;\r\n    this.minutes = +minutes;\r\n  }\r\n\r\n  setTimeFromMinutes(timeInMinutes: number) {\r\n    this.hours = Math.floor(+timeInMinutes/60);\r\n    this.minutes = +timeInMinutes%60;\r\n  }\r\n\r\n  setStepSize(step_size:number) {\r\n    if(step_size != null) {\r\n\r\n      if(step_size >= 60) {\r\n        throw new Error(\"Invalid step size for time class. Max step size is 59 for the minutes.\");\r\n      }\r\n\r\n      if(step_size < 1) {\r\n        throw new Error(\"Invalid step size for time class. Step size must be positive (cannot be 0).\");\r\n      }\r\n\r\n      this.STEP_SIZE = step_size;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Increments the number of minutes. The increment size is defined by the STEP_SIZE.\r\n   * If the number of minutes is bigger than 60, it increments the hour value.\r\n   */\r\n  incrementMinutes() {\r\n    if(this._minutes + this.STEP_SIZE >= 60) {\r\n      this.hours++;\r\n    }\r\n\r\n    this.minutes = (this.minutes + this.STEP_SIZE) % 60;\r\n  }\r\n\r\n  decrementMinutes() {\r\n    if(this._minutes - this.STEP_SIZE < 0) {\r\n      this.hours--;\r\n    }\r\n\r\n    this.minutes = ((this.minutes - this.STEP_SIZE) + 60) % 60; // The +60 is to handle properly negative numbers.\r\n  }\r\n\r\n  incrementHours() {\r\n    this.hours++;\r\n  }\r\n\r\n  decrementHours() {\r\n    this.hours--;\r\n  }\r\n\r\n  set hours(newValue:number) {\r\n    if(newValue < 0) {\r\n      throw new Error(\"Time.class: Hours cannot be negative.\");\r\n    }\r\n\r\n    this._hours = +newValue;\r\n  }\r\n\r\n  get hours() {\r\n    return this._hours;\r\n  }\r\n\r\n  set minutes(newValue:number) {\r\n    if(newValue < 0) {\r\n      throw new Error(\"Time.class: Minutes cannot be negative.\");\r\n    }\r\n\r\n    if(newValue >= 60) {\r\n      throw new Error(\"Time.class: Minutes cannot be greater or equal to 60.\");\r\n    }\r\n\r\n    this._minutes = +newValue;\r\n  }\r\n\r\n  get minutes() {\r\n    return this._minutes;\r\n  }\r\n\r\n  get totalMinutes() {\r\n    return this.hours * 60 + this.minutes;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { LoggerService } from '../logger/logger.service';\r\n// Ngrx Store\r\nimport { Store } from \"@ngrx/store\";\r\nimport * as fromStore from \"../../core/store/auth\";\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthenticationGuard implements CanActivate {\r\n\r\n    constructor(private router: Router,\r\n        private store: Store<fromStore.AuthState>,\r\n        private logger: LoggerService) { }\r\n\r\n    canActivate() {\r\n        let isLoggedIn = false;\r\n        this.store.select(fromStore.getLoggedIn).pipe(take(1)).subscribe(loggedIn => {\r\n            isLoggedIn = loggedIn;\r\n        });\r\n\r\n        if (!isLoggedIn) {\r\n            this.logger.info(\"Veuillez vous connecter avant d'accéder à cette page.\");\r\n            this.router.navigateByUrl('/login');\r\n        }\r\n\r\n        return isLoggedIn;\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { tap } from 'rxjs/operators';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\nimport { LoggerService } from '../logger/logger.service';\r\n// Ngrx\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromStore from \"../../core/store/auth\";\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n    private authService: AuthenticationService = null; // Got to load it async to prevent circular import.\r\n\r\n    constructor(private localStorageService: LocalStorageService,\r\n        private logger: LoggerService,\r\n        private store: Store<fromStore.AuthState>,\r\n        private router: Router,\r\n        private injector: Injector) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (!this.authService) {\r\n            this.authService = this.injector.get(AuthenticationService);\r\n        }\r\n        // Request are immutable. We must clone them to modify them.\r\n        if (this.localStorageService.get(\"auth_token\")) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${this.localStorageService.get(\"auth_token\")}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request).pipe(\r\n            tap(() => { }, (err: any) => {\r\n                // Handling 401 unauthorized errors.\r\n                if (err instanceof HttpErrorResponse) {\r\n                    if (err.status === 401) {\r\n                        // Making sure everything is disconnected properly.\r\n                        this.store.dispatch(new fromStore.LoggedOut());\r\n                        this.logger.error(\"Veuillez vous connecter pour effectuer cette action.\", \"J'ai compris\");\r\n                        this.router.navigateByUrl('/login');\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport * as moment from 'moment';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\nimport { GoogleAuthenticationService } from './google-authentication/google-authentication.service';\r\nimport { User } from './user.model';\r\n// Ngrx Store\r\nimport { Store } from \"@ngrx/store\";\r\nimport * as fromStore from \"../../core/store\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  currentUserChanged: Subject<any> = new Subject();\r\n\r\n  constructor(private googleAuth: GoogleAuthenticationService,\r\n              private localStorageService: LocalStorageService,\r\n              private store: Store<fromStore.DataState>,\r\n              private zone: NgZone) {\r\n  }\r\n\r\n  onSignInWithGoogle(googleUser: any) {\r\n    // We have to run this code inside of an Angular zone since the Google api callback does not run in Angular.\r\n    this.zone.run(() => {\r\n      this.googleAuth.onSignedIn(googleUser).subscribe((response: any) => {\r\n        this.store.dispatch(new fromStore.LoggedIn(response));\r\n      });\r\n    });\r\n  }\r\n\r\n  disconnect() {\r\n    this.googleAuth.disconnect().then(() => {\r\n      // We have to run this code inside of an Angular zone since the Google api callback does not run in Angular.\r\n      this.zone.run(() => {\r\n        this.store.dispatch(new fromStore.LoggedOut());\r\n      });\r\n    });\r\n  }\r\n\r\n  getExpiration() {\r\n      const expiration: string = this.localStorageService.get(\"token_expires_at\");\r\n      const expiresAt = JSON.parse(expiration);\r\n      return moment(expiresAt);\r\n  }\r\n\r\n  getCurrentUser(): User {\r\n    return this.localStorageService.get(\"user\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from './../../../../environments/environment';\r\n\r\ndeclare const gapi: any;\r\n\r\n@Injectable()\r\nexport class GoogleAuthenticationService {\r\n  private CLIENT_ID = \"570370763529-lvcc421ainf71o88qm18i95ahn05hq39.apps.googleusercontent.com\";\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.googleInit();\r\n  }\r\n\r\n  googleInit() {\r\n    gapi.load('auth2', () => {\r\n      const auth = gapi.auth2.init({\r\n        client_id: this.CLIENT_ID,\r\n        cookie_policy: 'single_host_origin',\r\n        scope: 'profile email'\r\n      });\r\n    });\r\n  }\r\n\r\n  onSignedIn(googleUser: any) {\r\n    // We need to get a jwt from the server in order to access the database.\r\n    const url = `${environment.apiUrl}/login`;\r\n    const body = { googleToken: googleUser.getAuthResponse().id_token };\r\n    return this.http.post(url, body);\r\n  }\r\n\r\n  /*interpretParams(googleUser:any) : User {\r\n    const profile = googleUser.getBasicProfile();\r\n    let user = new User();\r\n\r\n    user.authId = profile.getId();\r\n    user.email = profile.getEmail();\r\n    user.firstName = profile.getGivenName();\r\n    user.familyName = profile.getFamilyName();\r\n    user.fullName = profile.getName();\r\n    user.profilePicture = profile.getImageUrl();\r\n\r\n    return user;\r\n  }*/\r\n\r\n  disconnect(): Promise<any> {\r\n    return gapi.auth2.getAuthInstance().disconnect();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatSnackBarModule } from '@angular/material';\r\nimport { LoggerService } from './logger/logger.service';\r\nimport { ImageLoaderService } from './images/image-loader.service';\r\nimport { AuthenticationService } from './authentication/authentication.service';\r\nimport { GoogleAuthenticationService } from './authentication/google-authentication/google-authentication.service';\r\nimport { AuthenticationGuard } from './authentication/auth-guard.service';\r\nimport { DataStoreModule } from './store/data-store.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatSnackBarModule, // For the logger.\r\n        DataStoreModule\r\n    ],\r\n    exports: [\r\n        DataStoreModule\r\n    ],\r\n    providers: [\r\n        LoggerService,\r\n        ImageLoaderService,\r\n        AuthenticationService,\r\n        GoogleAuthenticationService,\r\n        AuthenticationGuard\r\n    ]\r\n})\r\nexport class CoreModule { }\r\n","import { Injectable, SecurityContext } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Image } from './image.model';\r\n\r\n@Injectable()\r\nexport class ImageLoaderService {\r\n\r\n    constructor(private http: HttpClient,\r\n        public sanitizer: DomSanitizer ) { }\r\n\r\n    getImage(imageUrl: string): Promise<Image> {\r\n        // Calling the API.\r\n        return new Promise((resolve, reject) => {\r\n            this.http.get(imageUrl, { responseType: \"blob\" })\r\n                .subscribe(imageBlob => {\r\n                    this.readImage(imageBlob)\r\n                        .then((image: Image) => resolve(image));\r\n                });\r\n        });\r\n    }\r\n\r\n    // This is needed to convert an image from a blob into a readable format\r\n    // for the image tag.\r\n    readImage(imageFile: any): Promise<Image> {\r\n        return new Promise((resolve, reject) => {\r\n            const displayedImageReader = new FileReader();\r\n            const image = new Image();\r\n            // When the file is completly converted to a readable format\r\n            displayedImageReader.onload = ((e) => {\r\n                image.imageString = e.target['result'];\r\n                image.displayableImage = this.sanitizer.sanitize(SecurityContext.URL, image.imageString);\r\n                resolve(image);\r\n            });\r\n\r\n            displayedImageReader.readAsDataURL(imageFile);\r\n        });\r\n    }\r\n\r\n}\r\n","export class Image {\r\n    displayableImage: any;\r\n    imageString: string;\r\n\r\n    constructor() {\r\n        this.displayableImage = \"\";\r\n        this.imageString = \"\";\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar, MatSnackBarConfig } from \"@angular/material\";\r\nimport { take } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class BasicLoggerService {\r\n    infoDuration = 2000;\r\n    errorDuration = 4000;\r\n\r\n    constructor(protected snackBar: MatSnackBar) {}\r\n\r\n    info(message: string, action = \"Parfait!\"): MatSnackBarRef<SimpleSnackBar> {\r\n        return this.snackBar.open(message, action, {\r\n            duration: this.infoDuration\r\n        });\r\n    }\r\n\r\n    error(message: string, action: string): MatSnackBarRef<SimpleSnackBar> {\r\n        return this.snackBar.open(`Une erreur est survenue: ${message}`, action, {\r\n            duration: this.errorDuration\r\n        });\r\n    }\r\n\r\n    action(message: string, action: string, duration: number): MatSnackBarRef<SimpleSnackBar> {\r\n        return this.snackBar.open(message, action, {\r\n            duration: duration\r\n        });\r\n    }\r\n}\r\n","export * from './basic-logger.service';\r\nexport * from './logger.service';\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n    MatSnackBar,\r\n    MatSnackBarRef,\r\n    SimpleSnackBar,\r\n    MatSnackBarConfig,\r\n    MatSnackBarDismiss\r\n} from \"@angular/material\";\r\nimport { take, filter } from \"rxjs/operators\";\r\nimport { BasicLoggerService } from \"./basic-logger.service\";\r\n\r\n@Injectable()\r\nexport class LoggerService extends BasicLoggerService {\r\n    private persistentActionConfig: MatSnackBarConfig;\r\n    private persistedMessage: string;\r\n\r\n    constructor(protected snackBar: MatSnackBar) {\r\n        super(snackBar);\r\n\r\n        this.persistentActionConfig = new MatSnackBarConfig();\r\n        this.persistentActionConfig.horizontalPosition = \"right\";\r\n        this.persistentActionConfig.panelClass = \"no-margin-bottom\";\r\n    }\r\n\r\n    info(message: string, action = \"Parfait!\"): MatSnackBarRef<SimpleSnackBar> {\r\n        return this.keepPersistentAlive(super.info.bind(this), message, action);\r\n        // return super.info(message);\r\n    }\r\n\r\n    error(message: string, action: string): MatSnackBarRef<SimpleSnackBar> {\r\n        return this.keepPersistentAlive(super.error.bind(this), message, action);\r\n    }\r\n\r\n    action(message: string, action: string, duration: number): MatSnackBarRef<SimpleSnackBar> {\r\n        return this.keepPersistentAlive(super.action.bind(this), message, action, duration);\r\n    }\r\n\r\n    /**\r\n     * Displays a message to the user that will remain until the user\r\n     * manually disposes it or that the ref is implicitly closed.\r\n     * @param message The message to display.\r\n     */\r\n    persistentAction(message: string): MatSnackBarRef<SimpleSnackBar> {\r\n        this.persistedMessage = message;\r\n        const ref = this.snackBar.open(\r\n            message,\r\n            \"Annuler\",\r\n            this.persistentActionConfig\r\n        );\r\n\r\n        ref.afterDismissed()\r\n            .pipe(take(1))\r\n            .subscribe(dismissStatus => {\r\n                if (dismissStatus.dismissedByAction) {\r\n                    this.persistedMessage = null;\r\n                }\r\n            });\r\n\r\n        return ref;\r\n    }\r\n\r\n    private keepPersistentAlive(\r\n        showOtherMessage: Function,\r\n        ...args\r\n    ): MatSnackBarRef<SimpleSnackBar> {\r\n        const ref = showOtherMessage(...args);\r\n        // When the message is closed, set the anotherMessageIsShowed flag to false.\r\n        ref.afterDismissed()\r\n            .pipe(take(1))\r\n            .subscribe(() => {\r\n                // Display\r\n                if (this.persistedMessage) {\r\n                    this.persistentAction(this.persistedMessage);\r\n                }\r\n            });\r\n\r\n        return ref;\r\n    }\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nexport const LOGGED_IN = '[Auth] User is logged in';\r\nexport const LOGGED_OUT = '[Auth] User is logged out';\r\n\r\nexport class LoggedIn implements Action {\r\n    readonly type = LOGGED_IN;\r\n\r\n    constructor(public payload: any) {}\r\n}\r\n\r\nexport class LoggedOut implements Action {\r\n    readonly type = LOGGED_OUT;\r\n}\r\n\r\n// Action types\r\nexport type AuthAction = LoggedIn | LoggedOut;\r\n","export * from './auth.action';\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LocalStorageService } from \"angular-2-local-storage\";\r\n// Moment\r\nimport * as moment from 'moment';\r\n// Ngrx\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { LOGGED_IN, LOGGED_OUT, LoggedIn} from \"../actions\";\r\nimport { ClearUserData } from \"../../recipes/actions\";\r\nimport { DataState } from \"../../store-state\";\r\n// Rxjs\r\nimport { tap } from \"rxjs/operators\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private localStorageService: LocalStorageService,\r\n        private router: Router,\r\n        private store: Store<DataState>\r\n    ) {}\r\n\r\n    /**\r\n     * When a user logs in, cache its data.\r\n     */\r\n    @Effect({ dispatch: false })\r\n    loggedIn$ = this.actions$\r\n        .ofType(LOGGED_IN)\r\n        .pipe(\r\n            tap((action) => {\r\n                const authResult = (action as LoggedIn).payload;\r\n                const expiresAt = moment().add(authResult.tokenExpiresIn, 'second');\r\n                this.localStorageService.set(\"user\", authResult.user );\r\n                this.localStorageService.set('auth_token', authResult.token);\r\n                this.localStorageService.set(\"token_expires_at\", JSON.stringify(expiresAt.valueOf()) );\r\n                // Redirect the user to its home page.\r\n                this.router.navigateByUrl('/recipes');\r\n            })\r\n        );\r\n\r\n    /**\r\n     * When a user logs out, clear all of its client side data.\r\n     */\r\n    @Effect({ dispatch: false })\r\n    loggedOut$ = this.actions$\r\n        .ofType(LOGGED_OUT)\r\n        .pipe(\r\n            tap(() => {\r\n                this.localStorageService.remove(\"user\");\r\n                this.localStorageService.remove('auth_token');\r\n                this.localStorageService.remove('token_expires_at');\r\n                // Clearing all loaded data from app.\r\n                this.store.dispatch(new ClearUserData());\r\n                this.router.navigateByUrl('/login');\r\n            })\r\n        );\r\n}\r\n","import { AuthEffects } from './auth.effects';\r\nexport * from './auth.effects';\r\n\r\nexport const authEffects = [AuthEffects];\r\n","export * from './actions';\r\nexport * from './selectors';\r\nexport * from './reducers';\r\n","import * as fromAuth from '../actions';\r\nimport { User } from \"../../../../models/user.model\";\r\n\r\nexport interface AuthState {\r\n    isLoggedIn: boolean;\r\n    user: User;\r\n}\r\n\r\nexport const InitialAuthState: AuthState = {\r\n    isLoggedIn: false,\r\n    user: null\r\n};\r\n\r\nexport function authReducer(state = InitialAuthState, action: fromAuth.AuthAction): AuthState {\r\n    switch (action.type) {\r\n      case fromAuth.LOGGED_IN: {\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: action.payload.user\r\n        };\r\n      }\r\n\r\n      case fromAuth.LOGGED_OUT: {\r\n        return InitialAuthState;\r\n      }\r\n\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  }\r\n\r\n  export const getLoggedIn = (state: AuthState) => state.isLoggedIn;\r\n  export const getUser = (state: AuthState) => state.user;\r\n","export { authReducer, AuthState} from './auth.reducer';\r\n","import { createSelector } from \"@ngrx/store\";\r\n\r\nimport { DataState, getDataState } from \"../../store-state\";\r\nimport * as fromAuth from \"../reducers/auth.reducer\";\r\n\r\nexport const getAuthState = createSelector(\r\n    getDataState,\r\n    (state: DataState) => state.auth\r\n);\r\n\r\nexport const getLoggedIn = createSelector(\r\n    getAuthState,\r\n    fromAuth.getLoggedIn\r\n);\r\n\r\nexport const getUser = createSelector(\r\n    getAuthState,\r\n    fromAuth.getUser\r\n);\r\n","export * from './auth.selector';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { reducers } from './store-state';\r\nimport { recipesEffects } from './recipes/effects';\r\nimport { authEffects } from './auth/effects';\r\n\r\n// Data services\r\nimport { ApiGetRecipesService } from '../../recipes/shared/api-get-recipes.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        StoreModule.forFeature('data', reducers),\r\n        EffectsModule.forFeature(recipesEffects.concat(authEffects))\r\n    ],\r\n    providers: [\r\n        ApiGetRecipesService\r\n    ]\r\n})\r\nexport class DataStoreModule { }\r\n","export * from './auth';\r\nexport * from './recipes';\r\nexport * from './store-state';\r\n","export * from './recipes.action';\r\n","import { Action } from '@ngrx/store';\r\nimport { Recipe } from '../../../../recipes/shared/recipe.model';\r\nimport { SearchIntent } from '../../../../search/advanced-recipe-search/shared';\r\n\r\n// Load\r\nexport const LOAD_RECIPES = '[Recipes] Load Recipes';\r\nexport const LOAD_RECIPES_FAIL = '[RecipesApi] Load Recipes Fail';\r\nexport const LOAD_RECIPES_SUCCESS = '[RecipesApi] Load Recipes Success';\r\nexport const HAS_LOADED_ALL_RECIPES = '[RecipesApi] Has Loaded All Recipes';\r\nexport const LOAD_RECIPE = '[Recipes] Load Recipe';\r\nexport const RECIPE_NOT_FOUND = '[RecipesApi] Recipe Not Found';\r\n\r\n// Search\r\nexport const SEARCH_RECIPES = '[Advanced Recipes] Search Recipes';\r\nexport const CANCEL_SEARCH_RECIPES = '[Advanced Recipes] Cancel Search Recipes';\r\n// CRUD operations for a single recipe.\r\nexport const CREATE_RECIPE = '[Create and Update Recipe] Create Recipe';\r\nexport const CREATE_RECIPE_FAIL = '[RecipesApi] Create Recipe Fail';\r\nexport const CREATE_RECIPE_SUCCESS = '[RecipesApi] Create Recipe Success';\r\nexport const UPDATE_RECIPE = '[Create and Update Recipe] Update Recipe';\r\nexport const UPDATE_RECIPE_FAIL = '[RecipesApi] Update Recipe Fail';\r\nexport const UPDATE_RECIPE_SUCCESS = '[RecipesApi] Update Recipe Success';\r\nexport const DELETE_RECIPE = '[Create and Update Recipe] Delete Recipe';\r\nexport const DELETE_RECIPE_FAIL = '[RecipesApi] Delete Recipe Fail';\r\nexport const DELETE_RECIPE_SUCCESS = '[RecipesApi] Delete Recipe Success';\r\n// Reset Store data\r\nexport const CLEAR_USER_DATA = '[User Disconnect] Clear User Data';\r\n\r\n// Load\r\nexport class LoadRecipes implements Action {\r\n    readonly type = LOAD_RECIPES;\r\n}\r\n\r\nexport class LoadRecipe implements Action {\r\n    readonly type = LOAD_RECIPE;\r\n\r\n    constructor(public payload: string) { }\r\n}\r\n\r\nexport class LoadRecipesFail implements Action {\r\n    readonly type = LOAD_RECIPES_FAIL;\r\n\r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class RecipeNotFound implements Action {\r\n    readonly type = RECIPE_NOT_FOUND;\r\n\r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class LoadRecipesSuccess implements Action {\r\n    readonly type = LOAD_RECIPES_SUCCESS;\r\n\r\n    constructor(public payload: Recipe[]) { }\r\n}\r\n\r\nexport class HasLoadedAllRecipes implements Action {\r\n    readonly type = HAS_LOADED_ALL_RECIPES;\r\n}\r\n\r\n// Search\r\nexport class SearchRecipes implements Action {\r\n    readonly type = SEARCH_RECIPES;\r\n\r\n    constructor(public payload: SearchIntent) { }\r\n}\r\n\r\nexport class CancelSearchRecipes implements Action {\r\n    readonly type = CANCEL_SEARCH_RECIPES;\r\n}\r\n\r\n// Create\r\nexport class CreateRecipe implements Action {\r\n    readonly type = CREATE_RECIPE;\r\n\r\n    constructor(public payload: Recipe) { }\r\n}\r\n\r\nexport class CreateRecipeFail implements Action {\r\n    readonly type = CREATE_RECIPE_FAIL;\r\n\r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class CreateRecipeSuccess implements Action {\r\n    readonly type = CREATE_RECIPE_SUCCESS;\r\n\r\n    constructor(public payload: Recipe) { }\r\n}\r\n\r\n// Update\r\nexport class UpdateRecipe implements Action {\r\n    readonly type = UPDATE_RECIPE;\r\n\r\n    constructor(public payload: Recipe) { }\r\n}\r\n\r\nexport class UpdateRecipeFail implements Action {\r\n    readonly type = UPDATE_RECIPE_FAIL;\r\n\r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class UpdateRecipeSuccess implements Action {\r\n    readonly type = UPDATE_RECIPE_SUCCESS;\r\n\r\n    constructor(public payload: Recipe) { }\r\n}\r\n\r\n// Delete\r\nexport class DeleteRecipe implements Action {\r\n    readonly type = DELETE_RECIPE;\r\n\r\n    constructor(public payload: string) { }\r\n}\r\n\r\nexport class DeleteRecipeFail implements Action {\r\n    readonly type = DELETE_RECIPE_FAIL;\r\n\r\n    constructor(public payload: any) { }\r\n}\r\n\r\nexport class DeleteRecipeSuccess implements Action {\r\n    readonly type = DELETE_RECIPE_SUCCESS;\r\n\r\n    constructor(public payload: string) { }\r\n}\r\n\r\n// Reset User Data\r\nexport class ClearUserData implements Action {\r\n    readonly type = CLEAR_USER_DATA;\r\n}\r\n\r\n// Action types\r\nexport type RecipesAction =\r\n    // Load Multiple Recipes\r\n    LoadRecipes | LoadRecipesFail | LoadRecipesSuccess | HasLoadedAllRecipes |\r\n    // Load Recipe\r\n    LoadRecipe | RecipeNotFound |\r\n    // Search\r\n    SearchRecipes | CancelSearchRecipes |\r\n    // Create\r\n    CreateRecipe | CreateRecipeFail | CreateRecipeSuccess |\r\n    // Update\r\n    UpdateRecipe | UpdateRecipeFail | UpdateRecipeSuccess |\r\n    // Delete\r\n    DeleteRecipe | DeleteRecipeFail | DeleteRecipeSuccess |\r\n    // Clear recipes\r\n    ClearUserData;\r\n","import { Injectable } from \"@angular/core\";\r\n// Ngrx\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport * as recipesActions from \"../actions/recipes.action\";\r\n// Rxjs\r\nimport { switchMap } from \"rxjs/operators\";\r\n// Services\r\nimport { LoggerService } from \"../../../logger/logger.service\";\r\nimport { empty } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class ErrorHandlingEffects {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private loggerService: LoggerService\r\n    ) {}\r\n\r\n    @Effect()\r\n    recipeErrors$ = this.actions$\r\n        .ofType(\r\n            recipesActions.LOAD_RECIPES_FAIL,\r\n            recipesActions.CREATE_RECIPE_FAIL,\r\n            recipesActions.UPDATE_RECIPE_FAIL,\r\n            recipesActions.DELETE_RECIPE_FAIL\r\n        )\r\n        .pipe(\r\n            switchMap(error => {\r\n                this.loggerService.error(\r\n                    \"Impossible de communiquer avec le serveur\",\r\n                    \"Ok\"\r\n                );\r\n                return empty();\r\n            })\r\n        );\r\n}\r\n","import { RecipesEffects } from './recipes.effects';\r\nimport { ErrorHandlingEffects } from './error-handling.effect';\r\n\r\nexport const recipesEffects: any[] = [ RecipesEffects, ErrorHandlingEffects ];\r\n// Exporting all content from the folder.\r\nexport * from './recipes.effects';\r\nexport * from './error-handling.effect';\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n// Ngrx\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport * as recipesActions from \"../actions/recipes.action\";\r\nimport { DataState } from \"../../store-state\";\r\nimport { getRecipesState } from \"../selectors\";\r\n// Rxjs\r\nimport {\r\n    catchError,\r\n    map,\r\n    switchMap,\r\n    withLatestFrom,\r\n    filter\r\n} from \"rxjs/operators\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { empty } from \"rxjs\";\r\n// Models\r\nimport { Recipe } from \"../../../../recipes/shared/recipe.model\";\r\n// Services\r\nimport { ApiGetRecipesService } from \"../../../../recipes/shared/api-get-recipes.service\";\r\nimport { ApiSpecificRecipeService } from \"../../../../recipes/shared/api-specific-recipe.service\";\r\nimport { LoggerService } from \"../../../logger/logger.service\";\r\n\r\n@Injectable()\r\nexport class RecipesEffects {\r\n    private readonly LOADING_CHUNKS = 20;\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private apiGetRecipesService: ApiGetRecipesService,\r\n        private apiSpecificRecipeService: ApiSpecificRecipeService,\r\n        private loggerService: LoggerService,\r\n        private router: Router,\r\n        private store: Store<DataState>\r\n    ) {}\r\n\r\n    /**\r\n     * Handles the load recipes event when there is no active search.\r\n     */\r\n    @Effect()\r\n    loadRecipesWithoutSearch$ = this.actions$\r\n        .ofType(recipesActions.LOAD_RECIPES)\r\n        .pipe(\r\n            withLatestFrom(this.store.select(getRecipesState)),\r\n            filter(([action, storeState]) => storeState.searchIntent === null),\r\n            switchMap(([action, storeState]) => {\r\n                // If the store can load more recipes\r\n                if (storeState.canLoadMore) {\r\n                    // Request more recipes from the database.\r\n                    const numberOfRecipes = Object.keys(storeState.entities)\r\n                        .length;\r\n                    return this.apiGetRecipesService\r\n                        .getRecipes(\r\n                            numberOfRecipes,\r\n                            numberOfRecipes + this.LOADING_CHUNKS\r\n                        )\r\n                        .pipe(\r\n                            // Handle the status of the request.\r\n                            switchMap(recipes => {\r\n                                // Here, we return a first action that is the loading success.\r\n                                const actions: recipesActions.RecipesAction[] = [\r\n                                    new recipesActions.LoadRecipesSuccess(\r\n                                        recipes\r\n                                    )\r\n                                ];\r\n                                // If the api returned less recipes that what asked for, we have reached the end of our data.\r\n                                if (recipes.length < this.LOADING_CHUNKS) {\r\n                                    actions.push(\r\n                                        new recipesActions.HasLoadedAllRecipes()\r\n                                    );\r\n                                }\r\n\r\n                                return actions;\r\n                            }),\r\n                            catchError(error =>\r\n                                of(new recipesActions.LoadRecipesFail(error))\r\n                            )\r\n                        );\r\n                } else {\r\n                    return of(new recipesActions.HasLoadedAllRecipes());\r\n                }\r\n            })\r\n        );\r\n\r\n    /**\r\n     * Handles the load recipes event when there is an active search.\r\n     */\r\n    @Effect()\r\n    loadRecipesWithSearch$ = this.actions$\r\n        .ofType(recipesActions.LOAD_RECIPES)\r\n        .pipe(\r\n            withLatestFrom(this.store.select(getRecipesState)),\r\n            filter(([action, storeState]) => storeState.searchIntent !== null),\r\n            switchMap(([action, storeState]) => {\r\n                const searchIntent = storeState.searchIntent;\r\n                // If the store can load more recipes\r\n                if (storeState.canLoadMore) {\r\n                    // Request more recipes from the database.\r\n                    return this.apiGetRecipesService\r\n                        .advancedSearch(searchIntent)\r\n                        .pipe(\r\n                            // Handle the status of the request.\r\n                            switchMap(recipes => {\r\n                                // Here, we return a first action that is the loading success.\r\n                                const actions = [\r\n                                    new recipesActions.LoadRecipesSuccess(\r\n                                        recipes\r\n                                    ),\r\n                                    new recipesActions.HasLoadedAllRecipes()\r\n                                ];\r\n\r\n                                return actions;\r\n                            }),\r\n                            catchError(error =>\r\n                                of(new recipesActions.LoadRecipesFail(error))\r\n                            )\r\n                        );\r\n                } else {\r\n                    return of(new recipesActions.HasLoadedAllRecipes());\r\n                }\r\n            })\r\n        );\r\n\r\n    /**\r\n     * This effect considers that the user already checked in the store if the recipe\r\n     * was there.\r\n     */\r\n    @Effect()\r\n    loadRecipe$ = this.actions$.ofType(recipesActions.LOAD_RECIPE).pipe(\r\n        switchMap(action => {\r\n            const recipeId = (<recipesActions.LoadRecipe>action).payload;\r\n            // Request more recipes from the database.\r\n            return this.apiSpecificRecipeService.getRecipe(recipeId).pipe(\r\n                // Handle the status of the request.\r\n                switchMap(recipe => {\r\n                    return of(new recipesActions.LoadRecipesSuccess([recipe]));\r\n                }),\r\n                catchError(error => {\r\n                    if (error.status === 404) {\r\n                        return of(new recipesActions.RecipeNotFound(error));\r\n                    } else {\r\n                        return of(new recipesActions.LoadRecipesFail(error));\r\n                    }\r\n                })\r\n            );\r\n        })\r\n    );\r\n\r\n    @Effect()\r\n    createRecipe$ = this.actions$.ofType(recipesActions.CREATE_RECIPE).pipe(\r\n        switchMap(action => {\r\n            const recipeToAdd = (<recipesActions.CreateRecipe>action).payload;\r\n            // Add recipe to the database\r\n            return this.apiSpecificRecipeService.addRecipe(recipeToAdd).pipe(\r\n                // Handle the status of the request.\r\n                switchMap((recipe: Recipe) => {\r\n                    // Here, we return the create recipe success action.\r\n                    return of(new recipesActions.CreateRecipeSuccess(recipe));\r\n                }),\r\n                catchError(error =>\r\n                    of(new recipesActions.CreateRecipeFail(error))\r\n                )\r\n            );\r\n        })\r\n    );\r\n\r\n    @Effect()\r\n    updateRecipe$ = this.actions$.ofType(recipesActions.UPDATE_RECIPE).pipe(\r\n        switchMap(action => {\r\n            const recipeToUpdate = (<recipesActions.UpdateRecipe>action)\r\n                .payload;\r\n            // Update recipe in the database\r\n            return this.apiSpecificRecipeService\r\n                .updateRecipe(recipeToUpdate._id, recipeToUpdate)\r\n                .pipe(\r\n                    // Handle the status of the request.\r\n                    switchMap((recipe: Recipe) => {\r\n                        // Here, we return the update recipe success action.\r\n                        return of(\r\n                            new recipesActions.UpdateRecipeSuccess(recipe)\r\n                        );\r\n                    }),\r\n                    catchError(error =>\r\n                        of(new recipesActions.UpdateRecipeFail(error))\r\n                    )\r\n                );\r\n        })\r\n    );\r\n\r\n    @Effect()\r\n    deleteRecipe$ = this.actions$.ofType(recipesActions.DELETE_RECIPE).pipe(\r\n        switchMap(action => {\r\n            const recipeIdToDelete = (<recipesActions.DeleteRecipe>action)\r\n                .payload;\r\n            // Add recipe to the database\r\n            return this.apiSpecificRecipeService\r\n                .deleteRecipe(recipeIdToDelete)\r\n                .pipe(\r\n                    // Handle the status of the request.\r\n                    switchMap(() => {\r\n                        // Here, we return the delete recipe success action.\r\n                        return of(\r\n                            new recipesActions.DeleteRecipeSuccess(\r\n                                recipeIdToDelete\r\n                            )\r\n                        );\r\n                    }),\r\n                    catchError(error =>\r\n                        of(new recipesActions.DeleteRecipeFail(error))\r\n                    )\r\n                );\r\n        })\r\n    );\r\n\r\n    @Effect()\r\n    showSaveSuccessful$ = this.actions$\r\n        .ofType(\r\n            recipesActions.CREATE_RECIPE_SUCCESS,\r\n            recipesActions.UPDATE_RECIPE_SUCCESS\r\n        )\r\n        .pipe(\r\n            switchMap(action => {\r\n                this.loggerService.info(\"Vos changements sont sauvegardés\");\r\n\r\n                return empty();\r\n            })\r\n        );\r\n\r\n        @Effect()\r\n        redirectToRecipePage$ = this.actions$\r\n            .ofType(\r\n                recipesActions.CREATE_RECIPE_SUCCESS,\r\n                recipesActions.DELETE_RECIPE_SUCCESS,\r\n                recipesActions.UPDATE_RECIPE_SUCCESS\r\n            )\r\n            .pipe(\r\n                switchMap(action => {\r\n                    this.router.navigateByUrl(\"recipes\");\r\n\r\n                    return empty();\r\n                })\r\n            );\r\n}\r\n","export * from './reducers';\r\nexport * from './actions';\r\nexport * from './selectors';\r\n","export { recipesReducer, RecipesState } from './recipes.reducer';\r\n","import * as fromRecipes from '../actions/recipes.action';\r\nimport { Recipe } from '../../../../recipes/shared/recipe.model';\r\nimport { SearchIntent } from '../../../../search/advanced-recipe-search/shared';\r\n\r\nexport interface RecipesState {\r\n    entities: { [id: string]: Recipe };\r\n    loaded: boolean;\r\n    loading: boolean;\r\n    canLoadMore: boolean;\r\n    searchIntent: SearchIntent;\r\n}\r\n\r\nexport const initialState: RecipesState = {\r\n    entities: {},\r\n    loaded: false,\r\n    loading: false,\r\n    canLoadMore: true,\r\n    searchIntent: null\r\n};\r\n\r\nexport function recipesReducer(state = initialState, action: fromRecipes.RecipesAction): RecipesState {\r\n    switch (action.type) {\r\n        case fromRecipes.LOAD_RECIPES:\r\n        case fromRecipes.LOAD_RECIPE: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        }\r\n        case fromRecipes.LOAD_RECIPES_FAIL: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: false\r\n            };\r\n        }\r\n        case fromRecipes.LOAD_RECIPES_SUCCESS: {\r\n            const recipes = action.payload;\r\n            // Flattening the state for faster lookup. It becomes a map of <id, recipe>.\r\n            const allEntities = recipes.reduce(\r\n                (entities: { [id: string]: Recipe }, recipe: Recipe) => {\r\n                    return {\r\n                        ...entities,\r\n                        [recipe._id]: recipe\r\n                    };\r\n                },\r\n                {\r\n                    ...state.entities\r\n                }\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: true,\r\n                entities: allEntities\r\n            };\r\n        }\r\n        case fromRecipes.HAS_LOADED_ALL_RECIPES: {\r\n            return {\r\n                ...state,\r\n                canLoadMore: false\r\n            };\r\n        }\r\n        // Search\r\n        case fromRecipes.SEARCH_RECIPES: {\r\n            const searchIntent = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                searchIntent\r\n            };\r\n        }\r\n        case fromRecipes.CANCEL_SEARCH_RECIPES: {\r\n\r\n            return {\r\n                ...state,\r\n                searchIntent: null,\r\n                canLoadMore: true\r\n            };\r\n        }\r\n        // Create\r\n        case fromRecipes.CREATE_RECIPE_SUCCESS: {\r\n            const newRecipe = action.payload;\r\n            const flattenedNewRecipe = {[newRecipe._id]: newRecipe};\r\n            const entities = Object.assign({}, state.entities, flattenedNewRecipe);\r\n\r\n            return {\r\n                ...state,\r\n                entities\r\n            };\r\n        }\r\n        // Update\r\n        case fromRecipes.UPDATE_RECIPE_SUCCESS: {\r\n            const updatedRecipe = action.payload;\r\n            // Working on a copy of the entities for immutability.\r\n            const copyOfEntities = Object.assign({}, state.entities);\r\n            // Updating our clientside recipe.\r\n            copyOfEntities[updatedRecipe._id] = updatedRecipe;\r\n\r\n            return {\r\n                ...state,\r\n                entities: copyOfEntities\r\n            };\r\n        }\r\n        // Delete\r\n        case fromRecipes.DELETE_RECIPE_SUCCESS: {\r\n            const deletedRecipeId = action.payload;\r\n            // Working on a copy of the entities for immutability.\r\n            const copyOfEntities = Object.assign({}, state.entities);\r\n            // Removing the recipe from our clientside recipe.\r\n            delete copyOfEntities[deletedRecipeId];\r\n\r\n            return {\r\n                ...state,\r\n                entities: copyOfEntities\r\n            };\r\n        }\r\n        // We are handling the create, update and delete recipe fail in the error-handling.effects.ts file\r\n        // since it requires logging.\r\n\r\n        // Clear Recipes\r\n        case fromRecipes.CLEAR_USER_DATA: {\r\n            return initialState;\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport const getRecipesLoading = (state: RecipesState) => state.loading;\r\nexport const getRecipesLoaded = (state: RecipesState) => state.loading;\r\nexport const getRecipesEntities = (state: RecipesState) => state.entities;\r\nexport const getCanLoadMoreRecipes = (state: RecipesState) => state.canLoadMore;\r\nexport const getSearchIntent = (state: RecipesState) => state.searchIntent;\r\n","export * from './recipes.selectors';\r\n","import { createSelector } from \"@ngrx/store\";\r\n\r\nimport * as fromRoot from \"../../../../routing/router-store\";\r\nimport * as fromFeatures from \"../../store-state\";\r\nimport * as fromRecipes from \"../reducers/recipes.reducer\";\r\nimport { Recipe } from \"../../../../recipes/shared/recipe.model\";\r\nimport { SearchIntent, SearchIntentMatcher } from \"../../../../search/advanced-recipe-search/shared/\";\r\n\r\n// Recipes state\r\nexport const getRecipesState = createSelector(\r\n    fromFeatures.getDataState,\r\n    (state: fromFeatures.DataState) => state.recipes\r\n);\r\n\r\nexport const getRecipesEntities = createSelector(\r\n    getRecipesState,\r\n    fromRecipes.getRecipesEntities\r\n);\r\n// Returns all entites in an array\r\nexport const getAllRecipes = createSelector(getRecipesEntities, entities => {\r\n    return Object.keys(entities).map(id => entities[id]);\r\n});\r\n\r\nexport const getRecipesLoaded = createSelector(\r\n    getRecipesState,\r\n    fromRecipes.getRecipesLoaded\r\n);\r\n\r\nexport const getRecipesLoading = createSelector(\r\n    getRecipesState,\r\n    fromRecipes.getRecipesLoading\r\n);\r\n\r\nexport const getCanLoadMoreRecipes = createSelector(\r\n    getRecipesState,\r\n    fromRecipes.getCanLoadMoreRecipes\r\n);\r\n\r\nexport const getSearchIntent = createSelector(\r\n    getRecipesState,\r\n    fromRecipes.getSearchIntent\r\n);\r\n\r\nexport const getSearchedRecipes = createSelector(\r\n    getAllRecipes,\r\n    fromRecipes.getSearchIntent,\r\n    (recipes: Recipe[], searchIntent: SearchIntent) => {\r\n        // If no search intent is applied, return all recipes.\r\n        if (!searchIntent) {\r\n            return recipes;\r\n        }\r\n        // Else, retrieve the recipes that are matching the search intent.\r\n        else {\r\n            return recipes.filter(recipe =>\r\n                SearchIntentMatcher.isRecipeMatchingIntent(recipe, searchIntent)\r\n            );\r\n        }\r\n    }\r\n);\r\n\r\n// Returns the selected recipe from the url.\r\nexport const getSelectedRecipe = createSelector(\r\n    getRecipesEntities,\r\n    fromRoot.getRouterState,\r\n    (entities, router): Recipe => {\r\n        return router.state && entities[router.state.params.id];\r\n    }\r\n);\r\n","import { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\r\nimport { RecipesState, recipesReducer } from './recipes/reducers';\r\nimport { AuthState, authReducer } from './auth/reducers';\r\n\r\nexport interface DataState {\r\n    recipes: RecipesState;\r\n    auth: AuthState;\r\n}\r\n\r\n// Describes the reducer map and how they are composed.\r\nexport const reducers: ActionReducerMap<DataState> = {\r\n    recipes: recipesReducer,\r\n    auth: authReducer\r\n};\r\n\r\nexport const getDataState = createFeatureSelector<DataState>('data');\r\n","export class User {\r\n    authId: string;\r\n    firstName: string;\r\n    familyName: string;\r\n    fullName: string;\r\n    email: string;\r\n    profilePicture: any;\r\n\r\n    constructor() {}\r\n}\r\n","module.exports = \"\"","module.exports = \"<mcb-recipe-grid></mcb-recipe-grid>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mcb-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent {}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"mcb-intro-page\",\r\n    templateUrl: \"intro-page.html\",\r\n    styleUrls: [\"intro-page.css\"]\r\n})\r\nexport class IntroPageComponent {}\r\n","module.exports = \"@media screen and (min-width: 1024px) {\\r\\n  .main-container {\\r\\n    margin: 0 auto;\\r\\n    width:30vw;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 768px) and (max-width: 1024px) {\\r\\n  .main-container {\\r\\n    margin: 0 auto;\\r\\n    width:70vw;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 768px) {\\r\\n  .main-container {\\r\\n    width:95vw;\\r\\n  }\\r\\n}\\r\\n\\r\\n.img-source-container {\\r\\n  margin-bottom: 10px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.img-source {\\r\\n  font-size: 0.6em;\\r\\n  margin-top: 0;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.img-source a {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\r\\n  <mat-card>\\r\\n    <h1>Website under construction</h1>\\r\\n    <img class=\\\"mat-elevation-z1\\\" src=\\\"../../../assets/under-construction.jpg\\\" mat-card-image>\\r\\n\\r\\n    <mat-card-content>\\r\\n      <p>\\r\\n        Hi, my name is Mathieu Dumoulin and I'm the awesome man behind this website.\\r\\n        I'm developing it in my spare time. For the moment, some functionalities are\\r\\n        not yet implemented. This site is only meant to run on a desktop\\r\\n        computer. The user interface may look weird if used on a mobile device.\\r\\n        Before having fun with the site, it is important to note that I will delete all data\\r\\n        created before launching this website.\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n\\r\\n    <mat-card-actions align=\\\"end\\\">\\r\\n      <button type=\\\"button\\\" color=\\\"primary\\\" [routerLink]=\\\"['/login']\\\" mat-button>I'm ready to have fun!</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \".main-container {\\r\\n  min-height: 80vh;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: space-around;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.login-container {\\r\\n  max-width: 400px;\\r\\n  padding: 30px;\\r\\n\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.social-signin {\\r\\n  display: flex;\\r\\n  justify-content: space-around;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n/*.login-container fieldset {\\r\\n  border: none;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: space-between;\\r\\n}*/\\r\\n\\r\\n.top-section {\\r\\n  text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"main-container\\\">\\r\\n    <div class=\\\"login-container mat-elevation-z8\\\">\\r\\n        <div class=\\\"top-section\\\">\\r\\n            <h1>Connexion</h1>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"social-signin\\\">\\r\\n            <div id=\\\"signin-with-google\\\">Se connecter avec Google</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--<form class=\\\"login-container mat-elevation-z8\\\" [formGroup]=\\\"form\\\">\\r\\n    <fieldset>\\r\\n      <div class=\\\"top-section\\\">\\r\\n        <h1>Connexion</h1>\\r\\n      </div>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input placeholder=\\\"Courriel\\\" formControlName=\\\"email\\\" matInput required>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"password\\\" placeholder=\\\"Mot de passe\\\" formControlName=\\\"password\\\" matInput required>\\r\\n      </mat-form-field>\\r\\n\\r\\n\\r\\n    </fieldset>-->\\r\\n\\r\\n    <!--<div class=\\\"align-end\\\">\\r\\n      <button color=\\\"primary\\\" (click)=\\\"authenticate()\\\" mat-raised-button>Se connecter</button>\\r\\n    </div>\\r\\n  </form>-->\\r\\n</div>\\r\\n\"","import { Component, OnInit, AfterViewInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthenticationService } from \"../../core/authentication/authentication.service\";\r\n\r\ndeclare const gapi: any;\r\n\r\n@Component({\r\n    selector: \"mcb-login-page\",\r\n    templateUrl: \"./login-page.component.html\",\r\n    styleUrls: [\"./login-page.component.css\"]\r\n})\r\nexport class LoginPageComponent implements OnInit, AfterViewInit {\r\n    /*form:FormGroup;\r\n\r\n  constructor(private fb:FormBuilder/*, private authService: AuthService,\r\n              private router: Router) {\r\n\r\n    this.form = this.fb.group({\r\n      email: [''],\r\n      password: ['']\r\n    });\r\n  }*/\r\n\r\n    constructor(private authService: AuthenticationService) {}\r\n\r\n    ngOnInit() {}\r\n\r\n    ngAfterViewInit() {\r\n        gapi.signin2.render(\"signin-with-google\", {\r\n            scope: \"profile email\",\r\n            width: 240,\r\n            height: 50,\r\n            longtitle: true,\r\n            theme: \"dark\",\r\n            onsuccess: param => this.authService.onSignInWithGoogle(param)\r\n        });\r\n    }\r\n\r\n    /*authenticate() {\r\n    const val = this.form.value;\r\n\r\n    if (val.email && val.password) {\r\n      console.log(\"login is valid\");\r\n    }\r\n    alert(\"Not yet implemented.\");\r\n  }*/\r\n\r\n    /*onSignInWithGoogle(googleUser:any) {\r\n    this.authService.onSignInWithGoogle(googleUser)\r\n  }*/\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>\\n  Page not found :(\\n</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mcb-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from '@angular/router';\r\n// Components\r\nimport { AdvancedRecipeSearchComponent } from \"../search/advanced-recipe-search/advanced-recipe-search.component\";\r\nimport { AdvancedRecipeSearchModule } from \"../search/advanced-recipe-search/advanced-recipe-search.module\";\r\nimport { EquipmentListBox } from \"../recipes/equipment/equipment-listbox/equipment-listbox.component\";\r\nimport { EquipmentListItem } from \"../recipes/equipment/equipment-listitem/equipment-listitem.component\";\r\nimport { HomePageComponent } from \"./home-page/home-page.component\";\r\nimport { IngredientListboxModule } from \"../recipes/ingredients/ingredient-listbox/ingredient-listbox.module\";\r\nimport { IngredientSectionComponent } from \"../recipes/ingredients/ingredient-section/ingredient-section.component\";\r\nimport { IngredientSectionWrapper } from \"../recipes/ingredients/ingredient-section-wrapper/ingredient-section-wrapper.component\";\r\nimport { IntroPageComponent } from \"./intro-page/intro-page.component\";\r\nimport { LoginPageComponent } from \"./login-page/login-page.component\";\r\nimport { RecipeCreatorComponent } from \"./recipe-creator/recipe-creator.component\";\r\nimport { RecipeGridComponent } from './recipe-grid/recipe-grid.component';\r\nimport { RecipeListComponent } from \"../recipes/recipe-list/recipe-list.component\";\r\nimport { RecipePageComponent } from \"./recipe-page/recipe-page.component\";\r\nimport { StepListbox } from \"../recipes/steps/step-listbox/step-listbox.component\";\r\nimport { StepSectionComponent } from \"../recipes/steps/step-section/step-section.component\";\r\nimport { StepSectionWrapper } from \"../recipes/steps/step-section-wrapper/step-section-wrapper.component\";\r\n// Modules\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\nimport { ControlsModule } from \"../controls/controls.module\";\r\nimport { CoreModule } from \"../core/core.module\";\r\nimport { UtilsModule } from \"../utils/utils.module\";\r\n// Services\r\nimport { ApiGetRecipesService } from \"../recipes/shared/api-get-recipes.service\";\r\nimport { ApiSpecificRecipeService } from \"../recipes/shared/api-specific-recipe.service\";\r\nimport { GenresService } from \"../recipes/genre/shared/genre.service\";\r\nimport { RecipeCreatorFormComponent } from './recipe-creator/recipe-creator-form/recipe-creator-form.component';\r\nimport { RecipeViewerComponent } from './recipe-viewer/recipe-viewer.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { GridLayoutComponent } from './recipe-grid/grid-layout/grid-layout.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        AdvancedRecipeSearchModule,\r\n        AngularMaterialModule,\r\n        BrowserModule,\r\n        CommonModule,\r\n        ControlsModule,\r\n        CoreModule,\r\n        FormsModule, // ngModel\r\n        IngredientListboxModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        UtilsModule\r\n    ],\r\n    declarations: [\r\n        EquipmentListBox,\r\n        EquipmentListItem,\r\n        HomePageComponent,\r\n        IngredientSectionComponent,\r\n        IngredientSectionWrapper,\r\n        IntroPageComponent,\r\n        LoginPageComponent,\r\n        RecipeCreatorComponent,\r\n        RecipeListComponent,\r\n        RecipePageComponent,\r\n        StepListbox,\r\n        StepSectionComponent,\r\n        StepSectionWrapper,\r\n        RecipeCreatorFormComponent,\r\n        RecipeViewerComponent,\r\n        NotFoundComponent,\r\n        RecipeGridComponent,\r\n        GridLayoutComponent\r\n    ],\r\n    exports: [\r\n        AngularMaterialModule,\r\n        BrowserModule,\r\n        CommonModule,\r\n        ControlsModule,\r\n        CoreModule,\r\n        FormsModule, // ngModel,\r\n        ReactiveFormsModule\r\n    ],\r\n    entryComponents: [AdvancedRecipeSearchComponent],\r\n    providers: [\r\n        ApiGetRecipesService,\r\n        ApiSpecificRecipeService,\r\n        GenresService\r\n    ]\r\n})\r\nexport class PagesModule {}\r\n","module.exports = \"\\r\\n.mat-form-field {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/* Top of the window */\\r\\n\\r\\n.header {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: stretch;\\r\\n}\\r\\n\\r\\n.tab-content {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 10px;\\r\\n    min-height: 320px;\\r\\n}\\r\\n\\r\\n/* Informations tab */\\r\\n\\r\\n.image-container {\\r\\n    display: flex;\\r\\n    justify-content: space-around;\\r\\n}\\r\\n\\r\\n.image {\\r\\n    height: 100%;\\r\\n    opacity: 1;\\r\\n    transition: opacity 0.5s ease-out;\\r\\n}\\r\\n\\r\\n.image.invisible {\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.image-box {\\r\\n    height: 300px;\\r\\n}\\r\\n\\r\\n.recipe-info-inputs {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.time-container {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.time-input {\\r\\n    width: 30%;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 1501px) {\\r\\n    .recipe-info-inputs .mat-form-field:not(.time-input) {\\r\\n        width: 100%;\\r\\n    }\\r\\n    .tab-content {\\r\\n        width: 1100px;\\r\\n    }\\r\\n    .recipe-info {\\r\\n        flex-direction: row-reverse;\\r\\n        justify-content: space-between;\\r\\n    }\\r\\n    .recipe-info-inputs {\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        justify-content: space-between;\\r\\n        width: 50%;\\r\\n    }\\r\\n    .image {\\r\\n        height: inherit;\\r\\n    }\\r\\n    .image-box {\\r\\n        width: 500px;\\r\\n    }\\r\\n    .tab-content.ingredients-steps {\\r\\n        justify-content: space-between;\\r\\n        flex-direction: row;\\r\\n    }\\r\\n    .time-container {\\r\\n        flex-direction: row;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 550px) and (max-width: 1500px) {\\r\\n    .mat-form-field {\\r\\n        width: 95%;\\r\\n    }\\r\\n    .tab-content {\\r\\n        width: 100%;\\r\\n    }\\r\\n    .image-box {\\r\\n        width: 100%;\\r\\n    }\\r\\n    .tab-content.ingredients-steps {\\r\\n        justify-content: center;\\r\\n        flex-direction: column;\\r\\n    }\\r\\n    .time-container {\\r\\n        flex-direction: column;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 550px) {\\r\\n    .mat-form-field {\\r\\n        width: 95%;\\r\\n    }\\r\\n    .tab-content {\\r\\n        width: 100vw;\\r\\n    }\\r\\n    .image-box {\\r\\n        width: 100%;\\r\\n    }\\r\\n    .tab-content.ingredients-steps {\\r\\n        justify-content: center;\\r\\n        flex-direction: column;\\r\\n    }\\r\\n    .time-container {\\r\\n        flex-direction: column;\\r\\n    }\\r\\n}\\r\\n\\r\\n.image-hover-shader {\\r\\n    position: absolute;\\r\\n    z-index: 2;\\r\\n    cursor: pointer;\\r\\n    display: flex;\\r\\n    justify-content: space-around;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.image-hover-shader img {\\r\\n    visibility: hidden;\\r\\n    height: 50px;\\r\\n}\\r\\n\\r\\n.image-hover-shader:hover {\\r\\n    background-color: rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.image-hover-shader:hover img {\\r\\n    visibility: visible;\\r\\n}\\r\\n\\r\\n.small-margin-bottom {\\r\\n    margin-bottom: 1em;\\r\\n}\\r\\n\\r\\n/* ---- END OF INFORMATIONS TAB -------- */\\r\\n\\r\\n/* ---- Ingredients & Steps tab -------- */\\r\\n\\r\\n.recipe-section {\\r\\n    width: 540px;\\r\\n    margin-bottom: 1em;\\r\\n}\\r\\n\\r\\n.tab-content.ingredients-steps {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n/* ---- Comments tab ---- */\\r\\n\\r\\n.tab-content.comments-tab {\\r\\n    justify-content: space-between;\\r\\n    flex-direction: row;\\r\\n}\\r\\n\\r\\n.comments-rating {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-between;\\r\\n    height: 100%;\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n.rating {\\r\\n    display: flex;\\r\\n    justify-content: space-around;\\r\\n}\\r\\n\\r\\n.rating-control {\\r\\n    font-size: 2em !important;\\r\\n}\\r\\n\\r\\n/* Window's actions */\\r\\n\\r\\n.delete-recipe-button {\\r\\n    margin-right: 20px;\\r\\n}\\r\\n\\r\\n.margin-top-20 {\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 1500px) {\\r\\n    .tab-content.comments-tab {\\r\\n        justify-content: space-between;\\r\\n        flex-direction: column;\\r\\n    }\\r\\n}\\r\\n\\r\\n.actions {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"header\\\">\\r\\n    <h1>{{windowTitle}}\\r\\n        <span *ngIf=\\\"recipe.name\\\">:\\r\\n            <strong>{{recipe.name}}</strong>\\r\\n        </span>\\r\\n    </h1>\\r\\n</div>\\r\\n\\r\\n<form autocomplete=\\\"off\\\" #createRecipeForm=\\\"ngForm\\\">\\r\\n    <mat-tab-group dynamicHeight=\\\"true\\\" [(selectedIndex)]=\\\"selectedTab\\\" #tabGroup mat-stretch-tabs>\\r\\n\\r\\n        <mat-tab label=\\\"Informations\\\">\\r\\n            <div class=\\\"tab-content recipe-info\\\">\\r\\n\\r\\n                <div class=\\\"image-container image-box small-margin-bottom\\\" matTooltip=\\\"Changez l'image de cette recette!\\\">\\r\\n                    <input type=\\\"file\\\" class=\\\"hidden\\\" accept=\\\"image/*\\\" (change)=\\\"updateImage($event)\\\" #fileInput>\\r\\n                    <img class=\\\"image\\\" [src]=\\\"recipe.image? recipe.image : defaultImage\\\" (load)=\\\"isImageLoaded = true\\\" [ngClass]=\\\"{invisible: !isImageLoaded}\\\" alt=\\\"Photo of the recipe\\\">\\r\\n                    <div class=\\\"image-hover-shader image-box\\\" (click)=\\\"fileInput.click()\\\">\\r\\n                        <img src=\\\"../../../assets/photo.svg\\\" alt=\\\"Change photo\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"recipe-info-inputs\\\">\\r\\n                    <div>\\r\\n                        <mat-form-field>\\r\\n                            <!--<input matInput placeholder=\\\"Nom de la recette\\\" name=\\\"name\\\" [(ngModel)]=\\\"recipe.name\\\" required>-->\\r\\n                            <input placeholder=\\\"Nom de la recette\\\" name=\\\"name\\\" [(ngModel)]=\\\"recipe.name\\\" matInput required>\\r\\n                            <mat-error> Le nom de la recette est\\r\\n                                <strong>requis</strong>\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n\\r\\n                        <mat-form-field>\\r\\n                            <!--<mat-select placeholder=\\\"Genre\\\" name=\\\"genre\\\" [(ngModel)]=\\\"recipe.genre\\\" required>\\r\\n               <mat-option *ngFor=\\\"let genre of GENRES\\\" [value]=\\\"genre\\\">{{ genre }}</mat-option>\\r\\n            </mat-select>-->\\r\\n                            <genre-autocomplete-input placeholder=\\\"Genre\\\" name=\\\"genre\\\" [(ngModel)]=\\\"recipe.genre\\\" required></genre-autocomplete-input>\\r\\n                            <mat-error> Le genre de la recette est\\r\\n                                <strong>requis</strong>\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Portion\\\" name=\\\"portion\\\" [(ngModel)]=\\\"recipe.results\\\" matTooltip=\\\"Vous de disposez pas de cette information? Remplissez-le plus tard!\\\">\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"time-container\\\">\\r\\n                        <mat-form-field class=\\\"time-input\\\">\\r\\n                            <ng-md-time-input [(ngModel)]=\\\"prepDuration\\\" name=\\\"prepDuration\\\" placeholder=\\\"Préparation\\\" minutesSeparator=\\\"\\\" (change)=\\\"updatePrepDuration()\\\" required></ng-md-time-input>\\r\\n                            <mat-icon matSuffix>schedule</mat-icon>\\r\\n                            <mat-error> Le temps de préparation est\\r\\n                                <strong>requis</strong>\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n\\r\\n                        <mat-form-field class=\\\"time-input\\\">\\r\\n                            <ng-md-time-input [(ngModel)]=\\\"cookDuration\\\" name=\\\"cookTime\\\" placeholder=\\\"Cuisson\\\" minutesSeparator=\\\"\\\" (change)=\\\"updateCookDuration()\\\"></ng-md-time-input>\\r\\n                            <mat-icon matSuffix>schedule</mat-icon>\\r\\n                            <mat-error> Le temps de cuisson est\\r\\n                                <strong>requis</strong>\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n\\r\\n                        <mat-form-field class=\\\"time-input\\\">\\r\\n                            <ng-md-time-input [(ngModel)]=\\\"cooldownDuration\\\" name=\\\"cooldownTime\\\" placeholder=\\\"Repos\\\" minutesSeparator=\\\"\\\" (change)=\\\"updateCooldownDuration()\\\"></ng-md-time-input>\\r\\n                            <mat-icon matSuffix>schedule</mat-icon>\\r\\n                            <mat-error> Le temps de repos est\\r\\n                                <strong>requis</strong>\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </mat-tab>\\r\\n\\r\\n        <mat-tab label=\\\"Étapes et Ingrédients\\\">\\r\\n            <div class=\\\"tab-content ingredients-steps\\\">\\r\\n                <ingredient-section-wrapper class=\\\"recipe-section\\\" name=\\\"ingredient-section\\\" [(ngModel)]=\\\"recipe.ingredientSection\\\"></ingredient-section-wrapper>\\r\\n\\r\\n                <step-section-wrapper class=\\\"recipe-section\\\" name=\\\"step-section\\\" [(ngModel)]=\\\"recipe.stepSection\\\"></step-section-wrapper>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n\\r\\n        <mat-tab label=\\\"Commentaires\\\">\\r\\n            <div class=\\\"tab-content comments-tab\\\">\\r\\n                <equipment-listbox class=\\\"recipe-section\\\" name=\\\"equipment-section\\\" [(ngModel)]=\\\"recipe.equipment\\\"></equipment-listbox>\\r\\n\\r\\n                <div class=\\\"recipe-section comments-rating\\\">\\r\\n                    <mat-form-field>\\r\\n                        <textarea matInput placeholder=\\\"Commentaires\\\" name=\\\"notes\\\" [(ngModel)]=\\\"recipe.notes\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n\\r\\n\\r\\n                    <mat-form-field hintLabel=\\\"Appuyez sur 'Enter' pour créer l'étiquette.\\\">\\r\\n                        <mat-chip-list #tagChipList>\\r\\n                            <mat-chip *ngFor=\\\"let tag of recipe.tags\\\" selectable=\\\"false\\\" removable=\\\"true\\\" (removed)=\\\"removeTag(tag)\\\">\\r\\n                                {{tag}}\\r\\n                                <mat-icon matChipRemove>cancel</mat-icon>\\r\\n                            </mat-chip>\\r\\n                            <input placeholder=\\\"Décrivez la recette à l'aide d'étiquettes\\\" #input maxlength=\\\"20\\\" [matChipInputFor]=\\\"tagChipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                                matChipInputAddOnBlur=\\\"true\\\" (matChipInputTokenEnd)=\\\"addTag($event)\\\" />\\r\\n                        </mat-chip-list>\\r\\n                        <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <div class=\\\"flex margin-top-20\\\">\\r\\n                        <Label>Note*</Label>\\r\\n                        <div class=\\\"rating\\\">\\r\\n                            <star-rating class=\\\"rating-control\\\" name=\\\"rating\\\" [(ngModel)]=\\\"recipe.rating\\\" required></star-rating>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n</form>\\r\\n<div class=\\\"actions\\\">\\r\\n    <button color=\\\"accent\\\" class=\\\"delete-recipe-button\\\" (click)=\\\"onDeleteRecipe()\\\" *ngIf=\\\" isEdit\\\" mat-button>Supprimer</button>\\r\\n\\r\\n    <button color=\\\"primary\\\" (click)=\\\"goToNextTab()\\\" *ngIf=\\\"selectedTab != NUMBER_OF_TABS\\\" mat-raised-button>Suivant</button>\\r\\n\\r\\n    <div [matTooltip]=\\\"!createRecipeForm.form.valid? 'Vous devez remplir tous les champs obligatoires*.' : null\\\">\\r\\n        <button color=\\\"accent\\\" (click)=\\\"isEdit? onUpdateRecipe() : onCreateRecipe()\\\" *ngIf=\\\"selectedTab === NUMBER_OF_TABS\\\" [disabled]=\\\"!createRecipeForm.form.valid\\\"\\r\\n            matTooltip=\\\"Vous pouvez désormais créer votre recette!\\\" mat-raised-button>{{finishButtonText}}</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { ENTER, COMMA } from \"@angular/cdk/keycodes\";\r\n// Moment\r\nimport { Duration } from \"moment\";\r\nimport * as moment from \"moment\";\r\n// Models\r\nimport { Recipe } from \"../../../recipes/shared/recipe.model\";\r\n// Services\r\nimport { ImageLoaderService } from \"../../../core/images/image-loader.service\";\r\n\r\n@Component({\r\n    selector: \"mcb-recipe-creator-form\",\r\n    templateUrl: \"./recipe-creator-form.component.html\",\r\n    styleUrls: [\"./recipe-creator-form.component.css\"]\r\n})\r\nexport class RecipeCreatorFormComponent implements OnInit {\r\n    private _recipe = new Recipe();\r\n    readonly defaultImage = Recipe.DEFAULT_IMAGE;\r\n    prepDuration: Duration;\r\n    cookDuration: Duration;\r\n    cooldownDuration: Duration;\r\n    NUMBER_OF_TABS = 2;\r\n    selectedTab = 0;\r\n    isEdit: boolean;\r\n    isImageLoaded = false;\r\n    finishButtonText = \"Créer\";\r\n    windowTitle = \"Création de la recette\";\r\n    // Tag chip list\r\n    separatorKeysCodes = [ENTER, COMMA];\r\n\r\n    @Input()\r\n    set recipe(recipe: Recipe) {\r\n        if (recipe) {\r\n            this._recipe = recipe;\r\n            this.setToEditMode();\r\n        } else {\r\n            this._recipe = new Recipe();\r\n            this.setToCreateMode();\r\n        }\r\n\r\n        this.setDurationsFromRecipe(this._recipe);\r\n    }\r\n    get recipe(): Recipe {\r\n        return this._recipe;\r\n    }\r\n\r\n    @Output() createRecipe = new EventEmitter<Recipe>();\r\n    @Output() updateRecipe = new EventEmitter<Recipe>();\r\n    @Output() deleteRecipe = new EventEmitter<Recipe>();\r\n\r\n    constructor(private imageLoader: ImageLoaderService) {}\r\n\r\n    ngOnInit() {}\r\n\r\n    setToEditMode(): void {\r\n        this.isEdit = true;\r\n        this.finishButtonText = \"Modifier\";\r\n        this.windowTitle = \"Modification d'une recette\";\r\n    }\r\n\r\n    setToCreateMode(): void {\r\n        this.isEdit = false;\r\n        this.finishButtonText = \"Créer\";\r\n        this.windowTitle = \"Création de la recette\";\r\n    }\r\n\r\n    /**\r\n     * Extracts the durations from the recipe (they are in minutes)\r\n     * and converts them into moment.duration object.\r\n     * @param recipe The recipe that contains the duration values\r\n     */\r\n    setDurationsFromRecipe(recipe: Recipe): void {\r\n        if (recipe) {\r\n            this.prepDuration = recipe.prepTime\r\n                ? moment.duration(recipe.prepTime, \"minutes\")\r\n                : null;\r\n            this.cookDuration = recipe.cookTime\r\n                ? moment.duration(recipe.cookTime, \"minutes\")\r\n                : null;\r\n            this.cooldownDuration = recipe.cooldownTime\r\n                ? moment.duration(recipe.cooldownTime, \"minutes\")\r\n                : null;\r\n        }\r\n    }\r\n\r\n    goToNextTab() {\r\n        this.selectedTab++;\r\n    }\r\n\r\n    addTag(event) {\r\n        const input = event.input;\r\n        const value = event.value;\r\n\r\n        // Add our tag\r\n        if ((value || \"\").trim()) {\r\n            this.recipe.tags.push(value.trim());\r\n        }\r\n\r\n        // Reset the input value\r\n        if (input) {\r\n            input.value = \"\";\r\n        }\r\n    }\r\n\r\n    removeTag(tagToDelete) {\r\n        const indexOfTag = this.recipe.tags.findIndex(\r\n            tag => tag === tagToDelete\r\n        );\r\n        this.recipe.tags.splice(indexOfTag, 1); // Removing the recipe from the list.\r\n    }\r\n\r\n    updatePrepDuration(): void {\r\n        if (this.prepDuration && moment.isDuration(this.prepDuration)) {\r\n            this.recipe.prepTime = this.prepDuration.asMinutes();\r\n        } else {\r\n            this.recipe.prepTime = 0;\r\n        }\r\n    }\r\n\r\n    updateCookDuration(): void {\r\n        if (this.cookDuration && moment.isDuration(this.cookDuration)) {\r\n            this.recipe.cookTime = this.cookDuration.asMinutes();\r\n        } else {\r\n            this.recipe.cookTime = 0;\r\n        }\r\n    }\r\n\r\n    updateCooldownDuration(): void {\r\n        if (this.cooldownDuration && moment.isDuration(this.cooldownDuration)) {\r\n            this.recipe.cooldownTime = this.cooldownDuration.asMinutes();\r\n        } else {\r\n            this.recipe.cooldownTime = 0;\r\n        }\r\n    }\r\n\r\n    updateImage(fileInput: any): void {\r\n        if (fileInput.target.files && fileInput.target.files[0]) {\r\n            this.imageLoader\r\n                .readImage(fileInput.target.files[0])\r\n                .then(image => {\r\n                    this.recipe.image = image.imageString;\r\n                });\r\n        }\r\n    }\r\n\r\n    onCreateRecipe() {\r\n        this.createRecipe.emit(this.recipe);\r\n    }\r\n\r\n    onUpdateRecipe() {\r\n        this.updateRecipe.emit(this.recipe);\r\n    }\r\n\r\n    onDeleteRecipe() {\r\n        this.deleteRecipe.emit(this.recipe);\r\n    }\r\n}\r\n","module.exports = \"/* For the create recipe window.*/\\r\\n.create-recipe-container {\\r\\n    padding: 10px;\\r\\n    max-width: 1200px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"create-recipe-container\\\">\\r\\n    <mcb-recipe-creator-form [recipe]=\\\"recipe$ | async\\\" (createRecipe)=\\\"createRecipe($event)\\\" (updateRecipe)=\\\"updateRecipe($event)\\\"\\r\\n        (deleteRecipe)=\\\"deleteRecipe($event)\\\"></mcb-recipe-creator-form>\\r\\n</div>\\r\\n\"","import { Component, Inject, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { ApiSpecificRecipeService } from \"../../recipes/shared/api-specific-recipe.service\";\r\n// Rxjs\r\nimport { Observable, Subscription } from \"rxjs\";\r\n// Ngrx Store\r\nimport { Store } from \"@ngrx/store\";\r\nimport * as fromStore from \"../../core/store\";\r\n// Models\r\nimport { Recipe } from \"../../recipes/shared/recipe.model\";\r\nimport { LoggerService } from \"../../core/logger\";\r\n\r\n@Component({\r\n    selector: \"mcb-recipe-creator\",\r\n    templateUrl: \"recipe-creator.component.html\",\r\n    styleUrls: [\"recipe-creator.component.css\"]\r\n})\r\nexport class RecipeCreatorComponent implements OnInit, OnDestroy {\r\n    recipe$: Observable<Recipe>;\r\n    originalRecipe: Recipe; // Keeping a copy of the recipe before modification.\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        private snackBar: MatSnackBar,\r\n        private loggerService: LoggerService,\r\n        private store: Store<fromStore.DataState>\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.recipe$ = this.store.select(fromStore.getSelectedRecipe);\r\n\r\n        // Keeping a copy of the recipe in case the user cancels the delete.\r\n        this.subscriptions.push(\r\n            this.recipe$.subscribe(recipe => {\r\n                if (recipe) {\r\n                    this.originalRecipe = Object.assign({}, recipe);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        for (const sub of this.subscriptions) {\r\n            sub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    createRecipe(recipe: Recipe): void {\r\n        this.store.dispatch(new fromStore.CreateRecipe(recipe));\r\n    }\r\n\r\n    updateRecipe(recipe: Recipe): void {\r\n        this.store.dispatch(new fromStore.UpdateRecipe(recipe));\r\n    }\r\n\r\n    deleteRecipe(recipe: Recipe): void {\r\n        this.store.dispatch(new fromStore.DeleteRecipe(recipe._id));\r\n        // Displaying a message to indicate that the recipe was removed.\r\n        const snackBarRef = this.loggerService.action(\r\n            \"La recette a été supprimée\",\r\n            \"Annuler\",\r\n            3000\r\n        );\r\n        snackBarRef.onAction().subscribe(() => {\r\n            this.store.dispatch(\r\n                new fromStore.CreateRecipe(this.originalRecipe)\r\n            );\r\n        });\r\n    }\r\n}\r\n","module.exports = \".grid {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.grid .col {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n    <p>This is a grid layout</p>\\r\\n    <div class=\\\"grid\\\">\\r\\n        <div class=\\\"col\\\" *ngIf=\\\"columnCount >= 1\\\" [ngStyle]=\\\"{'width.px': colWidth, 'margin.px': gutterSize}\\\">\\r\\n            <ng-content select=\\\".col-1\\\"></ng-content>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\" *ngIf=\\\"columnCount >= 2\\\" [ngStyle]=\\\"{'width.px': colWidth, 'margin.px': gutterSize}\\\">\\r\\n            <ng-content select=\\\".col-2\\\"></ng-content>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\" *ngIf=\\\"columnCount >= 3\\\" [ngStyle]=\\\"{'width.px': colWidth, 'margin.px': gutterSize}\\\">\\r\\n            <ng-content select=\\\".col-3\\\"></ng-content>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\" *ngIf=\\\"columnCount >= 4\\\" [ngStyle]=\\\"{'width.px': colWidth, 'margin.px': gutterSize}\\\">\\r\\n            <ng-content select=\\\".col-4\\\"></ng-content>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\" *ngIf=\\\"columnCount >= 5\\\" [ngStyle]=\\\"{'width.px': colWidth, 'margin.px': gutterSize}\\\">\\r\\n            <ng-content select=\\\".col-5\\\"></ng-content>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\" *ngIf=\\\"columnCount >= 6\\\" [ngStyle]=\\\"{'width.px': colWidth, 'margin.px': gutterSize}\\\">\\r\\n            <ng-content select=\\\".col-6\\\"></ng-content>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, HostBinding } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"mcb-grid-layout\",\r\n    templateUrl: \"./grid-layout.component.html\",\r\n    styleUrls: [\"./grid-layout.component.css\"]\r\n})\r\nexport class GridLayoutComponent implements OnInit {\r\n    /** In pixels */\r\n    private _gridWidth: number;\r\n    /** In pixels */\r\n    private _colWidth: number;\r\n\r\n    // Host Bindings\r\n    @HostBinding('style.width.px')\r\n    set gridWidth(width: number) {\r\n        this._gridWidth = width;\r\n        this.updateColWidth();\r\n    }\r\n    get gridWidth(): number {\r\n        return this._gridWidth;\r\n    }\r\n\r\n\r\n    // Inputs\r\n    @Input() gutterSize = 10;\r\n    @Input() set colWidth(width: number) {\r\n        this._colWidth = width;\r\n        this.updateColWidth();\r\n    }\r\n    get colWidth(): number {\r\n        return this._colWidth;\r\n    }\r\n\r\n    columnCount = 0;\r\n\r\n    constructor() {\r\n        this.gridWidth = 500;\r\n        this.colWidth = 100;\r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n    private updateColWidth() {\r\n        const currentGridWidth = this.gridWidth ? this.gridWidth : 0;\r\n        // Take all space available if the current col width is invalid.\r\n        const currentColWidth = this.colWidth && this.colWidth > 0 ? this.colWidth : 1;\r\n        this.columnCount = Math.floor(currentGridWidth / currentColWidth);\r\n        this._colWidth = Math.floor(currentGridWidth / this.columnCount); // Adjusting the width of the tiles.\r\n    }\r\n}\r\n","module.exports = \":host() {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.mainContainer {\\r\\n    flex-grow: 1;\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.recipe-list {\\r\\n    width: 100%;\\r\\n    height: 80vh;\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.table-header {\\r\\n    padding-bottom: 10px;\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.grid {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.tile {\\r\\n    background-color: aliceblue;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.recipe-image {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.edit-button {\\r\\n    min-width: 2.5em;\\r\\n    width: 2.5em;\\r\\n    padding: 0px;\\r\\n}\\r\\n\\r\\n.mat-column-actions {\\r\\n    max-width: 20px;\\r\\n}\\r\\n\\r\\n.actions {\\r\\n    display: flex;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\"","module.exports = \"<mat-card class=\\\"mainContainer\\\">\\r\\n    <mat-card-header>\\r\\n        <div class=\\\"table-header\\\">\\r\\n            <button class=\\\"button\\\" color=\\\"accent\\\" [routerLink]=\\\"['/recipe/create']\\\" mat-button>Créer une recette</button>\\r\\n            <button class=\\\"button\\\" color=\\\"accent\\\" (click)=\\\"advancedSearch()\\\" mat-button>\\r\\n                <mat-icon>search</mat-icon>Recherche avancée</button>\\r\\n        </div>\\r\\n    </mat-card-header>\\r\\n\\r\\n    <mat-card-content class=\\\"grid\\\" #grid>\\r\\n        <div class=\\\"column\\\" *ngFor=\\\"let column of columns\\\">\\r\\n            <div class=\\\"tile mat-elevation-z2\\\" [ngStyle]=\\\"{'width.px': colWidth, 'margin-right.px': gutterSize, 'margin-bottom.px': gutterSize}\\\" (click)=\\\"viewRecipe(recipe._id)\\\" *ngFor=\\\"let recipe of column\\\">\\r\\n                <div class=\\\"actions\\\">\\r\\n                    <mat-menu #appMenu=\\\"matMenu\\\">\\r\\n                        <button (click)=\\\"editRecipe(recipe._id)\\\" mat-menu-item>Modifier</button>\\r\\n                        <button (click)=\\\"deleteRecipe(recipe._id)\\\" mat-menu-item>Supprimer</button>\\r\\n                    </mat-menu>\\r\\n\\r\\n                    <button mat-icon-button color=\\\"secondary\\\" (click)=\\\"stopPropagation($event)\\\" [matMenuTriggerFor]=\\\"appMenu\\\">\\r\\n                        <mat-icon>more_vert</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <img class=\\\"recipe-image\\\" [src]=\\\"recipe.image? recipe.image: defaultImage\\\">\\r\\n                <h4>{{recipe.name}}</h4>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    ViewChild,\r\n    ElementRef,\r\n    HostListener,\r\n    AfterViewInit\r\n} from \"@angular/core\";\r\nimport {\r\n    MatDialog,\r\n    MatSnackBar,\r\n    MatSnackBarConfig,\r\n    MatSnackBarRef,\r\n    SimpleSnackBar\r\n} from \"@angular/material\";\r\nimport { Router } from \"@angular/router\";\r\n// Ngrx Store\r\nimport { Store, ActionsSubject } from \"@ngrx/store\";\r\nimport * as fromStore from \"../../core/store\";\r\n// Rxjs\r\nimport { Subscription } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\n// Components\r\nimport { AdvancedRecipeSearchComponent } from \"../../search/advanced-recipe-search/advanced-recipe-search.component\";\r\n// Rxjs\r\nimport { Observable } from \"rxjs/Observable\";\r\n// Models\r\nimport { Recipe } from \"../../recipes/shared/recipe.model\";\r\n// Services\r\nimport { LoggerService } from \"../../core/logger/logger.service\";\r\n// Others\r\nimport { InfiniteScroll } from \"../../recipes/shared/infinite-scroll.class\";\r\nimport { RecipeListDataSource } from \"../../recipes/recipe-list/recipe-list.datasource\";\r\n\r\n@Component({\r\n    selector: \"mcb-recipe-grid\",\r\n    templateUrl: \"./recipe-grid.component.html\",\r\n    styleUrls: [\"./recipe-grid.component.css\"]\r\n})\r\nexport class RecipeGridComponent extends InfiniteScroll\r\n    implements OnInit, AfterViewInit, OnDestroy {\r\n    /**\r\n     * the number is the scroll distance for which the loadMore function will\r\n     * be called, in pixels.\r\n     */\r\n    static readonly LOADING_DISTANCE = 20;\r\n    defaultImage = Recipe.DEFAULT_IMAGE;\r\n    // Layout management\r\n    columns = [];\r\n    numberOfColumn = 4;\r\n    colWidth = 200; /** In pixels */\r\n    readonly gutterSize = 16;\r\n    private gridWidth: number; /** In pixels */\r\n    private hasLoadedView = false;\r\n    @ViewChild(\"grid\") gridElement: ElementRef<HTMLDivElement>;\r\n    // Data management\r\n    dataSource: RecipeListDataSource;\r\n    recipes$: Observable<Recipe[]>;\r\n    recipes: Recipe[] = [];\r\n    private allDataIsLoaded = false;\r\n    private hasShownAllDataIsLoaded = false;\r\n    private canLoadMoreData$: Observable<boolean>;\r\n    private subcriptions: Subscription[] = [];\r\n    private searchSnackBarRef: MatSnackBarRef<SimpleSnackBar>;\r\n\r\n    constructor(\r\n        private actions$: ActionsSubject,\r\n        private loggerService: LoggerService,\r\n        private dialog: MatDialog,\r\n        private router: Router,\r\n        private snackbar: MatSnackBar,\r\n        private store: Store<fromStore.DataState>\r\n    ) {\r\n        super(RecipeGridComponent.LOADING_DISTANCE);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.listenToStoreState();\r\n        this.dataSource = new RecipeListDataSource(this.store);\r\n        this.recipes$ = this.dataSource.connect();\r\n\r\n        this.subcriptions.push(\r\n            this.recipes$.subscribe(recipes => {\r\n                this.recipes = recipes;\r\n                // This if prevents the view from being rendered twice in a row.\r\n                if (this.hasLoadedView) {\r\n                    this.updateGridDisplay();\r\n                }\r\n            })\r\n        );\r\n\r\n        // When moving from one page to another using the Angular Router, the\r\n        // recipeService is not reinitialized since it was injected to this class.\r\n        // We don't want to load more recipe when we navigate from one page to another\r\n        // but we want our table to display the proper recipes.\r\n        if (!this.allDataIsLoaded) {\r\n            this.loadMore();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.hasLoadedView = true;\r\n        setTimeout( () => this.formatRecipesForDisplay());\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.dataSource.disconnect();\r\n        for (const sub of this.subcriptions) {\r\n            sub.unsubscribe();\r\n        }\r\n\r\n        // Hide advanced search snack bar if we are leaving the page.\r\n        if (this.searchSnackBarRef) {\r\n            this.searchSnackBarRef.instance.action(); // Cancels the search.\r\n        }\r\n    }\r\n\r\n    viewRecipe(recipeId: string): void {\r\n        this.router.navigateByUrl(\"/recipes/\" + recipeId);\r\n    }\r\n\r\n    editRecipe(recipeId: string): void {\r\n        this.router.navigateByUrl(\"/recipe/edit/\" + recipeId);\r\n    }\r\n\r\n    deleteRecipe(recipeId: string): void {\r\n        this.store.dispatch(new fromStore.DeleteRecipe(recipeId));\r\n    }\r\n\r\n    stopPropagation(event: MouseEvent) {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    advancedSearch(): void {\r\n        this.dialog\r\n            .open(AdvancedRecipeSearchComponent)\r\n            .afterClosed()\r\n            .subscribe(response => {\r\n                // Ignoring when the user cancels the advanced search.\r\n                if (response) {\r\n                    this.store.dispatch(new fromStore.SearchRecipes(response));\r\n                    this.displaySearchCancelOption();\r\n                }\r\n            });\r\n    }\r\n\r\n    displaySearchCancelOption(): void {\r\n        const config = new MatSnackBarConfig();\r\n        config.horizontalPosition = \"right\";\r\n        config.panelClass = \"no-margin-bottom\";\r\n\r\n        this.searchSnackBarRef = this.loggerService.persistentAction(\r\n            \"Une recherche est active.\"\r\n        );\r\n\r\n        this.searchSnackBarRef.onAction().subscribe(() => {\r\n            this.store.dispatch(new fromStore.CancelSearchRecipes());\r\n            this.searchSnackBarRef = null;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Loads more recipe into the list.\r\n     */\r\n    loadMore(): Promise<any> {\r\n        // If we can still load more resources\r\n        if (!this.allDataIsLoaded) {\r\n            this.store.dispatch(new fromStore.LoadRecipes());\r\n            return this.canLoadMoreData$.pipe(take(1)).toPromise();\r\n        } else if (!this.hasShownAllDataIsLoaded) {\r\n            this.allDataIsLoaded = true;\r\n            this.hasShownAllDataIsLoaded = true;\r\n            this.showAllDataIsLoadedMessage();\r\n        }\r\n\r\n        // Else,\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private listenToStoreState(): void {\r\n        this.canLoadMoreData$ = this.store.select(\r\n            fromStore.getCanLoadMoreRecipes\r\n        );\r\n\r\n        this.subcriptions.push(\r\n            this.canLoadMoreData$.subscribe(\r\n                canLoadMore => (this.allDataIsLoaded = !canLoadMore)\r\n            )\r\n        );\r\n    }\r\n\r\n    private formatRecipesForDisplay(): void {\r\n        if (!this.gridElement) {\r\n            return;\r\n        }\r\n\r\n        this.gridWidth = this.gridElement.nativeElement.offsetWidth;\r\n        const currentGridWidth = this.gridWidth;\r\n        // Take all space available if the current col width is invalid.\r\n        const currentColWidth = this.colWidth;\r\n        const newNumberOfColumn = Math.floor(\r\n            currentGridWidth / (currentColWidth + this.gutterSize)\r\n        );\r\n\r\n        if (this.numberOfColumn !== newNumberOfColumn) {\r\n            this.numberOfColumn = newNumberOfColumn;\r\n            this.updateGridDisplay();\r\n        }\r\n    }\r\n\r\n    private updateGridDisplay(): void {\r\n        this.columns = [];\r\n        // Setting up the columns to empty array.\r\n        for (let i = 0; i < this.numberOfColumn; ++i) {\r\n            this.columns.push([]);\r\n        }\r\n\r\n        // Then, filling these array with recipes.\r\n        for (let col = 0; col < this.numberOfColumn; ++col) {\r\n            for (let i = col; i < this.recipes.length; i += this.numberOfColumn) {\r\n                this.columns[col].push(this.recipes[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private showAllDataIsLoadedMessage(): void {\r\n        // There are no actions for this snackbar since it displays only an\r\n        // information message. It is frustrating to the user if he tries to close\r\n        // this snackbar but the snackbar closes automatically beforehand.\r\n        this.loggerService.info(\"Toutes les recettes ont été chargées.\", \"\");\r\n    }\r\n\r\n    ////////////////// Grid responsive layout management /////////////////////\r\n\r\n    @HostListener(\"window:resize\")\r\n    onComponentResize() {\r\n        // this._gridWidth = width;\r\n        this.resizeThrottler(this.formatRecipesForDisplay.bind(this));\r\n    }\r\n\r\n    private resizeTimeout; // Used to trottle the grid resize event.\r\n    resizeThrottler(callback: Function) {\r\n        // ignore resize events as long as an actualResizeHandler execution is in the queue\r\n        if (!this.resizeTimeout) {\r\n            this.resizeTimeout = setTimeout(() => {\r\n                this.resizeTimeout = null;\r\n                callback();\r\n\r\n                // The actualResizeHandler will execute at a rate of 15fps\r\n            }, 66);\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'mcb-recipe-page',\r\n  templateUrl: 'recipe-page.html',\r\n  styleUrls: ['recipe-page.css']\r\n})\r\nexport class RecipePageComponent {}\r\n","module.exports = \"\"","module.exports = \"<mat-sidenav-container>\\r\\n  <mat-sidenav>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mcb-recipe-list></mcb-recipe-list>\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \"/* For the view recipe window.*/\\r\\n\\r\\n:host {\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    background-image: url('recipe-background-blur.jpeg');\\r\\n    background-size: contain;\\r\\n}\\r\\n\\r\\n.window {\\r\\n    width: 700px;\\r\\n    /* ~8.5 inches */\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-between;\\r\\n    margin: 10px 0;\\r\\n    background-color: white;\\r\\n    padding: 20px;\\r\\n    flex-grow: 1;\\r\\n    /*  animation-name: expand;\\r\\n    animation-duration: .9s;*/\\r\\n}\\r\\n\\r\\n/* Top of the window */\\r\\n\\r\\n.top-section {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: stretch;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.first-row {\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    margin-top: -1em;\\r\\n    /* To override the padding from the .mat-dialog-container */\\r\\n    margin-bottom: 1.5em;\\r\\n}\\r\\n\\r\\n/* Genre */\\r\\n\\r\\n.recipe-genre {\\r\\n    text-align: center;\\r\\n    margin: 0;\\r\\n    color: gray;\\r\\n    font: caption;\\r\\n    font-weight: normal;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/* General recipe info */\\r\\n\\r\\n.recipe-top-info {\\r\\n    flex-grow: 1;\\r\\n    margin-right: 5%;\\r\\n}\\r\\n\\r\\n.recipe-name-container {\\r\\n    height: 52%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-between;\\r\\n    padding-bottom: 4%;\\r\\n}\\r\\n\\r\\nstar-rating {\\r\\n    font-size: 0.9em;\\r\\n}\\r\\n\\r\\nmat-chip-list:focus {\\r\\n    outline: none;\\r\\n}\\r\\n\\r\\n.recipe-name {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.recipe-image {\\r\\n    width: 200px;\\r\\n    height: 200px;\\r\\n}\\r\\n\\r\\n.border {\\r\\n    border: solid black 1px;\\r\\n}\\r\\n\\r\\nhr {\\r\\n    border-color: lightgrey;\\r\\n    border-top: 1px;\\r\\n}\\r\\n\\r\\n.recipe-portions-time {\\r\\n    font-size: 0.9em;\\r\\n    flex-grow: 1;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.size-20 {\\r\\n    font-size: 1.2em;\\r\\n}\\r\\n\\r\\n/* Middle of the window */\\r\\n\\r\\n.middle-section {\\r\\n    flex-grow: 1;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n.row {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.section {\\r\\n    flex-basis: 47%;\\r\\n}\\r\\n\\r\\n.dialog-content {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-grow: 1;\\r\\n}\\r\\n\\r\\n/*.section:not(:last-child) {\\r\\n    margin-bottom: 25px;\\r\\n  }*/\\r\\n\\r\\n/* Ingredients */\\r\\n\\r\\n.recipe-ingredients {\\r\\n    flex-basis: 45%;\\r\\n}\\r\\n\\r\\n.ingredient {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n.ingredient:not(:last-child), .step:not(:last-child) {\\r\\n    margin-bottom: 0.2em;\\r\\n}\\r\\n\\r\\n.ingredient-quantity {\\r\\n    padding-right: 10px;\\r\\n    flex-shrink: 0;\\r\\n    min-width: 87px;\\r\\n}\\r\\n\\r\\n.ingredient-name {\\r\\n    flex-grow: 1;\\r\\n}\\r\\n\\r\\n.small-marginbottom {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n/* Steps */\\r\\n\\r\\n.recipe-steps {\\r\\n    flex-basis: 45%;\\r\\n}\\r\\n\\r\\n.step {\\r\\n    text-align: justify;\\r\\n}\\r\\n\\r\\n.reset-counter {\\r\\n    counter-reset: stepNumber;\\r\\n}\\r\\n\\r\\n.step:before {\\r\\n    float: left;\\r\\n    content: counter(stepNumber);\\r\\n    counter-increment: stepNumber;\\r\\n    margin-left: -1.5em;\\r\\n}\\r\\n\\r\\n/* Notes */\\r\\n\\r\\n.recipe-notes {\\r\\n    width: 45%;\\r\\n}\\r\\n\\r\\n.note {\\r\\n    font-size: 0.95em;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.artisticFont {\\r\\n    font-family: Century Gothic, CenturyGothic, AppleGothic, sans-serif;\\r\\n    font-size: 0.9em;\\r\\n}\\r\\n\\r\\n/* Loading state */\\r\\n\\r\\n.shader {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: stretch;\\r\\n}\\r\\n\\r\\n.bottom-section {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n\\r\\n.equipment {\\r\\n    margin-bottom: 3%;\\r\\n    width: 45%;\\r\\n}\\r\\n\\r\\n.equipment h4 {\\r\\n    margin-top: 0;\\r\\n}\\r\\n\\r\\n.actions {\\r\\n    display: flex;\\r\\n    flex-direction: row-reverse;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n/*@keyframes expand {\\r\\n      0%   {\\r\\n        width: 0px;\\r\\n        min-height: 0px;\\r\\n      }\\r\\n      100% {\\r\\n        width: 700px;  /* ~8.5 inches */\\r\\n\\r\\n/*min-height: 825px; /* 11 inches  */\\r\\n\\r\\n/*    }\\r\\n  }*/\\r\\n\"","module.exports = \"<!--<div class=\\\"modal-header viewRecipe-ModalHeader\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>-->\\r\\n<!-- div class=\\\"modal hide\\\" id=\\\"pleaseWaitDialog\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" >\\r\\n      <div class=\\\"modal-header\\\">\\r\\n          <h1>Processing...</h1>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"progress progress-striped active\\\">\\r\\n              <div class=\\\"bar\\\" style=\\\"width: 100%;\\\"></div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>                                                        Modal error handling                  -->\\r\\n<div class=\\\"shader\\\" *ngIf=\\\"!recipe\\\">\\r\\n    <mat-progress-spinner mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n</div>\\r\\n<div class=\\\"window mat-elevation-z4\\\" *ngIf=\\\"recipe\\\">\\r\\n    <div class=\\\"top-section\\\">\\r\\n        <div class=\\\"first-row\\\">\\r\\n            <h4 class=\\\"recipe-genre\\\">\\r\\n                <small>{{ recipe.genre | uppercase }}</small>\\r\\n            </h4>\\r\\n        </div>\\r\\n        <div class=\\\"recipe-top-info\\\">\\r\\n            <div class=\\\"recipe-name-container\\\">\\r\\n                <div>\\r\\n                    <h2 class=\\\"recipe-name\\\" mat-dialog-title>{{recipe.name | uppercase}}</h2>\\r\\n                    <star-rating [readonly]=\\\"true\\\" [(ngModel)]=\\\"recipe.rating\\\"></star-rating>\\r\\n                </div>\\r\\n                <!-- tags -->\\r\\n                <mat-chip-list class=\\\"tags\\\" *ngIf=\\\"recipe.tags.length > 0\\\">\\r\\n                    <mat-chip *ngFor=\\\"let tag of recipe.tags\\\" color=\\\"primary\\\" selected=\\\"true\\\" disabled>{{tag}}</mat-chip>\\r\\n                </mat-chip-list>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <!-- Line separator -->\\r\\n            <div class=\\\"artisticFont recipe-portions-time\\\">\\r\\n                <span>Portions: {{ recipe.results }}</span> |\\r\\n                <span>\\r\\n                    <img src=\\\"../../../assets/butcher-knife-20.png\\\"> {{ convertToTime(recipe.prepTime) }}</span> |\\r\\n                <span>\\r\\n                    <img src=\\\"../../../assets/barbecue-20.png\\\"> {{ convertToTime(recipe.cookTime) }}</span> |\\r\\n                <span>\\r\\n                    <i class=\\\"material-icons size-20\\\">hourglass_empty</i> {{ recipe.cooldownTime != 0 ? convertToTime(recipe.cooldownTime) : '--' }}\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <img class=\\\"recipe-image\\\" [ngClass]=\\\"{'border mat-elevation-z3': recipe.image}\\\" [src]=\\\"recipe.image? recipe.image: defaultImage\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"dialog-content\\\">\\r\\n        <div class=\\\"middle-section artisticFont\\\">\\r\\n            <div>\\r\\n                <div class=\\\"ingredient-step-titles row\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                        <h4 class=\\\"small-marginbottom\\\">\\r\\n                            <strong>INGRÉDIENTS</strong>\\r\\n                        </h4>\\r\\n                    </div>\\r\\n                    <div class=\\\"section\\\">\\r\\n                        <h4 class=\\\"small-marginbottom\\\">\\r\\n                            <strong>ÉTAPES</strong>\\r\\n                        </h4>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" *ngFor=\\\"let section of biggestSection; let i = index\\\">\\r\\n                    <!-- The ingredients section -->\\r\\n                    <div class=\\\"section\\\">\\r\\n                        <div *ngIf=\\\"i < recipe.ingredientSection.length\\\">\\r\\n                            <h4 class=\\\"small-marginbottom\\\" *ngIf=\\\"recipe.ingredientSection[i].name\\\">\\r\\n                                <strong>\\r\\n                                    <em>{{recipe.ingredientSection[i].name}}</em>\\r\\n                                </strong>\\r\\n                            </h4>\\r\\n                            <div class=\\\"ingredient\\\" *ngFor=\\\"let ingredient of recipe.ingredientSection[i].ingredients\\\">\\r\\n                                <div class=\\\"ingredient-quantity\\\">{{ ingredient.quantity }} {{ ingredient.units }}</div>\\r\\n                                <div class=\\\"ingredient-name capitalized\\\">{{ ingredient.name }}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- The steps section -->\\r\\n                    <div class=\\\"section reset-counter\\\">\\r\\n                        <div *ngIf=\\\"i < recipe.stepSection.length\\\">\\r\\n                            <div class=\\\"reset-counter\\\">\\r\\n                                <h4 class=\\\"small-marginbottom\\\" *ngIf=\\\"recipe.stepSection[i].name\\\">\\r\\n                                    <strong>\\r\\n                                        <em>{{recipe.stepSection[i].name}}</em>\\r\\n                                    </strong>\\r\\n                                </h4>\\r\\n                                <div class=\\\"step capitalized\\\" *ngFor=\\\"let step of recipe.stepSection[i].steps\\\">{{ step }}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"bottom-section\\\">\\r\\n                <!-- Materiel -->\\r\\n                <div *ngIf=\\\"recipe.equipment.length > 0\\\" class=\\\"equipment\\\">\\r\\n                    <h4 class=\\\"small-marginbottom\\\">\\r\\n                        <strong>MATÉRIEL NÉCESSAIRE</strong>\\r\\n                    </h4>\\r\\n                    <ul>\\r\\n                        <li *ngFor=\\\"let equipment of recipe.equipment\\\">{{equipment}}</li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"recipe-notes\\\" *ngIf=\\\"recipe.notes.length > 0\\\">\\r\\n                    <p class=\\\"note\\\">\\r\\n                        <i>{{ recipe.notes }}</i>\\r\\n                    </p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"actions\\\">\\r\\n                <button class=\\\"edit-recipe\\\" color=\\\"primary\\\" [routerLink]=\\\"['/recipe/edit/' + recipe._id]\\\" mat-button>\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                    Modifier\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Inject, OnDestroy } from \"@angular/core\";\r\n// Moment\r\nimport * as moment from \"moment\";\r\n// Ngrx Store\r\nimport { Store, ActionsSubject } from \"@ngrx/store\";\r\nimport * as fromStore from \"../../core/store\";\r\n// Rxjs\r\nimport { Subscription, Observable } from \"rxjs\";\r\n\r\nimport { ApiSpecificRecipeService, Recipe } from \"./../../recipes/shared\";\r\n\r\n@Component({\r\n    selector: \"mcb-recipe-viewer\",\r\n    templateUrl: \"./recipe-viewer.component.html\",\r\n    styleUrls: [\"./recipe-viewer.component.css\"]\r\n})\r\nexport class RecipeViewerComponent implements OnInit, OnDestroy {\r\n    private recipe$: Observable<Recipe>;\r\n    recipe: Recipe;\r\n    defaultImage = Recipe.DEFAULT_IMAGE;\r\n    biggestSection = [];\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        private recipeApi: ApiSpecificRecipeService,\r\n        private store: Store<fromStore.DataState>\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        // Getting the recipe to view from the store.\r\n        this.recipe$ = this.store.select(fromStore.getSelectedRecipe);\r\n        this.subscription = this.recipe$.subscribe(recipe => {\r\n            this.recipe = recipe;\r\n\r\n            if (recipe) {\r\n                this.biggestSection = this.getBiggestSection();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // Cleaning up resources.\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    convertToTime(minutes: number): string {\r\n        // If there are minutes to display, display them.\r\n        if (minutes) {\r\n            const duration = moment.duration(minutes, \"minutes\");\r\n            // Formatting the time to display.\r\n            if (duration.asDays() > 1) {\r\n                return `${Math.floor(\r\n                    duration.asDays()\r\n                )}j ${duration.hours()}h${duration.minutes()}`;\r\n            } else if (duration.asHours() > 1) {\r\n                return `${Math.floor(\r\n                    duration.asHours()\r\n                )}h${duration.minutes()}`;\r\n            } else if (duration.asMinutes() > 1) {\r\n                return `${Math.floor(duration.asMinutes())}`;\r\n            }\r\n        }\r\n        // Else, display --.\r\n        return \"--\";\r\n    }\r\n\r\n    private getBiggestSection() {\r\n        if (\r\n            this.recipe.ingredientSection.length >=\r\n            this.recipe.stepSection.length\r\n        ) {\r\n            return this.recipe.ingredientSection;\r\n        } else {\r\n            return this.recipe.stepSection;\r\n        }\r\n    }\r\n}\r\n","module.exports = \".actions {\\r\\n  padding: 0 32px 0 32px;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <label for=\\\"equipment-list\\\"><h3 class=\\\"no-margin-bottom no-bold\\\">Matériel</h3></label>\\r\\n  <mat-list id=\\\"equipment-list\\\">\\r\\n        <equipment-listitem *ngFor=\\\"let equipment of equipments; index as i; trackBy:trackByFn\\\" [(ngModel)]=\\\"equipments[i]\\\" (remove)=\\\"removeItem(i)\\\"></equipment-listitem>\\r\\n  </mat-list>\\r\\n  <div class=\\\"align-end margin-top actions\\\">\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"createItem()\\\" mat-button>Ajouter un équipement</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'equipment-listbox',\r\n  templateUrl: './equipment-listbox.component.html',\r\n  styleUrls: ['./equipment-listbox.component.css'],\r\n    providers: [{\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => EquipmentListBox),\r\n      multi: true\r\n    }]\r\n})\r\nexport class EquipmentListBox implements ControlValueAccessor, OnInit {\r\n  _equipments = [\"\"];\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  set equipments(equipments) {\r\n    this._equipments = equipments;\r\n    this.propagateChange(this.equipments);\r\n  }\r\n\r\n  get equipments() {\r\n    return this._equipments;\r\n  }\r\n\r\n  createItem() {\r\n    this.equipments.push(\"\");\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this._equipments.splice(index, 1);\r\n  }\r\n\r\n  // ----------For the ngModel two way binding -------------------------------//\r\n  writeValue(equipments: string[]) {\r\n    // When ngModel is called only to enable form validation, the value is set to undefined.\r\n    if (equipments === undefined) {\r\n      // If it is the case, do nothing as we don't want to register something.\r\n      return;\r\n    }\r\n    this.equipments = equipments;\r\n  }\r\n\r\n  registerOnChange(fn) {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched() {}\r\n\r\n  // Since the equipment array is a primitive array, if this function is omitted,\r\n  // Angular tracks the array item by its value. This means that whenever the value\r\n  // is changed, the list item will loose focus. Instead of tracking by value,\r\n  // we tell Angular to track the items by their index.\r\n  trackByFn(index: any, item: any) {\r\n     return index;\r\n  }\r\n}\r\n","module.exports = \".display-when-hovered {\\r\\n  visibility: hidden;\\r\\n  position: absolute;\\r\\n  right: 4px;\\r\\n  top: 10px;\\r\\n  z-index: 3;\\r\\n}\\r\\n\\r\\n.equipment:hover .display-when-hovered {\\r\\n  visibility: visible;\\r\\n}\\r\\n\\r\\n.equipment-textfield {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.add-equipment {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-list-item class=\\\"equipment\\\">\\r\\n    <mat-icon mat-list-icon>local_dining</mat-icon>\\r\\n    <div mat-line>\\r\\n      <mat-form-field class=\\\"equipment-textfield\\\">\\r\\n          <input matInput placeholder=\\\"Quel outils avez-vous utilisé?\\\" [(ngModel)]=\\\"item\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <mat-icon class=\\\"clickable display-when-hovered\\\" color=\\\"accent\\\" (click)=\\\"removeItem()\\\">clear</mat-icon>\\r\\n</mat-list-item>\\r\\n\"","import { Component, OnInit, Input, Output, forwardRef, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'equipment-listitem',\r\n  templateUrl: './equipment-listitem.component.html',\r\n  styleUrls: ['./equipment-listitem.component.css'],\r\n  providers: [{\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => EquipmentListItem),\r\n      multi: true\r\n    }]\r\n})\r\nexport class EquipmentListItem implements ControlValueAccessor, OnInit {\r\n  _item = \"\";\r\n  @Output()remove = new EventEmitter<number>();\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  set item(newItem) {\r\n    this._item = newItem;\r\n    this.propagateChange(this._item);\r\n  }\r\n\r\n  get item() {\r\n    return this._item;\r\n  }\r\n\r\n  removeItem() {\r\n    this.remove.emit();\r\n  }\r\n\r\n// ----------For the ngModel two way binding -------------------------------//\r\n  writeValue(item: string) {\r\n    // When ngModel is called only to enable form validation, the value is set to undefined.\r\n    if (item === undefined) {\r\n      // If it is the case, do nothing as we don't want to register something.\r\n      return;\r\n    }\r\n\r\n    this.item = item;\r\n  }\r\n\r\n  registerOnChange(fn) {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched() {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ApiGetRecipesService } from '../../shared/api-get-recipes.service';\r\n\r\n/*\r\n * Gives a list of all the possible genres for a recipe.\r\n */\r\n@Injectable()\r\nexport class GenresService {\r\n  private _genres = new BehaviorSubject<string[]>([]);\r\n\r\n  constructor(private api: ApiGetRecipesService) {\r\n    this.fetchGenres();\r\n  }\r\n\r\n  get genres() {\r\n    return this._genres;\r\n  }\r\n\r\n  private fetchGenres(): void {\r\n    this.api.getGenres().subscribe(\r\n      genres => this._genres.next(genres),\r\n      err => console.log(\"An error occurred while fetching the recipe types.\"));\r\n  }\r\n\r\n  public getGenres() {\r\n    return this._genres.getValue();\r\n  }\r\n}\r\n","module.exports = \".size-2 {\\r\\n  width: 60%;\\r\\n}\\r\\n\\r\\n.size-1 {\\r\\n  width: 20%;\\r\\n}\\r\\n\\r\\n.display-when-hovered {\\r\\n  visibility: hidden;\\r\\n  position: absolute;\\r\\n  right: 4px;\\r\\n  top: 10px;\\r\\n  z-index: 3;\\r\\n}\\r\\n\\r\\n.ingredient:hover .display-when-hovered {\\r\\n  visibility: visible;\\r\\n}\\r\\n\\r\\n.add-ingredient {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-list-item class=\\\"ingredient\\\" *ngFor=\\\"let ingredient of ingredients; index as i\\\">\\r\\n    <mat-icon mat-list-icon>restaurant</mat-icon>\\r\\n    <div mat-line>\\r\\n      <mat-form-field class=\\\"ingredient-field size-2\\\">\\r\\n          <ingredient-autocomplete-input placeholder=\\\"Nom de l'ingrédient\\\" name=\\\"name\\\" [(ngModel)]=\\\"ingredient.name\\\"></ingredient-autocomplete-input>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"ingredient-field size-1\\\">\\r\\n          <input matInput placeholder=\\\"Quantité\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"ingredient.quantity\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"ingredient-field size-1\\\">\\r\\n          <input matInput placeholder=\\\"Unités\\\" name=\\\"units\\\" [(ngModel)]=\\\"ingredient.units\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <mat-icon class=\\\"clickable display-when-hovered\\\" color=\\\"accent\\\" (click)=\\\"removeIngredient(i)\\\" *ngIf=\\\"ingredients.length > 1\\\">\\r\\n      clear\\r\\n    </mat-icon>\\r\\n</mat-list-item>\\r\\n<mat-list-item>\\r\\n  <button type=\\\"button\\\" class=\\\"add-ingredient\\\" color=\\\"accent\\\" (click)=\\\"addIngredient()\\\" mat-button>Ajoutez un ingrédient</button>\\r\\n</mat-list-item>\\r\\n\"","import { Component, OnInit, Input, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Ingredient } from '../shared/ingredient.model';\r\n\r\n@Component({\r\n  selector: 'ingredient-listbox',\r\n  templateUrl: './ingredient-listbox.component.html',\r\n  styleUrls: ['./ingredient-listbox.component.css'],\r\n  providers: [{\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => IngredientListbox),\r\n      multi: true\r\n    }]\r\n})\r\nexport class IngredientListbox implements ControlValueAccessor {\r\n  _ingredients: Ingredient[];\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  set ingredients(newIngredients) {\r\n    this._ingredients = newIngredients;\r\n    this.propagateChange(this._ingredients);\r\n  }\r\n\r\n  get ingredients() {\r\n    return this._ingredients;\r\n  }\r\n\r\n  addIngredient() {\r\n    this._ingredients.push(new Ingredient());\r\n  }\r\n\r\n  removeIngredient(index: number) {\r\n    this._ingredients.splice(index, 1);\r\n  }\r\n\r\n// ----------For the ngModel two way binding -------------------------------//\r\n  writeValue(ingredients: Ingredient[]) {\r\n    // When ngModel is called only to enable form validation, the value is set to undefined.\r\n    if (ingredients === undefined) {\r\n      // If it is the case, do nothing as we don't want to register something.\r\n      return;\r\n    }\r\n\r\n    this.ingredients = ingredients;\r\n  }\r\n\r\n  registerOnChange() {}\r\n\r\n  registerOnTouched() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule,\r\n         MatInputModule,\r\n         MatIconModule,\r\n         MatListModule\r\n       } from '@angular/material';\r\nimport { IngredientListbox } from './ingredient-listbox.component';\r\nimport { AutocompleteInputModule } from '../../../controls/autocomplete-input/autocomplete-input.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IngredientListbox\r\n  ],\r\n  imports: [\r\n             CommonModule,\r\n             MatInputModule,\r\n             MatButtonModule,\r\n             MatIconModule,\r\n             MatListModule,\r\n             FormsModule,\r\n             AutocompleteInputModule\r\n           ],\r\n  providers: [],\r\n  exports: [ IngredientListbox ]\r\n})\r\nexport class IngredientListboxModule { }\r\n","module.exports = \".mat-divider {\\r\\n  margin-top: 1em;\\r\\n  margin-bottom: 2em;\\r\\n  position: relative;\\r\\n}\\r\\n\"","module.exports = \"<custom-listbox [title]=\\\"'Ingrédients'\\\" [addItemText]=\\\"'Ajouter une section'\\\" (createNewItem)=\\\"createNewSection()\\\">\\r\\n  <div *ngFor=\\\"let section of sections; index as i; last as isLast\\\">\\r\\n    <ingredient-section  [(ngModel)]=\\\"sections[i]\\\"></ingredient-section>\\r\\n    <mat-divider *ngIf=\\\"!isLast\\\"></mat-divider>\\r\\n  </div>\\r\\n</custom-listbox>\\r\\n\"","import { Component, OnInit, Input, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { IngredientSection } from '../shared/ingredient-section.model';\r\nimport { CustomListBox } from '../../../controls/custom-listbox/custom-listbox.component';\r\n\r\n@Component({\r\n  selector: 'ingredient-section-wrapper',\r\n  templateUrl: './ingredient-section-wrapper.component.html',\r\n  styleUrls: ['./ingredient-section-wrapper.component.css'],\r\n    providers: [{\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => IngredientSectionWrapper),\r\n      multi: true\r\n    }]\r\n})\r\nexport class IngredientSectionWrapper implements ControlValueAccessor, OnInit {\r\n  _sections: IngredientSection[];\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.sections = [new IngredientSection()];\r\n  }\r\n\r\n  set sections(sections) {\r\n    this._sections = sections;\r\n    this.propagateChange(this.sections);\r\n  }\r\n\r\n  get sections() {\r\n    return this._sections;\r\n  }\r\n\r\n  createNewSection() {\r\n    this.sections.push(new IngredientSection());\r\n  }\r\n\r\n  // ----------For the ngModel two way binding -------------------------------//\r\n  writeValue(sections: IngredientSection[]) {\r\n    // When ngModel is called only to enable form validation, the value is set to undefined.\r\n    if (sections === undefined) {\r\n      // If it is the case, do nothing as we don't want to register something.\r\n      return;\r\n    }\r\n\r\n    this.sections = sections;\r\n  }\r\n\r\n  registerOnChange(fn) {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched() {}\r\n}\r\n","module.exports = \".section-title {\\r\\n  height: 1em;\\r\\n  border: none;\\r\\n  margin-bottom: 10px;\\r\\n  font-size: large;\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\n.section-title:focus {\\r\\n  color: black;\\r\\n}\\r\\n\"","module.exports = \"<input class=\\\"section-title\\\" [(ngModel)]=\\\"section.name\\\" placeholder=\\\"Nom de la section\\\" matTooltip=\\\"Changez le nom de cette section!\\\" matSubheader>\\r\\n<ingredient-listbox [(ngModel)]=\\\"section.ingredients\\\"></ingredient-listbox>\\r\\n\"","import { Component, OnInit, Input, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { IngredientSection } from '../shared/ingredient-section.model';\r\n\r\n@Component({\r\n    selector: 'ingredient-section',\r\n    templateUrl: './ingredient-section.component.html',\r\n    styleUrls: ['./ingredient-section.component.css'],\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => IngredientSectionComponent),\r\n        multi: true\r\n    }]\r\n})\r\nexport class IngredientSectionComponent implements ControlValueAccessor, OnInit {\r\n    _section: IngredientSection;\r\n    propagateChange = (_: any) => { };\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        this.section = new IngredientSection();\r\n    }\r\n\r\n    set section(newSection) {\r\n        this._section = newSection;\r\n        this.propagateChange(this.section);\r\n    }\r\n\r\n    get section() {\r\n        return this._section;\r\n    }\r\n\r\n    // ----------For the ngModel two way binding -------------------------------//\r\n    writeValue(section: IngredientSection) {\r\n        // When ngModel is called only to enable form validation, the value is set to undefined.\r\n        if (section === undefined || section === null) {\r\n            // If it is the case, do nothing as we don't want to register something.\r\n            return;\r\n        }\r\n\r\n        this.section = section;\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched() { }\r\n}\r\n","import { Ingredient } from \"./ingredient.model\";\r\n\r\nexport class IngredientSection {\r\n    name: string;\r\n    ingredients: Ingredient[];\r\n\r\n    constructor(section?: IngredientSection) {\r\n        // Default constructor\r\n        if (section == null) {\r\n            this.name = \"\";\r\n            this.ingredients = [new Ingredient()];\r\n        }\r\n        // Copy constructor.\r\n        else {\r\n            this.name = section.name;\r\n            this.ingredients = section.ingredients;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Represents an ingredient in a recipe.\r\n */\r\nexport class Ingredient {\r\n  name: string;\r\n  quantity: string;\r\n  units: string;\r\n\r\n  constructor(ingredient ?: Ingredient) {\r\n    // Default constructor\r\n    if(ingredient == null) {\r\n      this.name = \"\";\r\n      this.quantity = \"\";\r\n      this.units = \"\";\r\n    }\r\n    // Copy constructor.\r\n    else {\r\n      this.name = ingredient.name;\r\n      this.quantity = ingredient.quantity;\r\n      this.units = ingredient.units;\r\n    }\r\n  }\r\n}\r\n","module.exports = \".mainContainer {\\r\\n  min-height: 80vh;\\r\\n  margin: 10px 10px 2px 10px;\\r\\n}\\r\\n\\r\\n.recipe-list {\\r\\n  width: 100%;\\r\\n  height: 80vh;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.table-header {\\r\\n  padding-bottom: 10px;\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-column-name {\\r\\n    min-width: 150px;\\r\\n}\\r\\n\\r\\n.edit-button {\\r\\n  min-width: 2.5em;\\r\\n  width: 2.5em;\\r\\n  padding: 0px;\\r\\n}\\r\\n\\r\\n.mat-column-actions {\\r\\n    max-width: 20px;\\r\\n}\\r\\n\\r\\n/*\\r\\n\\r\\n.searchBar-Input {\\r\\n  min-width: 100px !important;\\r\\n  width: 50% !important;\\r\\n  -webkit-transition: width 0.4s ease-in-out;\\r\\n  transition: width 0.4s ease-in-out;\\r\\n  float: right !important;\\r\\n}\\r\\n\\r\\n.searchBar-Input:focus {\\r\\n  width: 100% !important;\\r\\n}\\r\\n\\r\\n.recipeListContent {\\r\\n  height: 90vh;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.recipesListItem {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.recipesList-TopSection .createRecipe {\\r\\n  display:inline-block;\\r\\n}\\r\\n\\r\\n.recipesList-TopSection .searchBar {\\r\\n  min-width: 100px;\\r\\n  width:50%;\\r\\n  float:right;\\r\\n}\\r\\n*/\\r\\n\"","module.exports = \"<mat-card class=\\\"mainContainer\\\">\\r\\n  <mat-card-header>\\r\\n    <div class=\\\"table-header\\\">\\r\\n      <button class=\\\"button\\\" color=\\\"accent\\\" [routerLink]=\\\"['/recipe/create']\\\" mat-button>Créer une recette</button>\\r\\n      <button class=\\\"button\\\" color=\\\"accent\\\" (click)=\\\"advancedSearch()\\\" mat-button><mat-icon>search</mat-icon>Recherche avancée</button>\\r\\n    </div>\\r\\n  </mat-card-header>\\r\\n\\r\\n    <mat-table class=\\\"recipe-list\\\" [dataSource]=\\\"dataSource\\\" (scroll)=\\\"onScrollDown($event)\\\" #table>\\r\\n      <!--- Note that these columns can be defined in any order.\\r\\n            The actual rendered columns are set as a property on the row definition -->\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container cdkColumnDef=\\\"name\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef> Nom </mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let recipe\\\"> {{recipe.name}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Genre Column -->\\r\\n      <ng-container cdkColumnDef=\\\"genre\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef> Genre </mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let recipe\\\"> {{recipe.genre}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Rating Column -->\\r\\n      <ng-container cdkColumnDef=\\\"rating\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef> Note </mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let recipe\\\"><star-rating [readonly]=\\\"true\\\" [(ngModel)]=\\\"recipe.rating\\\"></star-rating></mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container cdkColumnDef=\\\"actions\\\">\\r\\n        <mat-header-cell *cdkHeaderCellDef></mat-header-cell>\\r\\n        <mat-cell *cdkCellDef=\\\"let recipe\\\">\\r\\n          <button color=\\\"primary\\\" [routerLink]=\\\"['/recipe/edit/' + recipe._id]\\\" class=\\\"edit-button\\\" mat-icon-button>\\r\\n            <mat-icon aria-label=\\\"Edit or delete this recipe\\\">create</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *cdkHeaderRowDef=\\\"displayedColumns; sticky: true\\\" ></mat-header-row>\\r\\n      <mat-row class=\\\"clickable\\\" *cdkRowDef=\\\"let recipe; columns: displayedColumns;\\\" (click)=\\\"viewRecipe(recipe._id)\\\"></mat-row>\\r\\n    </mat-table>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport {\r\n    MatDialog,\r\n    MatSnackBar,\r\n    MatSnackBarConfig,\r\n    MatSnackBarRef,\r\n    SimpleSnackBar\r\n} from \"@angular/material\";\r\nimport { Router } from \"@angular/router\";\r\n// moment\r\nimport * as moment from \"moment\";\r\n// Ngrx Store\r\nimport { Store, ActionsSubject } from \"@ngrx/store\";\r\nimport * as fromStore from \"../../core/store\";\r\n// Rxjs\r\nimport { Subscription } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\n// Components\r\nimport { AdvancedRecipeSearchComponent } from \"../../search/advanced-recipe-search/advanced-recipe-search.component\";\r\n// Rxjs\r\nimport { Observable } from \"rxjs/Observable\";\r\n// Models\r\nimport { Recipe } from \"./../shared/recipe.model\";\r\n// Services\r\nimport { LoggerService } from \"../../core/logger/logger.service\";\r\n// Others\r\nimport { InfiniteScroll } from \"./../shared/infinite-scroll.class\";\r\nimport { RecipeListDataSource } from \"./recipe-list.datasource\";\r\n\r\n@Component({\r\n    selector: \"mcb-recipe-list\",\r\n    templateUrl: \"recipe-list.component.html\",\r\n    styleUrls: [\"recipe-list.component.css\"]\r\n})\r\nexport class RecipeListComponent extends InfiniteScroll\r\n    implements OnInit, OnDestroy {\r\n    /**\r\n     * the number is the scroll distance for which the loadMore function will\r\n     * be called, in pixels.\r\n     */\r\n    static readonly LOADING_DISTANCE = 20;\r\n    displayedColumns = [\"name\", \"genre\", \"rating\", \"actions\"];\r\n    dataSource: RecipeListDataSource;\r\n    private allDataIsLoaded = false;\r\n    private hasShownAllDataIsLoaded = false;\r\n    private canLoadMoreData$: Observable<boolean>;\r\n    private subcriptions: Subscription[] = [];\r\n    private searchSnackBarRef: MatSnackBarRef<SimpleSnackBar>;\r\n\r\n    constructor(\r\n        private actions$: ActionsSubject,\r\n        private loggerService: LoggerService,\r\n        private dialog: MatDialog,\r\n        private router: Router,\r\n        private snackbar: MatSnackBar,\r\n        private store: Store<fromStore.DataState>\r\n    ) {\r\n        super(RecipeListComponent.LOADING_DISTANCE);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.listenToStoreState();\r\n        this.dataSource = new RecipeListDataSource(this.store);\r\n\r\n        // When moving from one page to another using the Angular Router, the\r\n        // recipeService is not reinitialized since it was injected to this class.\r\n        // We don't want to load more recipe when we navigate from one page to another\r\n        // but we want our table to display the proper recipes.\r\n        if (!this.allDataIsLoaded) {\r\n            this.loadMore();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        for (const sub of this.subcriptions) {\r\n            sub.unsubscribe();\r\n        }\r\n\r\n        // Hide advanced search snack bar if we are leaving the page.\r\n        if (this.searchSnackBarRef) {\r\n            this.searchSnackBarRef.instance.action(); // Cancels the search.\r\n        }\r\n    }\r\n\r\n    viewRecipe(recipeId: string): void {\r\n        this.router.navigateByUrl(\"/recipes/\" + recipeId);\r\n    }\r\n\r\n    editRecipe(recipeId: string, clickEvent: Event): void {\r\n        clickEvent.stopPropagation(); // This is needed due to a bug introduced in first stable version of Angular Material. (5.0.0-rc0)\r\n    }\r\n\r\n    advancedSearch(): void {\r\n        this.dialog\r\n            .open(AdvancedRecipeSearchComponent)\r\n            .afterClosed()\r\n            .subscribe(response => {\r\n                // Ignoring when the user cancels the advanced search.\r\n                if (response) {\r\n                    this.store.dispatch(new fromStore.SearchRecipes(response));\r\n                    this.displaySearchCancelOption();\r\n                }\r\n            });\r\n    }\r\n\r\n    displaySearchCancelOption(): void {\r\n        const config = new MatSnackBarConfig();\r\n        config.horizontalPosition = \"right\";\r\n        config.panelClass = \"no-margin-bottom\";\r\n\r\n        this.searchSnackBarRef = this.loggerService.persistentAction(\r\n            \"Une recherche est active.\"\r\n        );\r\n\r\n        this.searchSnackBarRef.onAction().subscribe(() => {\r\n            this.store.dispatch(new fromStore.CancelSearchRecipes());\r\n            this.searchSnackBarRef = null;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Loads more recipe into the list.\r\n     */\r\n    loadMore(): Promise<any> {\r\n        // If we can still load more resources\r\n        if (!this.allDataIsLoaded) {\r\n            this.store.dispatch(new fromStore.LoadRecipes());\r\n            return this.canLoadMoreData$.pipe(take(1)).toPromise();\r\n        } else if (!this.hasShownAllDataIsLoaded) {\r\n            this.allDataIsLoaded = true;\r\n            this.hasShownAllDataIsLoaded = true;\r\n            this.showAllDataIsLoadedMessage();\r\n        }\r\n\r\n        // Else,\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private listenToStoreState(): void {\r\n        this.canLoadMoreData$ = this.store.select(\r\n            fromStore.getCanLoadMoreRecipes\r\n        );\r\n\r\n        this.subcriptions.push(\r\n            this.canLoadMoreData$.subscribe(\r\n                canLoadMore => (this.allDataIsLoaded = !canLoadMore)\r\n            )\r\n        );\r\n    }\r\n\r\n    private showAllDataIsLoadedMessage() {\r\n        // There are no actions for this snackbar since it displays only an\r\n        // information message. It is frustrating to the user if he tries to close\r\n        // this snackbar but the snackbar closes automatically beforehand.\r\n        this.loggerService.info(\"Toutes les recettes ont été chargées.\", \"\");\r\n    }\r\n}\r\n","import { DataSource } from \"@angular/cdk/collections\";\r\n// Rxjs\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport {\r\n    map,\r\n    count,\r\n    withLatestFrom,\r\n    filter\r\n} from \"rxjs/operators\";\r\n// Ngrx Store\r\nimport { Store } from \"@ngrx/store\";\r\nimport * as fromStore from \"../../core/store\";\r\n// Models\r\nimport { Recipe } from \"./../shared/recipe.model\";\r\n// Services\r\nimport { SearchIntent, SearchIntentMatcher } from \"../../search/advanced-recipe-search/shared\";\r\nimport { combineLatest } from \"rxjs\";\r\n\r\nexport class RecipeListDataSource extends DataSource<any> {\r\n    private recipes$: Observable<Recipe[]>;\r\n\r\n    constructor(private store: Store<fromStore.DataState>) {\r\n        super();\r\n    }\r\n\r\n    /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n    connect(): Observable<Recipe[]> {\r\n        this.recipes$ = combineLatest(\r\n            this.store.select(fromStore.getAllRecipes),\r\n            this.store.select(fromStore.getSearchIntent))\r\n            .pipe(\r\n                map(([recipes, searchIntent]) => {\r\n                    // If no search intent is applied, return all recipes.\r\n                    if (!searchIntent) {\r\n                        return recipes;\r\n                    }\r\n                    // Else, retrieve the recipes that are matching the search intent.\r\n                    else {\r\n                        return recipes.filter(recipe =>\r\n                            SearchIntentMatcher.isRecipeMatchingIntent(\r\n                                recipe,\r\n                                searchIntent\r\n                            )\r\n                        );\r\n                    }\r\n                }));\r\n\r\n        return this.recipes$.pipe(\r\n            map((data) => this.sortData(data))\r\n        );\r\n    }\r\n\r\n    disconnect() {\r\n        // Not completing the recipes$ stream since it will kill our store.\r\n    }\r\n\r\n    private sortData(data: Recipe[]): Recipe[] {\r\n        return data.sort((a, b) => {\r\n            return this.compareRecipeNames(a, b);\r\n        });\r\n    }\r\n\r\n    private compareRecipeNames(a: Recipe, b: Recipe): number {\r\n        return a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Recipe } from './recipe.model';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { environment } from './../../../environments/environment';\r\nimport { LoggerService } from '../../core/logger/logger.service';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { SearchIntent } from '../../search/advanced-recipe-search/shared';\r\n\r\n@Injectable()\r\nexport class ApiGetRecipesService {\r\n\r\n    constructor(private http: HttpClient,\r\n        private logger: LoggerService,\r\n        private localStorageService: LocalStorageService) { }\r\n\r\n    getRecipes(from: number, to: number): Observable<Recipe[]> {\r\n        const url = `${environment.apiUrl}/recipes?filter=&from=${from}&to=${to}`;\r\n\r\n        return this.http.get<Recipe[]>(url);\r\n    }\r\n\r\n    advancedSearch(searchIntent: SearchIntent) {\r\n        // Parameter validation\r\n        if (searchIntent == null) {\r\n            console.error(\"Invalid parameter 'searchIntention' in app.recipes.shared.advancedSearch: \" + searchIntent);\r\n            return;\r\n        }\r\n\r\n        const url = `${environment.apiUrl}/recipes/advanced`;\r\n\r\n        // Fetching the API.\r\n        return this.http.post<Recipe[]>(url, searchIntent);\r\n\r\n    }\r\n\r\n    getMatchingIngredientNames(ingredientName: string): Observable<string[]> {\r\n        ingredientName = ingredientName || \"\";\r\n\r\n        const url = `${environment.apiUrl}/recipes/ingredients`;\r\n\r\n        return this.http.get(url, { params: { filter: ingredientName } }).pipe(\r\n            map((ingredients: Array<any>) => ingredients.map((ingredient: any) => ingredient.name))\r\n        );\r\n    }\r\n\r\n    getMatchingRecipeNames(recipeName: string): Observable<string[]> {\r\n        recipeName = recipeName || \"\";\r\n\r\n        const url = `${environment.apiUrl}/recipes/names`;\r\n\r\n        return this.http.get(url, { params: { filter: recipeName } }).pipe(\r\n            map((recipes: Array<any>) => {\r\n                return recipes.map((recipe: any) => recipe.name);\r\n            })\r\n        );\r\n    }\r\n\r\n    getGenres() {\r\n        const url = `${environment.apiUrl}/recipes/genres`;\r\n\r\n        return this.http.get<string[]>(url);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Recipe } from './recipe.model';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LocalStorageService } from 'angular-2-local-storage';\r\nimport { environment } from './../../../environments/environment';\r\nimport { LoggerService } from '../../core/logger/logger.service';\r\nimport { ImageLoaderService } from '../../core/images/image-loader.service';\r\nimport { Image } from '../../core/images/image.model';\r\nimport { ObjectID } from 'bson/browser_build/bson.js';\r\nimport { map } from 'rxjs/operators';\r\n\r\n// Interacts with the API when it comes to single recipe request.\r\n@Injectable()\r\nexport class ApiSpecificRecipeService {\r\n    // There is no function to retrieve the images since having images saved in\r\n    // javascript slows down the browser. Images are directly served in the <img> tag.\r\n    //\r\n    // To get an image, you must GET, then specify the image name after this url.\r\n    // To store an image, you must POST, then specify the name of the image and\r\n    //                    the data in the body of the request.\r\n    imagesUrl = `${environment.apiUrl}/recipes/image`;\r\n\r\n    constructor(private http: HttpClient,\r\n        private logger: LoggerService,\r\n        private imageLoader: ImageLoaderService,\r\n        private localStorageService: LocalStorageService) { }\r\n\r\n    getRecipe(recipeId: string): Observable<Recipe> {\r\n        // Parameter validation\r\n        if (!recipeId) {\r\n            console.error(`Invalid parameter 'recipeId' in app/recipes/shared/getRecipe: ${recipeId}`);\r\n            return;\r\n        }\r\n\r\n        const url = `${environment.apiUrl}/recipes/${recipeId}`;\r\n        // Calling the API.\r\n        return this.http.get<Recipe>(url);\r\n    }\r\n\r\n    getImage(imageURL: string): Promise<Image> {\r\n        // Parameter validation\r\n        if (!imageURL) {\r\n            console.error(`Invalid parameter 'recipeId' in app/recipes/shared/getImage: ${imageURL}`);\r\n            return;\r\n        }\r\n\r\n        const url = `${this.imagesUrl}/${imageURL}`;\r\n        // Calling the API.\r\n        return this.imageLoader.getImage(url);\r\n    }\r\n\r\n    addRecipe(newRecipe: Recipe): Observable<any> {\r\n        // Parameter validation\r\n        if (!newRecipe) {\r\n            this.logger.error(`Il est impossible de créer une recette qui ne contient aucune information.`, `Ok`);\r\n            console.error(`Invalid parameter 'newRecipe' in app/recipes/shared/addRecipe: ${newRecipe}`);\r\n            return;\r\n        }\r\n\r\n        newRecipe._id = (new ObjectID()).toString();\r\n\r\n        const url = `${environment.apiUrl}/recipe`;\r\n        // Calling the API.\r\n        return this.http.post(url, newRecipe);\r\n    }\r\n\r\n    updateRecipe(idOfRecipeToUpdate: string, newRecipe: Recipe) {\r\n        // Parameter validation\r\n        if (!newRecipe) {\r\n            this.logger.error(`Il est impossible de modifier une recette avec une recette qui ne contient aucune information.`, `Ok`);\r\n            console.error(`Invalid parameter 'newRecipe' in app/recipes/shared/updateRecipe: ${newRecipe}`);\r\n            return;\r\n        }\r\n\r\n        const url = `${environment.apiUrl}/recipes/${idOfRecipeToUpdate}`;\r\n        // Calling the API.\r\n        return this.http.post(url, newRecipe);\r\n    }\r\n\r\n    deleteRecipe(id: string) {\r\n        // Parameter validation\r\n        if (!id) {\r\n            this.logger.error(`Identifiant de recette invalide. La suppression est annulée.`, `Ok`);\r\n            console.error(`Invalid parameter 'id' in app/recipes/shared/deleteRecipe: ${id}`);\r\n            return;\r\n        }\r\n\r\n        const userAuthId = this.getUserId();\r\n\r\n        const url = `${environment.apiUrl}/recipes/${id}`;\r\n        // Calling the API.\r\n        return this.http.delete(url);\r\n    }\r\n\r\n    private getUserId(): string {\r\n        // Retrieving the user id to get his own recipes.\r\n        const user: any = this.localStorageService.get(\"user\");\r\n\r\n        return user ? user.authId : undefined;\r\n    }\r\n}\r\n","export * from './api-get-recipes.service';\r\nexport * from './api-specific-recipe.service';\r\nexport * from './infinite-scroll.class';\r\nexport * from './recipe.model';\r\n","// Children classes must implement the 'loadMore' function.\r\n//\r\n// How to use?: Call onScrollDown function of children class on the (scroll) event.\r\n//              The 'loadMore' function will be called\r\nexport abstract class InfiniteScroll {\r\n    private isLoading = false;\r\n\r\n    // triggerDistance: The buffer (in pixels) in which the 'loadMore' function will be called.\r\n    constructor(private triggerDistance: number = 0) { }\r\n\r\n    onScrollDown(event) {\r\n        if (!this.isLoading) {\r\n            // And is at the bottom of its container.\r\n            if (event.target.scrollHeight - event.target.scrollTop - event.target.clientHeight <= this.triggerDistance) {\r\n                this.isLoading = true;\r\n                this.loadMore().then(() => this.isLoading = false);\r\n            }\r\n        }\r\n    }\r\n\r\n    loadMore(): Promise<any> {\r\n        throw new TypeError(\"Abstract function 'loadMore' of parent class 'InfiniteScroll' must be implemented in children class.\");\r\n    }\r\n}\r\n","import { IngredientSection } from './../ingredients/shared/ingredient-section.model';\r\nimport { StepSection } from './../steps/shared/step-section.model';\r\n\r\n/*\r\n * Represents a Recipe document from the database.\r\n */\r\nexport class Recipe {\r\n    static DEFAULT_IMAGE = '../../../assets/food-plate.png';\r\n    _id?: string;\r\n    name: string;\r\n    ingredientSection: IngredientSection[];\r\n    stepSection: StepSection[];\r\n    rating: number;\r\n    prepTime: number; // In minutes\r\n    cookTime: number; // In minutes\r\n    cooldownTime: number; // In minutes\r\n    results: string;\r\n    notes: string;\r\n    genre: string;\r\n    image: string;\r\n    equipment: string[];\r\n    fullImage?: string; // Contains the base64 encoded image.\r\n    owner: string;\r\n    tags: string[];\r\n\r\n\r\n    // I'm using parameter overload since TypeScript doesn't support having more\r\n    // than one constructor implementation.\r\n    constructor(recipe?: Recipe) {\r\n        // Default constructor\r\n        if (recipe == null) {\r\n            // _id is undefined.\r\n            this.name = \"\";\r\n            this.ingredientSection = [new IngredientSection()];\r\n            this.stepSection = [new StepSection()];\r\n            this.rating = 0;\r\n            this.prepTime = null;\r\n            this.cookTime = null;\r\n            this.cooldownTime = null;\r\n            this.results = \"\";\r\n            this.notes = \"\";\r\n            this.genre = \"\";\r\n            this.image = \"\";\r\n            this.equipment = [];\r\n            this.fullImage = Recipe.DEFAULT_IMAGE;\r\n            this.owner = null;\r\n            this.tags = [];\r\n        }\r\n        // Copy constructor.\r\n        else {\r\n            this._id = recipe._id;\r\n            this.name = recipe.name;\r\n            this.ingredientSection = recipe.ingredientSection;\r\n            this.stepSection = recipe.stepSection;\r\n            this.rating = recipe.rating;\r\n            this.prepTime = recipe.prepTime;\r\n            this.cookTime = recipe.cookTime;\r\n            this.cooldownTime = recipe.cooldownTime;\r\n            this.results = recipe.results;\r\n            this.notes = recipe.notes;\r\n            this.genre = recipe.genre;\r\n            this.image = recipe.image;\r\n            this.equipment = recipe.equipment;\r\n            this.fullImage = recipe.fullImage;\r\n            this.owner = recipe.owner;\r\n            this.tags = recipe.tags;\r\n        }\r\n    }\r\n}\r\n","export class StepSection {\r\n  name: string;\r\n  steps: string[];\r\n\r\n  constructor(section?: StepSection) {\r\n    // Default constructor\r\n    if(section == null) {\r\n      this.name = \"\";\r\n      this.steps = [\"\"];\r\n    }\r\n    // Copy constructor.\r\n    else {\r\n      this.name = section.name;\r\n      this.steps = section.steps;\r\n    }\r\n  }\r\n}\r\n","module.exports = \".size-2 {\\r\\n  width: 60%;\\r\\n}\\r\\n\\r\\n.size-1 {\\r\\n  width: 20%;\\r\\n}\\r\\n\\r\\n.display-when-hovered {\\r\\n  visibility: hidden;\\r\\n  position: absolute;\\r\\n  right: 4px;\\r\\n  top: 10px;\\r\\n  z-index: 3;\\r\\n}\\r\\n\\r\\n.step:hover .display-when-hovered {\\r\\n  visibility: visible;\\r\\n}\\r\\n\\r\\n.step-instruction {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.add-step {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\"","module.exports = \"<mat-list-item class=\\\"step\\\" *ngFor=\\\"let step of steps; index as i; trackBy:trackByFn\\\">\\r\\n    <mat-icon mat-list-icon>assignment</mat-icon>\\r\\n    <div mat-line>\\r\\n      <mat-form-field class=\\\"step-instruction\\\">\\r\\n          <input matInput placeholder=\\\"Quoi faire à cette étape de la recette?\\\" [(ngModel)]=\\\"steps[i]\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <mat-icon class=\\\"clickable display-when-hovered\\\" color=\\\"accent\\\" (click)=\\\"removeStep(i)\\\" *ngIf=\\\"steps.length > 1\\\">clear</mat-icon>\\r\\n</mat-list-item>\\r\\n<mat-list-item>\\r\\n  <button type=\\\"button\\\" class=\\\"add-step\\\" color=\\\"accent\\\" (click)=\\\"addStep()\\\" mat-button>Ajoutez une étape</button>\\r\\n</mat-list-item>\\r\\n\"","import { Component, OnInit, Input, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'step-listbox',\r\n  templateUrl: './step-listbox.component.html',\r\n  styleUrls: ['./step-listbox.component.css'],\r\n  providers: [{\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => StepListbox),\r\n      multi: true\r\n    }]\r\n})\r\nexport class StepListbox implements ControlValueAccessor {\r\n  _steps: string[] = [];\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  set steps(newSteps) {\r\n    this._steps = newSteps;\r\n    this.propagateChange(this.steps);\r\n  }\r\n\r\n  get steps() {\r\n    return this._steps;\r\n  }\r\n\r\n  addStep() {\r\n    this._steps.push(\"\");\r\n  }\r\n\r\n  removeStep(index: number) {\r\n    this._steps.splice(index, 1);\r\n  }\r\n\r\n// ----------For the ngModel two way binding -------------------------------//\r\n  writeValue(steps: string[]) {\r\n    // When ngModel is called only to enable form validation, the value is set to undefined.\r\n    if (steps === undefined) {\r\n      // If it is the case, do nothing as we don't want to register something.\r\n      return;\r\n    }\r\n\r\n    this.steps = steps;\r\n  }\r\n\r\n  registerOnChange() {}\r\n\r\n  registerOnTouched() {}\r\n\r\n  // Since the steps array is a primitive array, if this function is omitted,\r\n  // Angular tracks the array item by its value. This means that whenever the value\r\n  // is changed, the list item will loose focus. Instead of tracking by value,\r\n  // we tell Angular to track the items by their index.\r\n  trackByFn(index: any, item: any) {\r\n     return index;\r\n  }\r\n}\r\n","module.exports = \".mat-divider {\\r\\n  margin-top: 1em;\\r\\n  margin-bottom: 2em;\\r\\n  position: relative;\\r\\n}\\r\\n\"","module.exports = \"<custom-listbox [title]=\\\"'Étapes'\\\" [addItemText]=\\\"'Ajouter une section'\\\" (createNewItem)=\\\"createNewSection()\\\">\\r\\n  <div *ngFor=\\\"let section of sections; index as i; last as isLast\\\">\\r\\n    <step-section  [(ngModel)]=\\\"sections[i]\\\"></step-section>\\r\\n    <mat-divider *ngIf=\\\"!isLast\\\"></mat-divider>\\r\\n  </div>\\r\\n</custom-listbox>\\r\\n\"","import { Component, OnInit, Input, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { StepSection } from '../shared/step-section.model';\r\nimport { CustomListBox } from '../../../controls/custom-listbox/custom-listbox.component';\r\n\r\n@Component({\r\n    selector: 'step-section-wrapper',\r\n    templateUrl: './step-section-wrapper.component.html',\r\n    styleUrls: ['./step-section-wrapper.component.css'],\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => StepSectionWrapper),\r\n        multi: true\r\n    }]\r\n})\r\nexport class StepSectionWrapper implements ControlValueAccessor, OnInit {\r\n    _sections: StepSection[];\r\n    propagateChange = (_: any) => { };\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        this.sections = [new StepSection()];\r\n    }\r\n\r\n    set sections(sections) {\r\n        this._sections = sections;\r\n        this.propagateChange(this.sections);\r\n    }\r\n\r\n    get sections() {\r\n        return this._sections;\r\n    }\r\n\r\n    createNewSection() {\r\n        this.sections.push(new StepSection());\r\n    }\r\n\r\n    // ----------For the ngModel two way binding -------------------------------//\r\n    writeValue(sections: StepSection[]) {\r\n        // When ngModel is called only to enable form validation, the value is set to undefined.\r\n        if (sections === undefined) {\r\n            // If it is the case, do nothing as we don't want to register something.\r\n            return;\r\n        }\r\n        this.sections = sections;\r\n    }\r\n\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched() { }\r\n}\r\n","module.exports = \".section-title {\\r\\n  height: 1em;\\r\\n  border: none;\\r\\n  margin-bottom: 10px;\\r\\n  font-size: large;\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\n.section-title:focus {\\r\\n  color: black;\\r\\n}\\r\\n\"","module.exports = \"<input class=\\\"section-title\\\" [(ngModel)]=\\\"section.name\\\" placeholder=\\\"Nom de la section\\\" matTooltip=\\\"Changez le nom de cette section!\\\" mat-subheader>\\r\\n<step-listbox [(ngModel)]=\\\"section.steps\\\"></step-listbox>\\r\\n\"","import { Component, OnInit, Input, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { StepSection } from '../shared/step-section.model';\r\n\r\n@Component({\r\n  selector: 'step-section',\r\n  templateUrl: './step-section.component.html',\r\n  styleUrls: ['./step-section.component.css'],\r\n    providers: [{\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => StepSectionComponent),\r\n      multi: true\r\n    }]\r\n})\r\nexport class StepSectionComponent implements ControlValueAccessor {\r\n  _section: StepSection;\r\n  propagateChange = (_: any) => {};\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.section = new StepSection();\r\n  }\r\n\r\n  set section(newSection) {\r\n    this._section = newSection;\r\n    this.propagateChange(this.section);\r\n  }\r\n\r\n  get section() {\r\n    return this._section;\r\n  }\r\n\r\n// ----------For the ngModel two way binding -------------------------------//\r\n  writeValue(section: StepSection) {\r\n    // When ngModel is called only to enable form validation, the value is set to undefined.\r\n    if (section === undefined || section === null) {\r\n      // If it is the case, do nothing as we don't want to register something.\r\n      return;\r\n    }\r\n\r\n    this.section = section;\r\n  }\r\n\r\n  registerOnChange(fn) {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched() {}\r\n}\r\n","export * from './routing.animation';\r\n","import {\r\n    trigger,\r\n    animate,\r\n    transition,\r\n    style,\r\n    query\r\n  } from '@angular/animations';\r\n\r\n  export const fadeAnimation = trigger('fadeAnimation', [\r\n    // The '* => *' will trigger the animation to change between any two states\r\n    transition('* => *', [\r\n      // The query function has three params.\r\n      // First is the event, so this will apply on entering or when the element is added to the DOM.\r\n      // Second is a list of styles or animations to apply.\r\n      // Third we add a config object with optional set to true, this is to signal\r\n      // angular that the animation may not apply as it may or may not be in the DOM.\r\n      query(\r\n        ':enter',\r\n        [style({ opacity: 0 })],\r\n        { optional: true }\r\n      ),\r\n      query(\r\n        ':leave',\r\n        // here we apply a style and use the animate function to apply the style over 0.3 seconds\r\n        [style({ opacity: 1 }), animate('0.3s', style({ opacity: 0 }))],\r\n        { optional: true }\r\n      ),\r\n      query(\r\n        ':enter',\r\n        [style({ opacity: 0 }), animate('0.3s', style({ opacity: 1 }))],\r\n        { optional: true }\r\n      )\r\n    ])\r\n  ]);\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, Resolve, RouterStateSnapshot } from '@angular/router';\r\n// Rxjs\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, take, withLatestFrom, first } from 'rxjs/operators';\r\nimport { merge } from 'rxjs/observable/merge';\r\n// Services\r\n// Ngrx Store\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromStore from '../core/store';\r\nimport { Recipe } from '../recipes/shared/recipe.model';\r\n\r\n@Injectable()\r\nexport class LoadRecipeResolverService implements Resolve<Recipe> {\r\n    constructor(\r\n        private router: Router,\r\n        private store: Store<fromStore.DataState>) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Recipe> {\r\n        const id = route.paramMap.get('id');\r\n\r\n        this.loadRecipeIfNotItStore(id);\r\n\r\n        // Get the recipe if it is in the store. Else, it waits for it to be in the store.\r\n        const recipe$ = this.waitForRecipeToBeInStore(id);\r\n        const errorOnLoading$ = this.waitForErrors();\r\n\r\n        // If the recipe observable resolves first, it means that there was no error. Otherwise, a null recipe will be returned.\r\n        return merge(recipe$, errorOnLoading$).pipe(first());\r\n    }\r\n\r\n    private loadRecipeIfNotItStore(id: string): void {\r\n        const loadRecipe$ = this.store.select(fromStore.getRecipesEntities).pipe(\r\n            take(1)\r\n        ).subscribe(entities => {\r\n            // If the recipe is already loaded, return it.\r\n            if (!entities[id]) {\r\n                this.store.dispatch(new fromStore.LoadRecipe(id));\r\n            }\r\n\r\n            return entities;\r\n        });\r\n    }\r\n\r\n    private waitForRecipeToBeInStore(id: string): Observable<Recipe> {\r\n        return this.store.select(fromStore.getRecipesEntities).pipe(\r\n            filter(entities => !!entities[id]),\r\n            take(1),\r\n            map(entities => {\r\n                // If the recipe is already loaded, return it.\r\n                return entities[id];\r\n            })\r\n        );\r\n    }\r\n\r\n    private waitForErrors(): Observable<null> {\r\n        return this.store.select(fromStore.getRecipesLoaded).pipe(\r\n            withLatestFrom(this.store.select(fromStore.getRecipesLoading)),\r\n            take(1),\r\n            map(([isLoading, hasLoadedRecipe]) => {\r\n                if (!isLoading && !hasLoadedRecipe) {\r\n                    this.router.navigateByUrl(\"recipes\");\r\n                    return null;\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class NotFoundInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        return next.handle(request).pipe(\r\n            tap(() => { }, (err: any) => {\r\n                // Handling 401 unauthorized errors.\r\n                if (err instanceof HttpErrorResponse) {\r\n                    if (err.status === 404) {\r\n                        this.router.navigateByUrl('/notfound');\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n","export * from './reducers';\r\n","import {\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n    Params\r\n} from \"@angular/router\";\r\nimport { ActionReducerMap, createFeatureSelector } from \"@ngrx/store\";\r\nimport * as fromRouter from \"@ngrx/router-store\";\r\n\r\nexport interface RouterStateUrl {\r\n    url: string;\r\n    queryParams: Params;\r\n    params: Params;\r\n}\r\n\r\nexport interface State {\r\n    routerReducer: fromRouter.RouterReducerState<RouterStateUrl>;\r\n}\r\n\r\nexport const routerReducers: ActionReducerMap<State> = {\r\n    routerReducer: fromRouter.routerReducer\r\n};\r\n\r\nexport const getRouterState = createFeatureSelector<\r\n    fromRouter.RouterReducerState<RouterStateUrl>\r\n>(\"routerReducer\");\r\n\r\n// Extracts the data from the router state to our store.\r\nexport class CustomSerializer\r\n    implements fromRouter.RouterStateSerializer<RouterStateUrl> {\r\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n        // Taking the needed state of the router state to our store.\r\n        const { url } = routerState;\r\n        const { queryParams } = routerState.root;\r\n\r\n        let state: ActivatedRouteSnapshot = routerState.root;\r\n\r\n        while (state.firstChild) {\r\n            state = state.firstChild;\r\n        }\r\n\r\n        const { params } = state;\r\n\r\n        return { url, queryParams, params };\r\n    }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport {\r\n    StoreRouterConnectingModule,\r\n    RouterStateSerializer\r\n} from \"@ngrx/router-store\";\r\n\r\nimport { CustomSerializer } from \"./router-store\";\r\n\r\nimport { LoadRecipeResolverService } from \"./load-recipe-resolver.service\";\r\n\r\n@NgModule({\r\n    providers: [\r\n        LoadRecipeResolverService,\r\n        { provide: RouterStateSerializer, useClass: CustomSerializer }\r\n    ],\r\n    exports: [\r\n        // Syncs up the router store with the router.\r\n        StoreRouterConnectingModule\r\n    ]\r\n})\r\nexport class RoutingModule {}\r\n","module.exports = \"/* Top of the window */\\r\\n.header {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: stretch;\\r\\n}\\r\\n.header h1 {\\r\\n  margin-bottom: 0px;\\r\\n}\\r\\n.subtitle {\\r\\n  font-size: 18px;\\r\\n  color: rgba(0, 0, 0, 0.54);\\r\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\r\\n  font-style: italic;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n/* Content of the window */\\r\\n.dialog-content {\\r\\n  max-width: 700px;\\r\\n  width: 100%;\\r\\n}\\r\\n.strecth {\\r\\n  width: 96%;\\r\\n}\\r\\n.select {\\r\\n  width:90%;\\r\\n  display: flex;\\r\\n}\\r\\n.ingredient-field {\\r\\n  width: 100%;\\r\\n}\\r\\n.include-ingredient {\\r\\n  width: 15%;\\r\\n  margin-right: 5px;\\r\\n}\\r\\n.ingredient-checkbox {\\r\\n  margin-right: -16px;\\r\\n}\\r\\n.margin-top {\\r\\n  margin-top: 10px;\\r\\n}\\r\\n.cancel-padding-left {\\r\\n  margin-left: -21px;\\r\\n}\\r\\n.rating-label {\\r\\n    width: 115px;\\r\\n}\\r\\n.rating {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  font-size: 1.5em;\\r\\n  width: 99.3%;\\r\\n}\\r\\n.dialog-content .row {\\r\\n    width:100%;\\r\\n}\\r\\n.flex > mat-checkbox {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <div class=\\\"header\\\">\\r\\n    <h1 mat-dialog-title>Quelle(s) recette(s) désirez-vous voir?</h1>\\r\\n    <mat-icon class=\\\"clickable\\\" color=\\\"primary\\\" (click)=\\\"closeDialog()\\\">clear</mat-icon>\\r\\n  </div>\\r\\n  <p class=\\\"subtitle\\\">Choisissez quels critères seront utilisés pour la recherche.</p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"dialog-content\\\" mat-dialog-content>\\r\\n  <!-- Name -->\\r\\n  <div class=\\\"flex row\\\">\\r\\n    <mat-form-field class=\\\"strecth\\\">\\r\\n      <recipename-autocomplete-input placeholder=\\\"Nom de la recette\\\" name=\\\"name\\\" [(ngModel)]=\\\"searchCriteria.name\\\" (input)=\\\"searchCriteria.wantsName = true\\\"></recipename-autocomplete-input>\\r\\n    </mat-form-field>\\r\\n    <mat-checkbox [(ngModel)]=\\\"searchCriteria.wantsName\\\"></mat-checkbox>\\r\\n  </div>\\r\\n  <!-- Recipe Type -->\\r\\n  <div class=\\\"flex row\\\">\\r\\n    <mat-form-field class=\\\"strecth\\\">\\r\\n      <mat-select placeholder=\\\"Genre\\\" name=\\\"genre\\\" [(ngModel)]=\\\"searchCriteria.genre\\\" (selectionChange)=\\\"searchCriteria.wantsGenre = true\\\">\\r\\n         <mat-option *ngFor=\\\"let genre of genres\\\" [value]=\\\"genre\\\">{{ genre }}</mat-option>\\r\\n       </mat-select>\\r\\n    </mat-form-field>\\r\\n    <mat-checkbox [(ngModel)]=\\\"searchCriteria.wantsGenre\\\"></mat-checkbox>\\r\\n  </div>\\r\\n\\r\\n  <!-- Total Time -->\\r\\n  <div class=\\\"flex row\\\">\\r\\n    <mat-form-field class=\\\"strecth\\\">\\r\\n      <time-input placeholder=\\\"Temps total\\\" name=\\\"totalTime\\\" [(ngModel)]=\\\"searchCriteria.totalTime\\\" (keydown)=\\\"searchCriteria.wantsTotalTime = true\\\"></time-input>\\r\\n      <mat-icon matSuffix>schedule</mat-icon>\\r\\n    </mat-form-field>\\r\\n    <mat-checkbox [(ngModel)]=\\\"searchCriteria.wantsTotalTime\\\"></mat-checkbox>\\r\\n  </div>\\r\\n\\r\\n  <!-- Ingredients -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <label for=\\\"search-ingredients\\\"><h3 class=\\\"no-margin-bottom no-bold\\\">Ingrédients</h3></label>\\r\\n    <mat-list id=\\\"search-ingredients\\\">\\r\\n      <mat-list-item class=\\\"ingredient\\\" *ngFor=\\\"let ingredient of searchCriteria.ingredients; index as i\\\">\\r\\n          <mat-icon class=\\\"cancel-padding-left\\\" mat-list-icon>restaurant</mat-icon>\\r\\n          <div mat-line>\\r\\n            <mat-form-field class=\\\"ingredient-field\\\">\\r\\n              <ingredient-autocomplete-input placeholder=\\\"Nom de l'ingrédient\\\" [(ngModel)]=\\\"ingredient.name\\\" (input)=\\\"searchCriteria.wantsIngredient[i] = true\\\"></ingredient-autocomplete-input>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <mat-form-field class=\\\"include-ingredient\\\" matTooltip=\\\"Disposez vous de cet ingrédient?\\\">\\r\\n            <mat-select [(ngModel)]=\\\"ingredient.include\\\" (selectionChange)=\\\"searchCriteria.wantsIngredient[i] = true\\\">\\r\\n               <mat-option [value]=\\\"true\\\">Inclure</mat-option>\\r\\n               <mat-option [value]=\\\"false\\\">Exclure</mat-option>\\r\\n             </mat-select>\\r\\n          </mat-form-field>\\r\\n          <mat-checkbox class=\\\"ingredient-checkbox\\\" [(ngModel)]=\\\"searchCriteria.wantsIngredient[i]\\\"></mat-checkbox>\\r\\n      </mat-list-item>\\r\\n    </mat-list>\\r\\n    <div class=\\\"align-end\\\">\\r\\n      <button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"addIngredient()\\\" mat-button>Ajoutez un ingrédient</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Rating -->\\r\\n  <div class=\\\"flex row\\\">\\r\\n    <label for=\\\"search-rating\\\"><h3 class=\\\"no-margin no-bold rating-label\\\">Note (et plus)</h3></label>\\r\\n    <div class=\\\"rating\\\">\\r\\n      <star-rating id=\\\"search-rating\\\"[(ngModel)]=\\\"searchCriteria.rating\\\" (change)=\\\"searchCriteria.wantsRating = true\\\"></star-rating>\\r\\n      <mat-checkbox [(ngModel)]=\\\"searchCriteria.wantsRating\\\" (change)=\\\"validateRating()\\\"></mat-checkbox>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button class=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"search()\\\" [disabled]=\\\"!isOneSearchCriterionActive()\\\" mat-button>\\r\\n    <mat-icon>search</mat-icon>Rechercher\\r\\n  </button>\\r\\n  <button class=\\\"button\\\" color=\\\"primary\\\" mat-button mat-dialog-close>Annuler</button>\\r\\n</mat-dialog-actions>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef } from \"@angular/material\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { GenresService } from \"../../recipes/genre/shared/genre.service\";\r\nimport { Ingredient } from \"../../recipes/ingredients/shared/ingredient.model\";\r\nimport { SearchIntent } from \"./shared\";\r\n\r\n@Component({\r\n    selector: \"mcb-advanced-recipe-search\",\r\n    templateUrl: \"./advanced-recipe-search.component.html\",\r\n    styleUrls: [\"./advanced-recipe-search.component.css\"]\r\n})\r\nexport class AdvancedRecipeSearchComponent implements OnInit {\r\n    searchCriteria = {\r\n        name: \"\",\r\n        ingredients: [],\r\n        genre: \"\",\r\n        rating: 0,\r\n        totalTime: 0,\r\n        wantsName: false,\r\n        wantsIngredient: [],\r\n        wantsGenre: false,\r\n        wantsRating: false,\r\n        wantsTotalTime: false\r\n    };\r\n\r\n    genres: string[];\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<AdvancedRecipeSearchComponent>,\r\n        private genresService: GenresService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        // Subscribing to the needed data stores\r\n        this.genresService.genres.subscribe(genres => (this.genres = genres));\r\n\r\n        this.addIngredient();\r\n    }\r\n\r\n    addIngredient() {\r\n        this.searchCriteria.ingredients.push({ name: \"\", include: true });\r\n        this.searchCriteria.wantsIngredient.push(false);\r\n    }\r\n\r\n    removeIngredient(index: number) {\r\n        this.searchCriteria.ingredients.splice(index, 1);\r\n    }\r\n\r\n    validateRating() {\r\n        if (this.searchCriteria.rating <= 0) {\r\n            this.searchCriteria.rating = 1;\r\n        }\r\n    }\r\n\r\n    search(): void  {\r\n        // First of, we need to get the search intent, which is a clean version of\r\n        // the search criteria. Since it goes throught the network, we need to only keep the minimum.\r\n        const searchIntent: SearchIntent = {\r\n            name: null,\r\n            genre: null,\r\n            rating: null,\r\n            totalTime: null,\r\n            ingredients: []\r\n        };\r\n\r\n        if (this.searchCriteria.wantsName) {\r\n            searchIntent.name = this.searchCriteria.name;\r\n        }\r\n\r\n        if (this.searchCriteria.wantsGenre) {\r\n            searchIntent.genre = this.searchCriteria.genre;\r\n        }\r\n\r\n        if (this.searchCriteria.wantsRating) {\r\n            searchIntent.rating = this.searchCriteria.rating;\r\n        }\r\n\r\n        if (this.searchCriteria.wantsTotalTime) {\r\n            searchIntent.totalTime = this.searchCriteria.totalTime;\r\n        }\r\n\r\n        for (let i = 0; i < this.searchCriteria.ingredients.length; ++i) {\r\n            if (this.searchCriteria.wantsIngredient[i]) {\r\n                searchIntent.ingredients.push(\r\n                    this.searchCriteria.ingredients[i]\r\n                );\r\n            }\r\n        }\r\n\r\n        this.closeDialog(searchIntent);\r\n    }\r\n\r\n    isOneSearchCriterionActive() {\r\n        let atLeastOneIngredientToSearch = false;\r\n\r\n        for (\r\n            let i = 0;\r\n            i < this.searchCriteria.ingredients.length &&\r\n            !atLeastOneIngredientToSearch;\r\n            ++i\r\n        ) {\r\n            if (this.searchCriteria.wantsIngredient[i]) {\r\n                atLeastOneIngredientToSearch = true;\r\n            }\r\n        }\r\n\r\n        // At least one criterion must be active\r\n        return (\r\n            this.searchCriteria.wantsName ||\r\n            this.searchCriteria.wantsGenre ||\r\n            this.searchCriteria.wantsRating ||\r\n            this.searchCriteria.wantsTotalTime ||\r\n            atLeastOneIngredientToSearch\r\n        );\r\n    }\r\n\r\n    closeDialog(closeValue?) {\r\n        this.dialogRef.close(closeValue);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatDialogModule,\r\n         MatIconModule,\r\n         MatButtonModule,\r\n         MatInputModule,\r\n         MatAutocompleteModule,\r\n         MatCheckboxModule,\r\n         MatSelectModule,\r\n         MatListModule,\r\n         MatTooltipModule\r\n       } from '@angular/material';\r\nimport { AdvancedRecipeSearchComponent } from './advanced-recipe-search.component';\r\nimport { CustomListBoxModule } from '../../controls/custom-listbox/custom-listbox.module';\r\nimport { StarRatingModule } from './../../controls/star-rating/star-rating.module';\r\nimport { TimeInputModule } from './../../controls/time-input/time-input.module';\r\nimport { AutocompleteInputModule } from './../../controls/autocomplete-input/autocomplete-input.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    CustomListBoxModule,\r\n    StarRatingModule,\r\n    TimeInputModule,\r\n    AutocompleteInputModule\r\n  ],\r\n  declarations: [\r\n    AdvancedRecipeSearchComponent\r\n  ],\r\n  exports: [ AdvancedRecipeSearchComponent ]\r\n})\r\nexport class AdvancedRecipeSearchModule { }\r\n","export * from './search-intent';\r\nexport * from './search-intent-matcher';\r\n","import { SearchIntent } from \"./search-intent\";\r\nimport { Recipe } from \"../../../recipes/shared/recipe.model\";\r\n\r\nexport class SearchIntentMatcher {\r\n\r\n    static isRecipeMatchingIntent(\r\n        recipe: Recipe,\r\n        intent: SearchIntent\r\n    ): boolean {\r\n        const genreIsMatching =\r\n            !intent.genre || recipe.genre.indexOf(intent.genre) !== -1;\r\n\r\n        const nameIsMatching =\r\n            !intent.name || recipe.name.indexOf(intent.name) !== -1;\r\n\r\n        const ratingIsMatching =\r\n            !intent.rating || recipe.rating >= intent.rating;\r\n\r\n        const totalTimeIsMatching =\r\n            !intent.totalTime ||\r\n            recipe.prepTime + recipe.cookTime + recipe.cooldownTime <=\r\n                intent.totalTime;\r\n\r\n        // Is the recipe matching the incredient search\r\n        const ingredientsAreMatching =\r\n            !intent.ingredients ||\r\n            intent.ingredients.every(searchedIngredient => {\r\n                const isIngredientInRecipe =\r\n                    recipe.ingredientSection.findIndex(\r\n                        section =>\r\n                            section.ingredients.findIndex(ingredient =>\r\n                                ingredient.name.includes(\r\n                                    searchedIngredient.name\r\n                                )\r\n                            ) !== -1\r\n                    ) !== -1;\r\n\r\n                return searchedIngredient.include\r\n                    ? isIngredientInRecipe\r\n                    : !isIngredientInRecipe;\r\n            });\r\n\r\n        return (\r\n            genreIsMatching &&\r\n            nameIsMatching &&\r\n            ratingIsMatching &&\r\n            totalTimeIsMatching &&\r\n            ingredientsAreMatching\r\n        );\r\n    }\r\n}\r\n","module.exports = \".sidenav-content {\\r\\n    min-width: 260px;\\r\\n}\\r\\n\\r\\n.item-text {\\r\\n    margin-left: 24px;\\r\\n}\\r\\n\"","module.exports = \"<mat-nav-list class=\\\"sidenav-content\\\">\\r\\n    <a [routerLink]=\\\"item.routerLink\\\" (click)=\\\"emitClick()\\\" *ngFor=\\\"let item of items\\\" mat-list-item>\\r\\n        <mat-icon color=\\\"primary\\\" mat-list-icon>{{ item.icon }}</mat-icon>\\r\\n        <span class=\\\"item-text\\\">{{ item.text }}</span>\\r\\n    </a>\\r\\n</mat-nav-list>\\r\\n\"","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\n\r\ninterface SidenavItem {\r\n    text: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\n@Component({\r\n    selector: \"mcb-sidenav-content\",\r\n    templateUrl: \"./sidenav-content.component.html\",\r\n    styleUrls: [\"./sidenav-content.component.css\"]\r\n})\r\nexport class SidenavContentComponent implements OnInit {\r\n    @Output() itemClick = new EventEmitter();\r\n\r\n    items: SidenavItem[] = [\r\n        {\r\n            text: \"Accueil\",\r\n            routerLink: ['/home'],\r\n            icon: \"home\"\r\n        },\r\n        {\r\n            text: \"Mes recettes\",\r\n            routerLink: ['/recipes'],\r\n            icon: \"library_books\"\r\n        },\r\n        {\r\n            text: \"Créer une recette\",\r\n            routerLink: ['/recipe/create'],\r\n            icon: \"note_add\"\r\n        },\r\n    ];\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit() {}\r\n\r\n    emitClick(): void {\r\n        this.itemClick.emit();\r\n    }\r\n}\r\n","module.exports = \".profile-picture {\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    border-radius: 5px;\\r\\n    margin-right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<!-- If a user is logged in -->\\r\\n<button color=\\\"secondary\\\" (click)=\\\"logout.emit()\\\" *ngIf=\\\"user\\\" mat-button>\\r\\n    <img class=\\\"profile-picture\\\" [src]=\\\"user.profilePicture? user.profilePicture : ''\\\">\\r\\n    <span>Bonjour {{user.firstName}}</span>\\r\\n</button>\\r\\n<!-- If no user is logged in -->\\r\\n<button color=\\\"secondary\\\" (click)=\\\"login.emit()\\\" *ngIf=\\\"!user\\\" mat-button>Se connecter</button>\\r\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from \"@angular/core\";\r\nimport { User } from \"../../models/user.model\";\r\n\r\n@Component({\r\n    selector: \"mcb-avatar\",\r\n    templateUrl: \"./avatar.component.html\",\r\n    styleUrls: [\"./avatar.component.css\"]\r\n})\r\nexport class AvatarComponent implements OnInit {\r\n    @Input() user: User;\r\n\r\n    @Output() logout = new EventEmitter<void>();\r\n    @Output() login = new EventEmitter<void>();\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit() {}\r\n}\r\n","import { Component, Input, OnDestroy } from '@angular/core';\r\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\r\nimport { MatSidenav } from '@angular/material';\r\nimport { AuthenticationService } from '../core/authentication/authentication.service';\r\nimport { User } from '../core/authentication/user.model';\r\n// Ngrx Store\r\nimport { Store } from \"@ngrx/store\";\r\nimport * as fromStore from \"../core/store\";\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Component({\r\n    selector: 'mcb-top-nav',\r\n    templateUrl: 'top-nav.html',\r\n    styleUrls: ['top-nav.css']\r\n})\r\nexport class TopNavComponent implements OnDestroy {\r\n    @Input() sideNavRef: MatSidenav;\r\n\r\n    user$: Observable<User>;\r\n\r\n    isUserLoggedIn$: Observable<boolean>;\r\n\r\n    NO_LOGIN_ROUTES: Array<string> = [\"/login\", \"/\"];\r\n\r\n    constructor(private authService: AuthenticationService,\r\n        private router: Router,\r\n        private store: Store<fromStore.DataState>) {\r\n\r\n        this.user$ = this.store.select(fromStore.getUser);\r\n        this.isUserLoggedIn$ = this.store.select(fromStore.getLoggedIn);\r\n    }\r\n\r\n    disconnect() {\r\n        this.authService.disconnect();\r\n    }\r\n\r\n    login() {\r\n        // Redirect to login window.\r\n        this.router.navigateByUrl('/login');\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authService.currentUserChanged.unsubscribe();\r\n    }\r\n\r\n    private canDisplayLogin(): boolean {\r\n        return this.NO_LOGIN_ROUTES.indexOf(this.router.url) === -1;\r\n    }\r\n}\r\n","module.exports = \".main-toolbar {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n\\r\\n.no-style {\\r\\n  color: inherit;\\r\\n  text-decoration: none; /* no underline */\\r\\n}\\r\\n\\r\\n.margin-left {\\r\\n  margin-left: 20px;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar class=\\\"main-toolbar\\\" color=\\\"primary\\\">\\r\\n  <div>\\r\\n    <button *ngIf=\\\"sideNavRef && isUserLoggedIn$ | async\\\" (click)=\\\"sideNavRef.toggle()\\\" mat-icon-button>\\r\\n        <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n    <a class=\\\"no-style margin-left\\\" [routerLink]=\\\"['/recipes']\\\">MyCookBook</a>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <div *ngIf=\\\"isUserLoggedIn$ | async\\\">\\r\\n      <mcb-avatar [user]=\\\"user$ | async\\\" (login)=\\\"login()\\\" (logout)=\\\"disconnect()\\\"></mcb-avatar>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n\"","import { Directive, OnInit, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[onlyNumber]'\r\n})\r\nexport class OnlyNumber {\r\n  regexStr = '^[-]?[0-9]+$';\r\n\r\n\r\n  private oldValue:number;\r\n\r\n  // Allow key codes for special events. Reflect :\r\n  // Backspace, tab, end, home\r\n  private specialKeys: Array<string> = [ 'Backspace', 'Tab', 'Control', 'ArrowLeft', 'ArrowRight', 'ArrowDown', 'ArrowUp' ];\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    if(!this.el.nativeElement.min)\r\n      this.el.nativeElement.min = Number.NEGATIVE_INFINITY;\r\n    if(!this.el.nativeElement.max)\r\n      this.el.nativeElement.max = Number.MAX_VALUE;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\r\n    const carretPosition = this.el.nativeElement.selectionStart;\r\n    const currentValue = this.el.nativeElement.value;\r\n\r\n    let e = <KeyboardEvent> event;\r\n    this.oldValue = this.el.nativeElement.value;\r\n    // Allow Backspace, tab, end, and home keys\r\n    if (this.specialKeys.indexOf(e.key) !== -1) {\r\n        return;\r\n    }\r\n\r\n    let regEx =  new RegExp(this.regexStr);\r\n    let newValue = currentValue.substr(0, carretPosition) + e.key + currentValue.substr(carretPosition);\r\n\r\n    if(regEx.test(newValue)) {\r\n      if(this.handleMaxLimit(newValue) || this.handleMinLimit(newValue))\r\n        e.preventDefault();\r\n      // let it happen, don't do anything\r\n      return;\r\n    }\r\n    else\r\n       e.preventDefault();\r\n  }\r\n\r\n  private handleMaxLimit(newValue:string):Boolean {\r\n    return Number.parseInt(newValue) > this.el.nativeElement.max;\r\n  }\r\n\r\n  private handleMinLimit(newValue:string):Boolean {\r\n    return Number.parseInt(newValue) < this.el.nativeElement.min;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n\r\n    transform(value: string, comparator: string): string {\r\n        if (comparator) {\r\n            const regEx = new RegExp(comparator, \"i\");\r\n            const result = value.match(regEx);\r\n            return value.replace(regEx, `<strong>${result}</strong>`);\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { OnlyNumber } from './only-number.directive';\r\nimport { HighlightPipe } from './pipes/highlight/highlight.pipe';\r\n\r\n@NgModule({\r\n  declarations: [OnlyNumber, HighlightPipe],\r\n  exports: [OnlyNumber, HighlightPipe]\r\n})\r\nexport class UtilsModule { }\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:4200/api\" // In dev, we use the proxy to fetch the api. This is not the\r\n                  // case with prod server has we don't have access to the proxy.\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}